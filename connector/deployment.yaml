#
# Copyright (c) 2021 T-Systems International GmbH (Catena-X Consortium)
#
# See the AUTHORS file(s) distributed with this work for additional
# information regarding authorship.
#
# See the LICENSE file(s) distributed with this work for
# additional information regarding license terms.
#

# K8 Manifest to expose a connector service in a particular role/configuration (the $ROLE environment variable)
# being configured using the secrets/configs/certificate stores in "connector-config" (protected  by ${KEYSTORE_PASSWORD})
# and being tied to an owned backend postgres database/service ($POSTGRES_RESOURCE_NAME, ${HTTPUSER}, ${POSTGREPARTSMASTERPASSWORD})
# Use envsubst before applying the descriptor

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dataspace-connector${ROLE}
  name: dataspace-connector${ROLE}
  namespace: dataspace-connector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dataspace-connector${ROLE}
  template:
    metadata:
      labels:
        app: dataspace-connector${ROLE}
    spec:
      containers:
        - image: ${CONTAINER_REGISTRY}/ids/dataspace-connector:${VERSION}
          imagePullPolicy: ${IMAGE_PULL_POLICY}
          name: dataspace-connector
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://${POSTGRES_RESOURCE_NAME}.postgres.database.azure.com:5432/${ROLE}connector?user=${CATENAX_ADMIN}@${POSTGRES_RESOURCE_NAME}&password=${CATENAX_ADMIN_PASSWORD}&sslmode=require"
            - name: SPRING_DATASOURCE_PLATFORM
              value: "postgres"
            - name: SPRING_DATASOURCE_DRIVER-CLASS-NAME
              value: "org.postgresql.Driver"
            - name: SPRING_JPA_DATABASE-PLATFORM
              value: "org.hibernate.dialect.PostgreSQLDialect"
            - name: CONFIGURATION_PATH
              value: "file:///connector-config/config${ROLE}.json"  
            - name: CONFIGURATION_KEYSTOREPASSWORD
              value: "${KEYSTORE_PASSWORD}"
            - name: CONFIGURATION_TRUSTSTOREPASSWORD
              value: "${KEYSTORE_PASSWORD}"
            - name: SERVER_SSL_ENABLED
              value: "false"
            - name: PORTAINER_APPLICATION_USERNAME
              valueFrom:
                secretKeyRef:
                  key: connector_user
                  name: connector-secret
            - name: PORTAINER_APPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: connector_user_password
                  name: connector-secret
            - name: PORTAINER_APPLICATION_PASSWORD          
              valueFrom:
                secretKeyRef:
                  key: connector_user_password
                  name: connector-secret
            - name: SPRING_SECURITY_USER_NAME
              valueFrom:
                secretKeyRef:
                  key: connector_admin
                  name: connector-secret
            - name: SPRING_SECURITY_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: connector_admin_password
                  name: connector-secret
            - name: SPRING_SECURITY_APP_NAME
              valueFrom:
                secretKeyRef:
                  key: connector_user
                  name: connector-secret
            - name: SPRING_SECURITY_APP_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: connector_user_password
                  name: connector-secret
          volumeMounts:
            - name: certs-volume
              mountPath: /connector-config
          resources:
            requests:
              memory: 512Mi
              cpu: 0.1
            limits:
              memory: 2Gi
              cpu: 1
      volumes:
        - name: certs-volume
          secret:
            secretName: connector-config
---
apiVersion: v1
kind: Service
metadata:
  name: dataspace-connector${ROLE}
  namespace: dataspace-connector
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: dataspace-connector${ROLE}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dataspace-connector-ingress${ROLE}
  namespace: dataspace-connector
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-service
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
spec:
  ingressClassName: service
  tls:
  - hosts:
    - $CATENA_SERVICE_URL
    secretName: certificate${ROLE}-secret
  rules:
  - host: $CATENA_SERVICE_URL
    http:
      paths:
      - path: /connector${ROLE}(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: dataspace-connector${ROLE}
            port:
              number: 8080    
