version: '3.8'

services:
  db:
    image: 'postgres:11.13-alpine'
    container_name: db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=compose-postgres
      - POSTGRES_PASSWORD=compose-postgres

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    tmpfs: "/var/lib/zookeeper/log"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    container_name: kafka
    ports:
      - 29092:29092
    environment:
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
      KAFKA_TOOLS_LOG4J_LOGLEVEL: ERROR
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    tmpfs:
      - /var/lib/kafka/data
      - /etc/kafka/secrets

  broker-proxy:
    build:
      context: .
      target: broker-proxy
      args:
        BUILD_TARGET: broker-proxy
    depends_on:
      - kafka
    profiles:
      - broker-proxy
    container_name: broker-proxy
    ports:
      - 8081:8081
      - 4005:4005
    environment:
      APPLICATIONINSIGHTS_CONNECTION_STRING: "${APPLICATIONINSIGHTS_CONNECTION_STRING}"
      APPLICATIONINSIGHTS_ROLE_NAME: broker-proxy
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  prs:
    build:
      context: .
      target: prs-api
      args:
        BUILD_TARGET: prs-api
    depends_on:
      - db
    profiles:
      - prs
    container_name: prs
    ports:
      - 8080:8080
      - 4004:4004
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db/postgres
      APPLICATIONINSIGHTS_CONNECTION_STRING: "${APPLICATIONINSIGHTS_CONNECTION_STRING}"
      APPLICATIONINSIGHTS_ROLE_NAME: PRS
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  connector-provider:
    profiles:
      - connector
    container_name: provider
    build:
      context: .
      target: prs-connector-provider
      args:
        BUILD_TARGET: prs-connector-provider
    environment:
      APPLICATIONINSIGHTS_CONNECTION_STRING: "${APPLICATIONINSIGHTS_CONNECTION_STRING}"
      PRS_API_URL: "http://prs:8080"
      APPLICATIONINSIGHTS_ROLE_NAME: connector-provider
    ports:
      - 8181:8181
      - 4006:4006

  connector-consumer:
    profiles:
      - connector
    container_name: consumer
    build:
      context: .
      target: prs-connector-consumer
      args:
        BUILD_TARGET: prs-connector-consumer
    environment:
      APPLICATIONINSIGHTS_CONNECTION_STRING: "${APPLICATIONINSIGHTS_CONNECTION_STRING}"
      APPLICATIONINSIGHTS_ROLE_NAME: connector-consumer
      edc.vault.clientid: ${edc_vault_clientid}
      edc.vault.tenantid: ${edc_vault_tenantid}
      edc.vault.certificate: /devlocal/cert.pfx
      edc.vault.name: ${edc_vault_name}
      edc.storage.account.name: ${edc_storage_account_name}
      prs.dataspace.partitions: /files/dataspace-partitions.json
      prs.dataspace.partition.deployments: /files/dataspace-deployments.json
    ports:
      - 9191:8181
      - 4007:4006
    volumes:
      - ./dev/local:/devlocal
      - ./dev/connector-integration-test-files:/files

  connector-integration-test:
    profiles:
      - connector
    container_name: connector-test
    image: adoptopenjdk:11-jre-hotspot
    command: dev-files/connector-integration-test.sh
    volumes:
      - ./dev:/dev-files

  kafkacat:
    image: confluentinc/cp-kafkacat:latest
    depends_on:
      - kafka
    profiles:
      - debug
    container_name: kafkacat
    command:
      - bash
      - -c
      - |
        while true
        do
            # Automatically retry, as kafkacat will initially fail until (1) kafka has started up (2) the topic has being created
            kafkacat -u -b kafka:9092 -C -G dev-kafkacat-debug catenax_events -f '\nKey (%K bytes): %k\n  Value (%S bytes): %s\n  Timestamp: %T\n  Partition: %p\n  Offset: %o\n  Headers: %h\n'
            sleep 10
        done

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
      - zookeeper
    profiles:
      - debug
    ports:
      - "9090:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  prometheus:
    image: prom/prometheus:v2.30.3
    container_name: prometheus
    volumes:
      - ./dev/prometheus/:/etc/prometheus/
    profiles:
      - debug
    ports:
      - 9091:9090
