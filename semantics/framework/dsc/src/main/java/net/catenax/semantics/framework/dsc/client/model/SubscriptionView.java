/*
 * Dataspace Connector
 * IDS Connector originally developed by the Fraunhofer ISST
 *
 * OpenAPI spec version: 6.2.0
 * Contact: info@dataspace-connector.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.catenax.semantics.framework.dsc.client.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.v3.oas.annotations.media.Schema;

import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
/**
 * SubscriptionView
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-09-08T16:15:16.333286600+02:00[Europe/Berlin]")
public class SubscriptionView {
  @JsonProperty("creationDate")
  private OffsetDateTime creationDate = null;

  @JsonProperty("modificationDate")
  private OffsetDateTime modificationDate = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("target")
  private String target = null;

  @JsonProperty("location")
  private String location = null;

  @JsonProperty("subscriber")
  private String subscriber = null;

  @JsonProperty("pushData")
  private Boolean pushData = null;

  @JsonProperty("idsProtocol")
  private Boolean idsProtocol = null;

  @JsonProperty("additional")
  private Map<String, String> additional = null;

  @JsonProperty("_links")
  private Links _links = null;

  public SubscriptionView creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @Schema(description = "")
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }

  public SubscriptionView modificationDate(OffsetDateTime modificationDate) {
    this.modificationDate = modificationDate;
    return this;
  }

   /**
   * Get modificationDate
   * @return modificationDate
  **/
  @Schema(description = "")
  public OffsetDateTime getModificationDate() {
    return modificationDate;
  }

  public void setModificationDate(OffsetDateTime modificationDate) {
    this.modificationDate = modificationDate;
  }

  public SubscriptionView title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @Schema(description = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public SubscriptionView description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public SubscriptionView target(String target) {
    this.target = target;
    return this;
  }

   /**
   * Get target
   * @return target
  **/
  @Schema(description = "")
  public String getTarget() {
    return target;
  }

  public void setTarget(String target) {
    this.target = target;
  }

  public SubscriptionView location(String location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @Schema(description = "")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public SubscriptionView subscriber(String subscriber) {
    this.subscriber = subscriber;
    return this;
  }

   /**
   * Get subscriber
   * @return subscriber
  **/
  @Schema(description = "")
  public String getSubscriber() {
    return subscriber;
  }

  public void setSubscriber(String subscriber) {
    this.subscriber = subscriber;
  }

  public SubscriptionView pushData(Boolean pushData) {
    this.pushData = pushData;
    return this;
  }

   /**
   * Get pushData
   * @return pushData
  **/
  @Schema(description = "")
  public Boolean isPushData() {
    return pushData;
  }

  public void setPushData(Boolean pushData) {
    this.pushData = pushData;
  }

  public SubscriptionView idsProtocol(Boolean idsProtocol) {
    this.idsProtocol = idsProtocol;
    return this;
  }

   /**
   * Get idsProtocol
   * @return idsProtocol
  **/
  @Schema(description = "")
  public Boolean isIdsProtocol() {
    return idsProtocol;
  }

  public void setIdsProtocol(Boolean idsProtocol) {
    this.idsProtocol = idsProtocol;
  }

  public SubscriptionView additional(Map<String, String> additional) {
    this.additional = additional;
    return this;
  }

  public SubscriptionView putAdditionalItem(String key, String additionalItem) {
    if (this.additional == null) {
      this.additional = new HashMap<>();
    }
    this.additional.put(key, additionalItem);
    return this;
  }

   /**
   * Get additional
   * @return additional
  **/
  @Schema(description = "")
  public Map<String, String> getAdditional() {
    return additional;
  }

  public void setAdditional(Map<String, String> additional) {
    this.additional = additional;
  }

  public SubscriptionView _links(Links _links) {
    this._links = _links;
    return this;
  }

   /**
   * Get _links
   * @return _links
  **/
  @Schema(description = "")
  public Links getLinks() {
    return _links;
  }

  public void setLinks(Links _links) {
    this._links = _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriptionView subscriptionView = (SubscriptionView) o;
    return Objects.equals(this.creationDate, subscriptionView.creationDate) &&
        Objects.equals(this.modificationDate, subscriptionView.modificationDate) &&
        Objects.equals(this.title, subscriptionView.title) &&
        Objects.equals(this.description, subscriptionView.description) &&
        Objects.equals(this.target, subscriptionView.target) &&
        Objects.equals(this.location, subscriptionView.location) &&
        Objects.equals(this.subscriber, subscriptionView.subscriber) &&
        Objects.equals(this.pushData, subscriptionView.pushData) &&
        Objects.equals(this.idsProtocol, subscriptionView.idsProtocol) &&
        Objects.equals(this.additional, subscriptionView.additional) &&
        Objects.equals(this._links, subscriptionView._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creationDate, modificationDate, title, description, target, location, subscriber, pushData, idsProtocol, additional, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriptionView {\n");
    
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    modificationDate: ").append(toIndentedString(modificationDate)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    subscriber: ").append(toIndentedString(subscriber)).append("\n");
    sb.append("    pushData: ").append(toIndentedString(pushData)).append("\n");
    sb.append("    idsProtocol: ").append(toIndentedString(idsProtocol)).append("\n");
    sb.append("    additional: ").append(toIndentedString(additional)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
