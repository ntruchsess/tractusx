/*
 * Dataspace Connector
 * IDS Connector originally developed by the Fraunhofer ISST
 *
 * OpenAPI spec version: 6.2.0
 * Contact: info@dataspace-connector.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.catenax.semantics.framework.dsc.client.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * Rule
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-09-08T16:15:16.333286600+02:00[Europe/Berlin]")@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type", visible = true )
@JsonSubTypes({
  @JsonSubTypes.Type(value = Permission.class, name = "Permission"),
  @JsonSubTypes.Type(value = Prohibition.class, name = "Prohibition"),
  @JsonSubTypes.Type(value = Duty.class, name = "Duty"),
})

public class Rule {
  @JsonProperty("properties")
  private Map<String, Object> properties = null;

  @JsonProperty("comment")
  private List<TypedLiteral> comment = null;

  @JsonProperty("label")
  private List<TypedLiteral> label = null;

  @JsonProperty("ids:target")
  private String idstarget = null;

  @JsonProperty("ids:assignee")
  private List<String> idsassignee = null;

  @JsonProperty("ids:assigner")
  private List<String> idsassigner = null;

  /**
   * Gets or Sets idsaction
   */
  public enum IdsactionEnum {
    AGGREGATE_BY_CONSUMER("https://w3id.org/idsa/code/AGGREGATE_BY_CONSUMER"),
    AGGREGATE_BY_PROVIDER("https://w3id.org/idsa/code/AGGREGATE_BY_PROVIDER"),
    ANONYMIZE("https://w3id.org/idsa/code/ANONYMIZE"),
    COMPENSATE("https://w3id.org/idsa/code/COMPENSATE"),
    DELETE("https://w3id.org/idsa/code/DELETE"),
    DISTRIBUTE("https://w3id.org/idsa/code/DISTRIBUTE"),
    ENCRYPT("https://w3id.org/idsa/code/ENCRYPT"),
    GRANT_USE("https://w3id.org/idsa/code/GRANT_USE"),
    LOG("https://w3id.org/idsa/code/LOG"),
    MODIFY("https://w3id.org/idsa/code/MODIFY"),
    NEXT_POLICY("https://w3id.org/idsa/code/NEXT_POLICY"),
    NOTIFY("https://w3id.org/idsa/code/NOTIFY"),
    READ("https://w3id.org/idsa/code/READ"),
    TRACK_PROVENANCE("https://w3id.org/idsa/code/TRACK_PROVENANCE"),
    USE("https://w3id.org/idsa/code/USE"),
    WRITE("https://w3id.org/idsa/code/WRITE");

    private String value;

    IdsactionEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static IdsactionEnum fromValue(String text) {
      for (IdsactionEnum b : IdsactionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("ids:action")
  private List<IdsactionEnum> idsaction = new ArrayList<>();

  @JsonProperty("ids:constraint")
  private List<OneOfRuleIdsconstraintItems> idsconstraint = null;

  @JsonProperty("ids:assetRefinement")
  private OneOfRuleIdsassetRefinement idsassetRefinement = null;

  @JsonProperty("ids:description")
  private List<TypedLiteral> idsdescription = null;

  @JsonProperty("ids:title")
  private List<TypedLiteral> idstitle = null;

  @JsonProperty("@id")
  private String _atId = null;

  @JsonTypeId
  private String _atType = null;

  public Rule properties(Map<String, Object> properties) {
    this.properties = properties;
    return this;
  }

  public Rule putPropertiesItem(String key, Object propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @Schema(description = "")
  public Map<String, Object> getProperties() {
    return properties;
  }

  public void setProperties(Map<String, Object> properties) {
    this.properties = properties;
  }

  public Rule comment(List<TypedLiteral> comment) {
    this.comment = comment;
    return this;
  }

  public Rule addCommentItem(TypedLiteral commentItem) {
    if (this.comment == null) {
      this.comment = new ArrayList<>();
    }
    this.comment.add(commentItem);
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @Schema(description = "")
  public List<TypedLiteral> getComment() {
    return comment;
  }

  public void setComment(List<TypedLiteral> comment) {
    this.comment = comment;
  }

  public Rule label(List<TypedLiteral> label) {
    this.label = label;
    return this;
  }

  public Rule addLabelItem(TypedLiteral labelItem) {
    if (this.label == null) {
      this.label = new ArrayList<>();
    }
    this.label.add(labelItem);
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @Schema(description = "")
  public List<TypedLiteral> getLabel() {
    return label;
  }

  public void setLabel(List<TypedLiteral> label) {
    this.label = label;
  }

  public Rule idstarget(String idstarget) {
    this.idstarget = idstarget;
    return this;
  }

   /**
   * Get idstarget
   * @return idstarget
  **/
  @Schema(description = "")
  public String getIdstarget() {
    return idstarget;
  }

  public void setIdstarget(String idstarget) {
    this.idstarget = idstarget;
  }

  public Rule idsassignee(List<String> idsassignee) {
    this.idsassignee = idsassignee;
    return this;
  }

  public Rule addIdsassigneeItem(String idsassigneeItem) {
    if (this.idsassignee == null) {
      this.idsassignee = new ArrayList<>();
    }
    this.idsassignee.add(idsassigneeItem);
    return this;
  }

   /**
   * Get idsassignee
   * @return idsassignee
  **/
  @Schema(description = "")
  public List<String> getIdsassignee() {
    return idsassignee;
  }

  public void setIdsassignee(List<String> idsassignee) {
    this.idsassignee = idsassignee;
  }

  public Rule idsassigner(List<String> idsassigner) {
    this.idsassigner = idsassigner;
    return this;
  }

  public Rule addIdsassignerItem(String idsassignerItem) {
    if (this.idsassigner == null) {
      this.idsassigner = new ArrayList<>();
    }
    this.idsassigner.add(idsassignerItem);
    return this;
  }

   /**
   * Get idsassigner
   * @return idsassigner
  **/
  @Schema(description = "")
  public List<String> getIdsassigner() {
    return idsassigner;
  }

  public void setIdsassigner(List<String> idsassigner) {
    this.idsassigner = idsassigner;
  }

  public Rule idsaction(List<IdsactionEnum> idsaction) {
    this.idsaction = idsaction;
    return this;
  }

  public Rule addIdsactionItem(IdsactionEnum idsactionItem) {
    this.idsaction.add(idsactionItem);
    return this;
  }

   /**
   * Get idsaction
   * @return idsaction
  **/
  @Schema(required = true, description = "")
  public List<IdsactionEnum> getIdsaction() {
    return idsaction;
  }

  public void setIdsaction(List<IdsactionEnum> idsaction) {
    this.idsaction = idsaction;
  }

  public Rule idsconstraint(List<OneOfRuleIdsconstraintItems> idsconstraint) {
    this.idsconstraint = idsconstraint;
    return this;
  }

  public Rule addIdsconstraintItem(OneOfRuleIdsconstraintItems idsconstraintItem) {
    if (this.idsconstraint == null) {
      this.idsconstraint = new ArrayList<>();
    }
    this.idsconstraint.add(idsconstraintItem);
    return this;
  }

   /**
   * Get idsconstraint
   * @return idsconstraint
  **/
  @Schema(description = "")
  public List<OneOfRuleIdsconstraintItems> getIdsconstraint() {
    return idsconstraint;
  }

  public void setIdsconstraint(List<OneOfRuleIdsconstraintItems> idsconstraint) {
    this.idsconstraint = idsconstraint;
  }

  public Rule idsassetRefinement(OneOfRuleIdsassetRefinement idsassetRefinement) {
    this.idsassetRefinement = idsassetRefinement;
    return this;
  }

   /**
   * Get idsassetRefinement
   * @return idsassetRefinement
  **/
  @Schema(description = "")
  public OneOfRuleIdsassetRefinement getIdsassetRefinement() {
    return idsassetRefinement;
  }

  public void setIdsassetRefinement(OneOfRuleIdsassetRefinement idsassetRefinement) {
    this.idsassetRefinement = idsassetRefinement;
  }

  public Rule idsdescription(List<TypedLiteral> idsdescription) {
    this.idsdescription = idsdescription;
    return this;
  }

  public Rule addIdsdescriptionItem(TypedLiteral idsdescriptionItem) {
    if (this.idsdescription == null) {
      this.idsdescription = new ArrayList<>();
    }
    this.idsdescription.add(idsdescriptionItem);
    return this;
  }

   /**
   * Get idsdescription
   * @return idsdescription
  **/
  @Schema(description = "")
  public List<TypedLiteral> getIdsdescription() {
    return idsdescription;
  }

  public void setIdsdescription(List<TypedLiteral> idsdescription) {
    this.idsdescription = idsdescription;
  }

  public Rule idstitle(List<TypedLiteral> idstitle) {
    this.idstitle = idstitle;
    return this;
  }

  public Rule addIdstitleItem(TypedLiteral idstitleItem) {
    if (this.idstitle == null) {
      this.idstitle = new ArrayList<>();
    }
    this.idstitle.add(idstitleItem);
    return this;
  }

   /**
   * Get idstitle
   * @return idstitle
  **/
  @Schema(description = "")
  public List<TypedLiteral> getIdstitle() {
    return idstitle;
  }

  public void setIdstitle(List<TypedLiteral> idstitle) {
    this.idstitle = idstitle;
  }

  public Rule _atId(String _atId) {
    this._atId = _atId;
    return this;
  }

   /**
   * Get _atId
   * @return _atId
  **/
  @Schema(required = true, description = "")
  public String getAtId() {
    return _atId;
  }

  public void setAtId(String _atId) {
    this._atId = _atId;
  }

  public Rule _atType(String _atType) {
    this._atType = _atType;
    return this;
  }

   /**
   * Get _atType
   * @return _atType
  **/
  @Schema(required = true, description = "")
  public String getAtType() {
    return _atType;
  }

  public void setAtType(String _atType) {
    this._atType = _atType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Rule rule = (Rule) o;
    return Objects.equals(this.properties, rule.properties) &&
        Objects.equals(this.comment, rule.comment) &&
        Objects.equals(this.label, rule.label) &&
        Objects.equals(this.idstarget, rule.idstarget) &&
        Objects.equals(this.idsassignee, rule.idsassignee) &&
        Objects.equals(this.idsassigner, rule.idsassigner) &&
        Objects.equals(this.idsaction, rule.idsaction) &&
        Objects.equals(this.idsconstraint, rule.idsconstraint) &&
        Objects.equals(this.idsassetRefinement, rule.idsassetRefinement) &&
        Objects.equals(this.idsdescription, rule.idsdescription) &&
        Objects.equals(this.idstitle, rule.idstitle) &&
        Objects.equals(this._atId, rule._atId) &&
        Objects.equals(this._atType, rule._atType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(properties, comment, label, idstarget, idsassignee, idsassigner, idsaction, idsconstraint, idsassetRefinement, idsdescription, idstitle, _atId, _atType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Rule {\n");
    
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    idstarget: ").append(toIndentedString(idstarget)).append("\n");
    sb.append("    idsassignee: ").append(toIndentedString(idsassignee)).append("\n");
    sb.append("    idsassigner: ").append(toIndentedString(idsassigner)).append("\n");
    sb.append("    idsaction: ").append(toIndentedString(idsaction)).append("\n");
    sb.append("    idsconstraint: ").append(toIndentedString(idsconstraint)).append("\n");
    sb.append("    idsassetRefinement: ").append(toIndentedString(idsassetRefinement)).append("\n");
    sb.append("    idsdescription: ").append(toIndentedString(idsdescription)).append("\n");
    sb.append("    idstitle: ").append(toIndentedString(idstitle)).append("\n");
    sb.append("    _atId: ").append(toIndentedString(_atId)).append("\n");
    sb.append("    _atType: ").append(toIndentedString(_atType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
