/*
 * Dataspace Connector
 * IDS Connector originally developed by the Fraunhofer ISST
 *
 * OpenAPI spec version: 6.2.0
 * Contact: info@dataspace-connector.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.catenax.semantics.framework.dsc.client.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.v3.oas.annotations.media.Schema;

import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
/**
 * ConfigurationView
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-09-08T16:15:16.333286600+02:00[Europe/Berlin]")
public class ConfigurationView {
  @JsonProperty("creationDate")
  private OffsetDateTime creationDate = null;

  @JsonProperty("modificationDate")
  private OffsetDateTime modificationDate = null;

  @JsonProperty("connectorId")
  private String connectorId = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("defaultEndpoint")
  private String defaultEndpoint = null;

  @JsonProperty("version")
  private String version = null;

  @JsonProperty("curator")
  private String curator = null;

  @JsonProperty("maintainer")
  private String maintainer = null;

  @JsonProperty("inboundModelVersion")
  private List<String> inboundModelVersion = null;

  @JsonProperty("outboundModelVersion")
  private String outboundModelVersion = null;

  /**
   * Gets or Sets securityProfile
   */
  public enum SecurityProfileEnum {
    BASE_SECURITY("Base Security"),
    TRUST_PLUS_SECURITY("Trust Plus Security"),
    TRUST_SECURITY("Trust Security");

    private String value;

    SecurityProfileEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static SecurityProfileEnum fromValue(String text) {
      for (SecurityProfileEnum b : SecurityProfileEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("securityProfile")
  private SecurityProfileEnum securityProfile = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    FAULTY("Faulty"),
    OFFLINE("Offline"),
    ONLINE("Online");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("status")
  private StatusEnum status = null;

  /**
   * Gets or Sets logLevel
   */
  public enum LogLevelEnum {
    OFF("Off"),
    TRACE("Trace"),
    DEBUG("Debug"),
    INFO("Info"),
    WARN("Warn"),
    ERROR("Error");

    private String value;

    LogLevelEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static LogLevelEnum fromValue(String text) {
      for (LogLevelEnum b : LogLevelEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("logLevel")
  private LogLevelEnum logLevel = null;

  /**
   * Gets or Sets deployMode
   */
  public enum DeployModeEnum {
    PRODUCTIVE("Productive"),
    TEST("Test");

    private String value;

    DeployModeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static DeployModeEnum fromValue(String text) {
      for (DeployModeEnum b : DeployModeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("deployMode")
  private DeployModeEnum deployMode = null;

  @JsonProperty("proxy")
  private ProxyView proxy = null;

  @JsonProperty("trustStore")
  private TruststoreView trustStore = null;

  @JsonProperty("keyStore")
  private KeystoreView keyStore = null;

  @JsonProperty("_links")
  private Links _links = null;

  public ConfigurationView creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @Schema(description = "")
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }

  public ConfigurationView modificationDate(OffsetDateTime modificationDate) {
    this.modificationDate = modificationDate;
    return this;
  }

   /**
   * Get modificationDate
   * @return modificationDate
  **/
  @Schema(description = "")
  public OffsetDateTime getModificationDate() {
    return modificationDate;
  }

  public void setModificationDate(OffsetDateTime modificationDate) {
    this.modificationDate = modificationDate;
  }

  public ConfigurationView connectorId(String connectorId) {
    this.connectorId = connectorId;
    return this;
  }

   /**
   * Get connectorId
   * @return connectorId
  **/
  @Schema(description = "")
  public String getConnectorId() {
    return connectorId;
  }

  public void setConnectorId(String connectorId) {
    this.connectorId = connectorId;
  }

  public ConfigurationView title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @Schema(description = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public ConfigurationView description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ConfigurationView defaultEndpoint(String defaultEndpoint) {
    this.defaultEndpoint = defaultEndpoint;
    return this;
  }

   /**
   * Get defaultEndpoint
   * @return defaultEndpoint
  **/
  @Schema(description = "")
  public String getDefaultEndpoint() {
    return defaultEndpoint;
  }

  public void setDefaultEndpoint(String defaultEndpoint) {
    this.defaultEndpoint = defaultEndpoint;
  }

  public ConfigurationView version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public ConfigurationView curator(String curator) {
    this.curator = curator;
    return this;
  }

   /**
   * Get curator
   * @return curator
  **/
  @Schema(description = "")
  public String getCurator() {
    return curator;
  }

  public void setCurator(String curator) {
    this.curator = curator;
  }

  public ConfigurationView maintainer(String maintainer) {
    this.maintainer = maintainer;
    return this;
  }

   /**
   * Get maintainer
   * @return maintainer
  **/
  @Schema(description = "")
  public String getMaintainer() {
    return maintainer;
  }

  public void setMaintainer(String maintainer) {
    this.maintainer = maintainer;
  }

  public ConfigurationView inboundModelVersion(List<String> inboundModelVersion) {
    this.inboundModelVersion = inboundModelVersion;
    return this;
  }

  public ConfigurationView addInboundModelVersionItem(String inboundModelVersionItem) {
    if (this.inboundModelVersion == null) {
      this.inboundModelVersion = new ArrayList<>();
    }
    this.inboundModelVersion.add(inboundModelVersionItem);
    return this;
  }

   /**
   * Get inboundModelVersion
   * @return inboundModelVersion
  **/
  @Schema(description = "")
  public List<String> getInboundModelVersion() {
    return inboundModelVersion;
  }

  public void setInboundModelVersion(List<String> inboundModelVersion) {
    this.inboundModelVersion = inboundModelVersion;
  }

  public ConfigurationView outboundModelVersion(String outboundModelVersion) {
    this.outboundModelVersion = outboundModelVersion;
    return this;
  }

   /**
   * Get outboundModelVersion
   * @return outboundModelVersion
  **/
  @Schema(description = "")
  public String getOutboundModelVersion() {
    return outboundModelVersion;
  }

  public void setOutboundModelVersion(String outboundModelVersion) {
    this.outboundModelVersion = outboundModelVersion;
  }

  public ConfigurationView securityProfile(SecurityProfileEnum securityProfile) {
    this.securityProfile = securityProfile;
    return this;
  }

   /**
   * Get securityProfile
   * @return securityProfile
  **/
  @Schema(description = "")
  public SecurityProfileEnum getSecurityProfile() {
    return securityProfile;
  }

  public void setSecurityProfile(SecurityProfileEnum securityProfile) {
    this.securityProfile = securityProfile;
  }

  public ConfigurationView status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public ConfigurationView logLevel(LogLevelEnum logLevel) {
    this.logLevel = logLevel;
    return this;
  }

   /**
   * Get logLevel
   * @return logLevel
  **/
  @Schema(description = "")
  public LogLevelEnum getLogLevel() {
    return logLevel;
  }

  public void setLogLevel(LogLevelEnum logLevel) {
    this.logLevel = logLevel;
  }

  public ConfigurationView deployMode(DeployModeEnum deployMode) {
    this.deployMode = deployMode;
    return this;
  }

   /**
   * Get deployMode
   * @return deployMode
  **/
  @Schema(description = "")
  public DeployModeEnum getDeployMode() {
    return deployMode;
  }

  public void setDeployMode(DeployModeEnum deployMode) {
    this.deployMode = deployMode;
  }

  public ConfigurationView proxy(ProxyView proxy) {
    this.proxy = proxy;
    return this;
  }

   /**
   * Get proxy
   * @return proxy
  **/
  @Schema(description = "")
  public ProxyView getProxy() {
    return proxy;
  }

  public void setProxy(ProxyView proxy) {
    this.proxy = proxy;
  }

  public ConfigurationView trustStore(TruststoreView trustStore) {
    this.trustStore = trustStore;
    return this;
  }

   /**
   * Get trustStore
   * @return trustStore
  **/
  @Schema(description = "")
  public TruststoreView getTrustStore() {
    return trustStore;
  }

  public void setTrustStore(TruststoreView trustStore) {
    this.trustStore = trustStore;
  }

  public ConfigurationView keyStore(KeystoreView keyStore) {
    this.keyStore = keyStore;
    return this;
  }

   /**
   * Get keyStore
   * @return keyStore
  **/
  @Schema(description = "")
  public KeystoreView getKeyStore() {
    return keyStore;
  }

  public void setKeyStore(KeystoreView keyStore) {
    this.keyStore = keyStore;
  }

  public ConfigurationView _links(Links _links) {
    this._links = _links;
    return this;
  }

   /**
   * Get _links
   * @return _links
  **/
  @Schema(description = "")
  public Links getLinks() {
    return _links;
  }

  public void setLinks(Links _links) {
    this._links = _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigurationView configurationView = (ConfigurationView) o;
    return Objects.equals(this.creationDate, configurationView.creationDate) &&
        Objects.equals(this.modificationDate, configurationView.modificationDate) &&
        Objects.equals(this.connectorId, configurationView.connectorId) &&
        Objects.equals(this.title, configurationView.title) &&
        Objects.equals(this.description, configurationView.description) &&
        Objects.equals(this.defaultEndpoint, configurationView.defaultEndpoint) &&
        Objects.equals(this.version, configurationView.version) &&
        Objects.equals(this.curator, configurationView.curator) &&
        Objects.equals(this.maintainer, configurationView.maintainer) &&
        Objects.equals(this.inboundModelVersion, configurationView.inboundModelVersion) &&
        Objects.equals(this.outboundModelVersion, configurationView.outboundModelVersion) &&
        Objects.equals(this.securityProfile, configurationView.securityProfile) &&
        Objects.equals(this.status, configurationView.status) &&
        Objects.equals(this.logLevel, configurationView.logLevel) &&
        Objects.equals(this.deployMode, configurationView.deployMode) &&
        Objects.equals(this.proxy, configurationView.proxy) &&
        Objects.equals(this.trustStore, configurationView.trustStore) &&
        Objects.equals(this.keyStore, configurationView.keyStore) &&
        Objects.equals(this._links, configurationView._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creationDate, modificationDate, connectorId, title, description, defaultEndpoint, version, curator, maintainer, inboundModelVersion, outboundModelVersion, securityProfile, status, logLevel, deployMode, proxy, trustStore, keyStore, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigurationView {\n");
    
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    modificationDate: ").append(toIndentedString(modificationDate)).append("\n");
    sb.append("    connectorId: ").append(toIndentedString(connectorId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    defaultEndpoint: ").append(toIndentedString(defaultEndpoint)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    curator: ").append(toIndentedString(curator)).append("\n");
    sb.append("    maintainer: ").append(toIndentedString(maintainer)).append("\n");
    sb.append("    inboundModelVersion: ").append(toIndentedString(inboundModelVersion)).append("\n");
    sb.append("    outboundModelVersion: ").append(toIndentedString(outboundModelVersion)).append("\n");
    sb.append("    securityProfile: ").append(toIndentedString(securityProfile)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    logLevel: ").append(toIndentedString(logLevel)).append("\n");
    sb.append("    deployMode: ").append(toIndentedString(deployMode)).append("\n");
    sb.append("    proxy: ").append(toIndentedString(proxy)).append("\n");
    sb.append("    trustStore: ").append(toIndentedString(trustStore)).append("\n");
    sb.append("    keyStore: ").append(toIndentedString(keyStore)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
