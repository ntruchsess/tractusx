/*
 * Dataspace Connector
 * IDS Connector originally developed by the Fraunhofer ISST
 *
 * OpenAPI spec version: 6.2.0
 * Contact: info@dataspace-connector.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.catenax.semantics.framework.dsc.client.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * ArtifactDesc
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-09-08T16:15:16.333286600+02:00[Europe/Berlin]")
public class ArtifactDesc {
  @JsonProperty("title")
  private String title = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("remoteId")
  private String remoteId = null;

  @JsonProperty("remoteAddress")
  private String remoteAddress = null;

  @JsonProperty("accessUrl")
  private String accessUrl = null;

  @JsonProperty("basicAuth")
  private AuthenticationDesc basicAuth = null;

  @JsonProperty("apiKey")
  private AuthenticationDesc apiKey = null;

  @JsonProperty("value")
  private String value = null;

  @JsonProperty("automatedDownload")
  private Boolean automatedDownload = null;

  public ArtifactDesc title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @Schema(description = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public ArtifactDesc description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

   /**
   * Get remoteId
   * @return remoteId
  **/
  @Schema(description = "")
  public String getRemoteId() {
    return remoteId;
  }

   /**
   * Get remoteAddress
   * @return remoteAddress
  **/
  @Schema(description = "")
  public String getRemoteAddress() {
    return remoteAddress;
  }

  public ArtifactDesc accessUrl(String accessUrl) {
    this.accessUrl = accessUrl;
    return this;
  }

   /**
   * Get accessUrl
   * @return accessUrl
  **/
  @Schema(description = "")
  public String getAccessUrl() {
    return accessUrl;
  }

  public void setAccessUrl(String accessUrl) {
    this.accessUrl = accessUrl;
  }

  public ArtifactDesc basicAuth(AuthenticationDesc basicAuth) {
    this.basicAuth = basicAuth;
    return this;
  }

   /**
   * Get basicAuth
   * @return basicAuth
  **/
  @Schema(description = "")
  public AuthenticationDesc getBasicAuth() {
    return basicAuth;
  }

  public void setBasicAuth(AuthenticationDesc basicAuth) {
    this.basicAuth = basicAuth;
  }

  public ArtifactDesc apiKey(AuthenticationDesc apiKey) {
    this.apiKey = apiKey;
    return this;
  }

   /**
   * Get apiKey
   * @return apiKey
  **/
  @Schema(description = "")
  public AuthenticationDesc getApiKey() {
    return apiKey;
  }

  public void setApiKey(AuthenticationDesc apiKey) {
    this.apiKey = apiKey;
  }

  public ArtifactDesc value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @Schema(description = "")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public ArtifactDesc automatedDownload(Boolean automatedDownload) {
    this.automatedDownload = automatedDownload;
    return this;
  }

   /**
   * Get automatedDownload
   * @return automatedDownload
  **/
  @Schema(description = "")
  public Boolean isAutomatedDownload() {
    return automatedDownload;
  }

  public void setAutomatedDownload(Boolean automatedDownload) {
    this.automatedDownload = automatedDownload;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ArtifactDesc artifactDesc = (ArtifactDesc) o;
    return Objects.equals(this.title, artifactDesc.title) &&
        Objects.equals(this.description, artifactDesc.description) &&
        Objects.equals(this.remoteId, artifactDesc.remoteId) &&
        Objects.equals(this.remoteAddress, artifactDesc.remoteAddress) &&
        Objects.equals(this.accessUrl, artifactDesc.accessUrl) &&
        Objects.equals(this.basicAuth, artifactDesc.basicAuth) &&
        Objects.equals(this.apiKey, artifactDesc.apiKey) &&
        Objects.equals(this.value, artifactDesc.value) &&
        Objects.equals(this.automatedDownload, artifactDesc.automatedDownload);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, description, remoteId, remoteAddress, accessUrl, basicAuth, apiKey, value, automatedDownload);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ArtifactDesc {\n");
    
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    remoteId: ").append(toIndentedString(remoteId)).append("\n");
    sb.append("    remoteAddress: ").append(toIndentedString(remoteAddress)).append("\n");
    sb.append("    accessUrl: ").append(toIndentedString(accessUrl)).append("\n");
    sb.append("    basicAuth: ").append(toIndentedString(basicAuth)).append("\n");
    sb.append("    apiKey: ").append(toIndentedString(apiKey)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    automatedDownload: ").append(toIndentedString(automatedDownload)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
