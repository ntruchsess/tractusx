/*
 * Dataspace Connector
 * IDS Connector originally developed by the Fraunhofer ISST
 *
 * OpenAPI spec version: 6.2.0
 * Contact: info@dataspace-connector.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.catenax.semantics.idsadapter.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.v3.oas.annotations.media.Schema;
import net.catenax.semantics.idsadapter.client.model.Links;

import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * AppView
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-09-08T16:15:16.333286600+02:00[Europe/Berlin]")
public class AppView {
  @JsonProperty("creationDate")
  private OffsetDateTime creationDate = null;

  @JsonProperty("modificationDate")
  private OffsetDateTime modificationDate = null;

  @JsonProperty("remoteId")
  private String remoteId = null;

  @JsonProperty("remoteAddress")
  private String remoteAddress = null;

  @JsonProperty("docs")
  private String docs = null;

  @JsonProperty("envVariables")
  private String envVariables = null;

  @JsonProperty("storageConfig")
  private String storageConfig = null;

  /**
   * Gets or Sets supportedPolicies
   */
  public enum SupportedPoliciesEnum {
    PROVIDE_ACCESS("PROVIDE_ACCESS"),
    PROHIBIT_ACCESS("PROHIBIT_ACCESS"),
    N_TIMES_USAGE("N_TIMES_USAGE"),
    DURATION_USAGE("DURATION_USAGE"),
    USAGE_DURING_INTERVAL("USAGE_DURING_INTERVAL"),
    USAGE_UNTIL_DELETION("USAGE_UNTIL_DELETION"),
    USAGE_LOGGING("USAGE_LOGGING"),
    USAGE_NOTIFICATION("USAGE_NOTIFICATION"),
    CONNECTOR_RESTRICTED_USAGE("CONNECTOR_RESTRICTED_USAGE"),
    SECURITY_PROFILE_RESTRICTED_USAGE("SECURITY_PROFILE_RESTRICTED_USAGE");

    private String value;

    SupportedPoliciesEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static SupportedPoliciesEnum fromValue(String text) {
      for (SupportedPoliciesEnum b : SupportedPoliciesEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("supportedPolicies")
  private List<SupportedPoliciesEnum> supportedPolicies = null;

  @JsonProperty("keywords")
  private List<String> keywords = null;

  @JsonProperty("publisher")
  private String publisher = null;

  @JsonProperty("sovereign")
  private String sovereign = null;

  @JsonProperty("language")
  private String language = null;

  @JsonProperty("license")
  private String license = null;

  @JsonProperty("endpointDocumentation")
  private String endpointDocumentation = null;

  @JsonProperty("distributionService")
  private String distributionService = null;

  @JsonProperty("runtimeEnvironment")
  private String runtimeEnvironment = null;

  @JsonProperty("additional")
  private Map<String, String> additional = null;

  @JsonProperty("_links")
  private Links _links = null;

  public AppView creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @Schema(description = "")
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }

  public AppView modificationDate(OffsetDateTime modificationDate) {
    this.modificationDate = modificationDate;
    return this;
  }

   /**
   * Get modificationDate
   * @return modificationDate
  **/
  @Schema(description = "")
  public OffsetDateTime getModificationDate() {
    return modificationDate;
  }

  public void setModificationDate(OffsetDateTime modificationDate) {
    this.modificationDate = modificationDate;
  }

  public AppView remoteId(String remoteId) {
    this.remoteId = remoteId;
    return this;
  }

   /**
   * Get remoteId
   * @return remoteId
  **/
  @Schema(description = "")
  public String getRemoteId() {
    return remoteId;
  }

  public void setRemoteId(String remoteId) {
    this.remoteId = remoteId;
  }

  public AppView remoteAddress(String remoteAddress) {
    this.remoteAddress = remoteAddress;
    return this;
  }

   /**
   * Get remoteAddress
   * @return remoteAddress
  **/
  @Schema(description = "")
  public String getRemoteAddress() {
    return remoteAddress;
  }

  public void setRemoteAddress(String remoteAddress) {
    this.remoteAddress = remoteAddress;
  }

  public AppView docs(String docs) {
    this.docs = docs;
    return this;
  }

   /**
   * Get docs
   * @return docs
  **/
  @Schema(description = "")
  public String getDocs() {
    return docs;
  }

  public void setDocs(String docs) {
    this.docs = docs;
  }

  public AppView envVariables(String envVariables) {
    this.envVariables = envVariables;
    return this;
  }

   /**
   * Get envVariables
   * @return envVariables
  **/
  @Schema(description = "")
  public String getEnvVariables() {
    return envVariables;
  }

  public void setEnvVariables(String envVariables) {
    this.envVariables = envVariables;
  }

  public AppView storageConfig(String storageConfig) {
    this.storageConfig = storageConfig;
    return this;
  }

   /**
   * Get storageConfig
   * @return storageConfig
  **/
  @Schema(description = "")
  public String getStorageConfig() {
    return storageConfig;
  }

  public void setStorageConfig(String storageConfig) {
    this.storageConfig = storageConfig;
  }

  public AppView supportedPolicies(List<SupportedPoliciesEnum> supportedPolicies) {
    this.supportedPolicies = supportedPolicies;
    return this;
  }

  public AppView addSupportedPoliciesItem(SupportedPoliciesEnum supportedPoliciesItem) {
    if (this.supportedPolicies == null) {
      this.supportedPolicies = new ArrayList<>();
    }
    this.supportedPolicies.add(supportedPoliciesItem);
    return this;
  }

   /**
   * Get supportedPolicies
   * @return supportedPolicies
  **/
  @Schema(description = "")
  public List<SupportedPoliciesEnum> getSupportedPolicies() {
    return supportedPolicies;
  }

  public void setSupportedPolicies(List<SupportedPoliciesEnum> supportedPolicies) {
    this.supportedPolicies = supportedPolicies;
  }

  public AppView keywords(List<String> keywords) {
    this.keywords = keywords;
    return this;
  }

  public AppView addKeywordsItem(String keywordsItem) {
    if (this.keywords == null) {
      this.keywords = new ArrayList<>();
    }
    this.keywords.add(keywordsItem);
    return this;
  }

   /**
   * Get keywords
   * @return keywords
  **/
  @Schema(description = "")
  public List<String> getKeywords() {
    return keywords;
  }

  public void setKeywords(List<String> keywords) {
    this.keywords = keywords;
  }

  public AppView publisher(String publisher) {
    this.publisher = publisher;
    return this;
  }

   /**
   * Get publisher
   * @return publisher
  **/
  @Schema(description = "")
  public String getPublisher() {
    return publisher;
  }

  public void setPublisher(String publisher) {
    this.publisher = publisher;
  }

  public AppView sovereign(String sovereign) {
    this.sovereign = sovereign;
    return this;
  }

   /**
   * Get sovereign
   * @return sovereign
  **/
  @Schema(description = "")
  public String getSovereign() {
    return sovereign;
  }

  public void setSovereign(String sovereign) {
    this.sovereign = sovereign;
  }

  public AppView language(String language) {
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @Schema(description = "")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public AppView license(String license) {
    this.license = license;
    return this;
  }

   /**
   * Get license
   * @return license
  **/
  @Schema(description = "")
  public String getLicense() {
    return license;
  }

  public void setLicense(String license) {
    this.license = license;
  }

  public AppView endpointDocumentation(String endpointDocumentation) {
    this.endpointDocumentation = endpointDocumentation;
    return this;
  }

   /**
   * Get endpointDocumentation
   * @return endpointDocumentation
  **/
  @Schema(description = "")
  public String getEndpointDocumentation() {
    return endpointDocumentation;
  }

  public void setEndpointDocumentation(String endpointDocumentation) {
    this.endpointDocumentation = endpointDocumentation;
  }

  public AppView distributionService(String distributionService) {
    this.distributionService = distributionService;
    return this;
  }

   /**
   * Get distributionService
   * @return distributionService
  **/
  @Schema(description = "")
  public String getDistributionService() {
    return distributionService;
  }

  public void setDistributionService(String distributionService) {
    this.distributionService = distributionService;
  }

  public AppView runtimeEnvironment(String runtimeEnvironment) {
    this.runtimeEnvironment = runtimeEnvironment;
    return this;
  }

   /**
   * Get runtimeEnvironment
   * @return runtimeEnvironment
  **/
  @Schema(description = "")
  public String getRuntimeEnvironment() {
    return runtimeEnvironment;
  }

  public void setRuntimeEnvironment(String runtimeEnvironment) {
    this.runtimeEnvironment = runtimeEnvironment;
  }

  public AppView additional(Map<String, String> additional) {
    this.additional = additional;
    return this;
  }

  public AppView putAdditionalItem(String key, String additionalItem) {
    if (this.additional == null) {
      this.additional = new HashMap<>();
    }
    this.additional.put(key, additionalItem);
    return this;
  }

   /**
   * Get additional
   * @return additional
  **/
  @Schema(description = "")
  public Map<String, String> getAdditional() {
    return additional;
  }

  public void setAdditional(Map<String, String> additional) {
    this.additional = additional;
  }

  public AppView _links(Links _links) {
    this._links = _links;
    return this;
  }

   /**
   * Get _links
   * @return _links
  **/
  @Schema(description = "")
  public Links getLinks() {
    return _links;
  }

  public void setLinks(Links _links) {
    this._links = _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppView appView = (AppView) o;
    return Objects.equals(this.creationDate, appView.creationDate) &&
        Objects.equals(this.modificationDate, appView.modificationDate) &&
        Objects.equals(this.remoteId, appView.remoteId) &&
        Objects.equals(this.remoteAddress, appView.remoteAddress) &&
        Objects.equals(this.docs, appView.docs) &&
        Objects.equals(this.envVariables, appView.envVariables) &&
        Objects.equals(this.storageConfig, appView.storageConfig) &&
        Objects.equals(this.supportedPolicies, appView.supportedPolicies) &&
        Objects.equals(this.keywords, appView.keywords) &&
        Objects.equals(this.publisher, appView.publisher) &&
        Objects.equals(this.sovereign, appView.sovereign) &&
        Objects.equals(this.language, appView.language) &&
        Objects.equals(this.license, appView.license) &&
        Objects.equals(this.endpointDocumentation, appView.endpointDocumentation) &&
        Objects.equals(this.distributionService, appView.distributionService) &&
        Objects.equals(this.runtimeEnvironment, appView.runtimeEnvironment) &&
        Objects.equals(this.additional, appView.additional) &&
        Objects.equals(this._links, appView._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creationDate, modificationDate, remoteId, remoteAddress, docs, envVariables, storageConfig, supportedPolicies, keywords, publisher, sovereign, language, license, endpointDocumentation, distributionService, runtimeEnvironment, additional, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppView {\n");
    
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    modificationDate: ").append(toIndentedString(modificationDate)).append("\n");
    sb.append("    remoteId: ").append(toIndentedString(remoteId)).append("\n");
    sb.append("    remoteAddress: ").append(toIndentedString(remoteAddress)).append("\n");
    sb.append("    docs: ").append(toIndentedString(docs)).append("\n");
    sb.append("    envVariables: ").append(toIndentedString(envVariables)).append("\n");
    sb.append("    storageConfig: ").append(toIndentedString(storageConfig)).append("\n");
    sb.append("    supportedPolicies: ").append(toIndentedString(supportedPolicies)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    publisher: ").append(toIndentedString(publisher)).append("\n");
    sb.append("    sovereign: ").append(toIndentedString(sovereign)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    license: ").append(toIndentedString(license)).append("\n");
    sb.append("    endpointDocumentation: ").append(toIndentedString(endpointDocumentation)).append("\n");
    sb.append("    distributionService: ").append(toIndentedString(distributionService)).append("\n");
    sb.append("    runtimeEnvironment: ").append(toIndentedString(runtimeEnvironment)).append("\n");
    sb.append("    additional: ").append(toIndentedString(additional)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
