/*
 * Dataspace Connector
 * IDS Connector originally developed by the Fraunhofer ISST
 *
 * OpenAPI spec version: 6.2.0
 * Contact: info@dataspace-connector.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.catenax.semantics.idsadapter.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.v3.oas.annotations.media.Schema;
import net.catenax.semantics.idsadapter.client.model.Endpoint;
import net.catenax.semantics.idsadapter.client.model.Links;

import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * RouteView
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-09-08T16:15:16.333286600+02:00[Europe/Berlin]")
public class RouteView {
  @JsonProperty("creationDate")
  private OffsetDateTime creationDate = null;

  @JsonProperty("modificationDate")
  private OffsetDateTime modificationDate = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("configuration")
  private String _configuration = null;

  /**
   * Gets or Sets deploy
   */
  public enum DeployEnum {
    NONE("None"),
    CAMEL("Camel");

    private String value;

    DeployEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static DeployEnum fromValue(String text) {
      for (DeployEnum b : DeployEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("deploy")
  private DeployEnum deploy = null;

  @JsonProperty("start")
  private Endpoint start = null;

  @JsonProperty("end")
  private Endpoint end = null;

  @JsonProperty("additional")
  private Map<String, String> additional = null;

  @JsonProperty("_links")
  private Links _links = null;

  public RouteView creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @Schema(description = "")
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }

  public RouteView modificationDate(OffsetDateTime modificationDate) {
    this.modificationDate = modificationDate;
    return this;
  }

   /**
   * Get modificationDate
   * @return modificationDate
  **/
  @Schema(description = "")
  public OffsetDateTime getModificationDate() {
    return modificationDate;
  }

  public void setModificationDate(OffsetDateTime modificationDate) {
    this.modificationDate = modificationDate;
  }

  public RouteView title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @Schema(description = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public RouteView description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public RouteView _configuration(String _configuration) {
    this._configuration = _configuration;
    return this;
  }

   /**
   * Get _configuration
   * @return _configuration
  **/
  @Schema(description = "")
  public String getConfiguration() {
    return _configuration;
  }

  public void setConfiguration(String _configuration) {
    this._configuration = _configuration;
  }

  public RouteView deploy(DeployEnum deploy) {
    this.deploy = deploy;
    return this;
  }

   /**
   * Get deploy
   * @return deploy
  **/
  @Schema(description = "")
  public DeployEnum getDeploy() {
    return deploy;
  }

  public void setDeploy(DeployEnum deploy) {
    this.deploy = deploy;
  }

  public RouteView start(Endpoint start) {
    this.start = start;
    return this;
  }

   /**
   * Get start
   * @return start
  **/
  @Schema(description = "")
  public Endpoint getStart() {
    return start;
  }

  public void setStart(Endpoint start) {
    this.start = start;
  }

  public RouteView end(Endpoint end) {
    this.end = end;
    return this;
  }

   /**
   * Get end
   * @return end
  **/
  @Schema(description = "")
  public Endpoint getEnd() {
    return end;
  }

  public void setEnd(Endpoint end) {
    this.end = end;
  }

  public RouteView additional(Map<String, String> additional) {
    this.additional = additional;
    return this;
  }

  public RouteView putAdditionalItem(String key, String additionalItem) {
    if (this.additional == null) {
      this.additional = new HashMap<>();
    }
    this.additional.put(key, additionalItem);
    return this;
  }

   /**
   * Get additional
   * @return additional
  **/
  @Schema(description = "")
  public Map<String, String> getAdditional() {
    return additional;
  }

  public void setAdditional(Map<String, String> additional) {
    this.additional = additional;
  }

  public RouteView _links(Links _links) {
    this._links = _links;
    return this;
  }

   /**
   * Get _links
   * @return _links
  **/
  @Schema(description = "")
  public Links getLinks() {
    return _links;
  }

  public void setLinks(Links _links) {
    this._links = _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RouteView routeView = (RouteView) o;
    return Objects.equals(this.creationDate, routeView.creationDate) &&
        Objects.equals(this.modificationDate, routeView.modificationDate) &&
        Objects.equals(this.title, routeView.title) &&
        Objects.equals(this.description, routeView.description) &&
        Objects.equals(this._configuration, routeView._configuration) &&
        Objects.equals(this.deploy, routeView.deploy) &&
        Objects.equals(this.start, routeView.start) &&
        Objects.equals(this.end, routeView.end) &&
        Objects.equals(this.additional, routeView.additional) &&
        Objects.equals(this._links, routeView._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creationDate, modificationDate, title, description, _configuration, deploy, start, end, additional, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RouteView {\n");
    
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    modificationDate: ").append(toIndentedString(modificationDate)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    _configuration: ").append(toIndentedString(_configuration)).append("\n");
    sb.append("    deploy: ").append(toIndentedString(deploy)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    additional: ").append(toIndentedString(additional)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
