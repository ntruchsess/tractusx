#
# Copyright (c) 2021 T-Systems International GmbH (Catena-X Consortium)
#
# See the AUTHORS file(s) distributed with this work for additional
# information regarding authorship.
#
# See the LICENSE file(s) distributed with this work for
# additional information regarding license terms.
#

###########################################################
# Configuration of the Semantic Layer including the 
# Semantic Hub
#    Managing Aspect Models
# Twin Registry 
#    Listing Digital Twins and their Aspect Implementations
# Simple Semantic Adapter Service
#    Connecting Backend Systems to Catena-X IDS
#    Providing Aspect Implementations = IDS Artifacts
#    Registering Owned Digitial Twins
###########################################################

#  Endpoint configuration for service provisioning and data pull
server:
  port: 4242
  ssl:
    key-store-password: __KEYSTOREPASSWORD__
    key-store: classpath:conf/__KEYSTOREFILENAME__.p12
    key-store-type: PKCS12
    key-alias: 1
    enabled: false
#security:
#  require-ssl: true
# This is the http transport we use to talk to the connector
http:
  timeout:
    write: 10000
    connect: 10000
    call: 10000
    read: 10000
licence_url: '@licence_url@'
spring:
# Builtin persistence for hosting models, twins & data
  sql:
    init:
      platform: h2
      mode: always
  datasource:
    driverClassName: org.h2.Driver
    password: tractusx
    username: tractusx
    url: jdbc:h2:file:./semantics/persistence
  jpa:
    hibernate:
      ddl-auto: update
# Configuration of http-endpoint host
  servlet:
    multipart:
      enabled: true
      max-file-size: 200MB
      max-request-size: 215MB
      file-size-threshold: 2KB
# Builtin persistence console
  h2:
    console:
      path: /admin/database
      enabled: true
      settings:
        web-allow-others: true
# How to deal with REST representation problems
  jackson:
    deserialization:
      fail-on-unknown-properties: true
title: '@project.name@'
springdoc:
  swagger-ui:
    path: /admin/api
project_desc: '@project.description@'
contact_email: '@email@'
licence: '@licence_name@'
contact_url: '@project.url@'
organization_name: '@project.organization.name@'
version: '@project.version@'
management:
  endpoints:
    enabled-by-default: false       
    
#
# Configuration of the Semantic Adapter
#

idsadapter:
  #
  # Part 1 - Connection to IDS/Catena-X
  # with catalogs and contracts
  #
  connectorUrl: http://localhost:8080  
  connectorUser: admin
  connectorPassword: password
  publisher: http://t-systems.com
  # our callback address exposed
  serviceUrl: http://localhost:4242/api/v1
  adapterUrl: http://localhost:4243/api/v1
  portalUrl: http://localhost:3000
  # Under which catalogs do we publish our data offerings?
  catalogs:
    catenax-catalog:
        description: Catena-X Data Offering Catalog
  # Under which conditions and to whom do we publish our data offerings
  contracts:
     contract-readall:
      description: A sample contract with a consumer that may read everything.
      # this is the ID of the "consuming" semantic data connector
      consumer: https://w3id.org/idsa/autogen/baseConnector/7b934432-a85e-41c5-0000-669219dde4ea
      start: 2021-01-01T18:35:29.921Z
      end: 2021-12-31T07:11:13.569Z
      rules:
        rule1:
          description: Sample read all permission. Due to a connector ?bug?, action field must stay empty.
          value: "{ \"@type\":\"ids:Permission\", \"ids:action\":[] }"
  #
  # Part 2 - IDS Offer/Representation/Artifact Provisioning + Aspect Implementation
  #
  offers:
    # A first data offer represented by static files coming from a PLM system
    offer-windchill:
        description: Sample PLM offering representing by static files.
        license: https://www.apache.org/licenses/LICENSE-2.0.html
        language: EN
        # reference to the contract
        contract: contract-readall
        # reference to the catalogue
        catalog: catenax-catalog
        paymentMethod: FREE
        # The representations correspond to aspects/semantic models supported
        representations:
          material-aspect:
            description: Sample Static Material Aspect.
            mediaType: application/json
            model: urn:bamm:com.catenaX:0.0.1#Material
            language: EN
            # The sources/artifacts of material
            sources:
              material-brake:
                description: Sample Transformed XML Source.
                file: Bremse_Windchill.xml
                type: file
                transformation: dcx2material.xsl
          bom-aspect:
            description: Sample BOM Aspect.
            mediaType: application/json
            model: urn:bamm:com.catenaX:0.0.1#Traceability
            language: EN
            sources:
              bom-brake:
                description: Sample XML Source Transformed Differently.
                file: Bremse_Windchill.xml
                transformation: dcx2bom.xsl
                type: file
    # A second data offer represented by a database backend systems (here: Catena-X Test Data)
    offer-tdm:
        description: Test Data from Catena-X.
        license: https://www.apache.org/licenses/LICENSE-2.0.html
        language: EN
        # reference to the contract
        contract: contract-readall
        # reference to the catalog
        catalog: catenax-catalog
        paymentMethod: FREE
        # The representations correspond to all Speedboat aspects/semantic models
        representations:
          material-aspect:
            description: Catena-X Material Aspect.
            mediaType: application/json
            model: urn:bamm:com.catenaX:0.0.1#Material
            language: EN
            sources:
              material-vehicle:
                description: Test Material Database.
                type: jdbc
                transformation: sql2material.xsl
                datasource: 
                  driverClassName:
                  url: jdbc:h2:file:./semantics/persistence
                aliases: 
                  material: |
                   WITH RECURSIVE materialtree(id,parent,material_name, material_type,aggregate_state, chemical_composition_fraction,weight,owner,owner_type,level) AS (
                    SELECT id,
                          parent,
                          material_name,
                          material_type,
                          aggregate_state,
                          chemical_composition_fraction,
                          weight,
                          owner,
                          owner_type,
                          0 as level
                    FROM material
                     WHERE owner LIKE '%{manufacturer}%' 
                      AND owner_type = '{number}'
                      AND parent IS NULL
                    UNION ALL
                    SELECT material.id,
                          material.parent,
                          material.material_name,
                          material.material_type,
                          material.aggregate_state,
                          material.chemical_composition_fraction,
                          material.weight,material.owner,
                          material.owner_type,
                          materialtree.level+1 as level
                    FROM materialtree
                    JOIN material
                    ON material.parent = materialtree.id
                    )
                    SELECT id,
                          parent,
                          material_name, 
                          material_type, 
                          aggregate_state, 
                          REPLACE(chemical_composition_fraction,',','.') AS chemical_composition_fraction, 
                          REPLACE(weight,',','.') AS weight,
                          owner,
                          owner_type,level 
                    FROM materialtree
          bom-aspect:
            description: Catena-X Traceability Aspect.
            mediaType: application/json
            model: urn:bamm:com.catenaX:0.0.1#Traceability
            language: EN
            sources:
              bom-vehicle:
                description: Test Traceability Database.
                type: jdbc
                transformation: sql2bom.xsl
                datasource: 
                  driverClassName:
                  url: jdbc:h2:file:./semantics/persistence
                aliases: 
                  bom: |
                   WITH RECURSIVE bom(parentId,
                            partStaticData_manufacturerOneId,
                            partStaticData_manufactureContractOneId,
                            partStaticData_partNameManufacturer,
                            partStaticData_partNumberManufacturer,
                            partStaticData_customerOneID,
                            partStaticData_customerContractOneID,
                            partStaticData_partNameCustomer,
                            partStaticData_partNumberCustomer,
                            partUniqueData_uniqueID,
                            partUniqueData_manufacturerUniqueID,
                            partUniqueData_customerUniqueID,
                            partIndividualData_productionCountryCode,
                            partIndividualData_productionDateGMT,
                            twinData_uuid,
                            level) 
                   AS (
                     SELECT traceability.*, 
                            0 AS level 
                       FROM traceability 
                      WHERE partStaticData_manufacturerOneId LIKE '%{manufacturer}%' 
                        AND partUniqueData_manufacturerUniqueId = '{serial}'
                     UNION ALL 
                    SELECT traceability.*,
                           bom.level+1 as level
                      FROM bom 
                      JOIN traceability ON traceability.parentId = bom.partUniqueData_uniqueId 
                   ) 
                   SELECT bom.parentId,
                          bom.partStaticData_manufacturerOneId,
                          bom.partStaticData_manufactureContractOneId,
                          bom.partStaticData_partNameManufacturer,
                          bom.partStaticData_partNumberManufacturer,
                          bom.partStaticData_customerOneID,
                          bom.partStaticData_customerContractOneID,
                          bom.partStaticData_partNameCustomer,
                          bom.partStaticData_partNumberCustomer,
                          bom.partUniqueData_uniqueID,
                          bom.partUniqueData_manufacturerUniqueID,
                          bom.partUniqueData_customerUniqueID,
                          bom.partIndividualData_productionCountryCode,
                          bom.partIndividualData_productionDateGMT,
                          coalesce(local_identifier.twin_id, bom.twinData_uuid) AS twinData_uuid,
                          bom.level 
                     FROM bom
                     LEFT OUTER JOIN local_identifier ON local_identifier.value = bom.partUniqueData_uniqueID 
  #
  # Part 3: Digitial Twin Registration
  #
  twins:
    # Single twin from file
    twin-brake:
      description: Sample Digital Twin.
      type: file
      transformation: dcx2twin.xsl
      file: Bremse_Windchill.xml
    # Lots of twins from database
    twin-parts:
      description: Test Data Digital Twins.
      type: jdbc
      transformation: sql2twins.xsl
      datasource: 
        driverClassName:
        url: jdbc:h2:file:./semantics/persistence
      aliases: 
        parts: |
         SELECT partStaticData_partNameCustomer AS description, 
                SUBSTRING(partStaticData_customerOneId,2,LENGTH(partStaticData_customerOneId)-2) AS customer, 
                partStaticData_partNumberCustomer AS customerNumber, 
                SUBSTRING(partStaticData_manufacturerOneId,2,LENGTH(partStaticData_manufacturerOneId)-2) AS manufacturer, 
                partUniqueData_manufacturerUniqueId AS partSerial, 
                partStaticData_partNumberManufacturer AS partNumber, 
                twinData_uuid AS uuid 
           FROM traceability                     