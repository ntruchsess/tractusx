{
	"info": {
		"_postman_id": "3a08a99b-5741-4358-8c5d-4d17cf4cc220",
		"name": "Catenax",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "IDS Connector Data Exchange v6",
			"item": [
				{
					"name": "0 - IDS self-description Provider",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Extract Connector Id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var fullId=jsonData[\"@id\"]\r",
									"    console.info(\"Setting environment variable 'provider-id' to \" + fullId)\r",
									"    pm.environment.set(\"provider-id\", fullId);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{providerConnectorUrl}}/",
							"host": [
								"{{providerConnectorUrl}}"
							],
							"path": [
								""
							]
						},
						"description": "Invokes the Root URL of the connector server.\nShould provide the connector config.\nCurrently works only without authentication which is strange."
					},
					"response": [
						{
							"name": "Ok",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "1 - IDS self-description Consumer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Extract Consumer Id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var fullId=jsonData[\"@id\"]\r",
									"    console.info(\"Setting environment variable 'consumer-id' to \" + fullId)\r",
									"    pm.environment.set(\"consumer-id\", fullId);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{consumerConnectorUrl}}/",
							"host": [
								"{{consumerConnectorUrl}}"
							],
							"path": [
								""
							]
						},
						"description": "Invokes the Root URL of the connector server.\nShould provide the connector config.\nCurrently works only without authentication which is strange."
					},
					"response": [
						{
							"name": "Ok",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "2 - Create a Contract in Provider (which enables Consumer)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Extract Created Contract Id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var fullId=jsonData._links.self.href\r",
									"    console.info(\"Setting environment variable 'contract-full' to \" + fullId)\r",
									"    pm.environment.set(\"contract-full\", fullId);\r",
									"    var shortId=fullId.substring(fullId.lastIndexOf('/') + 1)\r",
									"    console.info(\"Setting environment variable 'contract' to \" + shortId)\r",
									"    pm.environment.set(\"contract\", shortId);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Sample Contract\",\n    \"description\": \"A sample contract between two parties.\",\n    \"consumer\": \"{{consumer-id}}\",\n    \"provider\": \"{{provider-id}}\",\n    \"start\": \"2021-01-01T18:35:29.921Z\",\n    \"end\": \"2021-12-31T07:11:13.569Z\"\n}"
						},
						"url": {
							"raw": "{{providerConnectorUrl}}/api/contracts",
							"host": [
								"{{providerConnectorUrl}}"
							],
							"path": [
								"api",
								"contracts"
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"dolore\",\n    \"description\": \"consectetur officia\",\n    \"consumer\": \"https://SbRgBQggmGVtUquYTUMGtpQIGIB.exdoCz4,T2RxMNaJGpcur7\",\n    \"provider\": \"https://fXntioOXnmXvjxciotTNVo.vlkbpGzHVarWSwRbzPRVItYMFgMQTi-QAVxvZ6sDJe6b6ETfaKAkvLgH\",\n    \"start\": \"1949-09-06T18:35:29.921Z\",\n    \"end\": \"2015-04-08T07:11:13.569Z\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/contracts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"contracts"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"dolore\",\n    \"description\": \"consectetur officia\",\n    \"consumer\": \"https://SbRgBQggmGVtUquYTUMGtpQIGIB.exdoCz4,T2RxMNaJGpcur7\",\n    \"provider\": \"https://fXntioOXnmXvjxciotTNVo.vlkbpGzHVarWSwRbzPRVItYMFgMQTi-QAVxvZ6sDJe6b6ETfaKAkvLgH\",\n    \"start\": \"1949-09-06T18:35:29.921Z\",\n    \"end\": \"2015-04-08T07:11:13.569Z\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/contracts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"contracts"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "3 - Create a (Read) Rule",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Extract Created Rule Id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var fullId=jsonData._links.self.href\r",
									"    console.info(\"Setting environment variable 'rule-full' to \" + fullId)\r",
									"    pm.environment.set(\"rule-full\", fullId);\r",
									"    var shortId=fullId.substring(fullId.lastIndexOf('/') + 1)\r",
									"    console.info(\"Setting environment variable 'rule' to \" + shortId)\r",
									"    pm.environment.set(\"rule\", shortId);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Sample Contract Rule\",\n    \"description\": \"Seems to Serialize a concrete rule\",\n    \"value\": \"{ \\\"@type\\\":\\\"ids:Permission\\\", \\\"ids:action\\\":[] }\"\n}"
						},
						"url": {
							"raw": "{{providerConnectorUrl}}/api/rules",
							"host": [
								"{{providerConnectorUrl}}"
							],
							"path": [
								"api",
								"rules"
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"id amet\",\n    \"description\": \"irure in esse fugiat\",\n    \"value\": \"ipsum veniam\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"rules"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"id amet\",\n    \"description\": \"irure in esse fugiat\",\n    \"value\": \"ipsum veniam\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"rules"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "4 - Add (Read) Rule to Contract",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"{{rule-full}}\"\n]"
						},
						"url": {
							"raw": "{{providerConnectorUrl}}/api/contracts/:id/rules",
							"host": [
								"{{providerConnectorUrl}}"
							],
							"path": [
								"api",
								"contracts",
								":id",
								"rules"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{contract}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Ok",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL\",\n    \"http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/api/contracts/:id/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"contracts",
										":id",
										"rules"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL\",\n    \"http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/api/contracts/:id/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"contracts",
										":id",
										"rules"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "5 - Create an Offer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Extract Created Offer Id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var fullId=jsonData._links.self.href\r",
									"    console.info(\"Setting environment variable 'offer-full' to \" + fullId)\r",
									"    pm.environment.set(\"offer-full\", fullId);\r",
									"    var shortId=fullId.substring(fullId.lastIndexOf('/') + 1)\r",
									"    console.info(\"Setting environment variable 'offer' to \" + shortId)\r",
									"    pm.environment.set(\"offer\", shortId);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Sample Data Source\",\n    \"description\": \"A sample data source as provided by a business partner\",\n    \"keywords\": [\n        \"Sample\",\n        \"Data Provider\"\n    ],\n    \"publisher\": \"http://catena-x.net\",\n    \"language\": \"multiple\",\n    \"license\": \"https://www.apache.org/licenses/LICENSE-2.0.html\",\n    \"sovereign\": \"http://t-systems.com\",\n    \"endpointDocumentation\": \"\",\n    \"sample\": \"http://catena-x.net/resources/sample#1\",\n    \"paymentMethod\": \"free\"\n}"
						},
						"url": {
							"raw": "{{providerConnectorUrl}}/api/offers",
							"host": [
								"{{providerConnectorUrl}}"
							],
							"path": [
								"api",
								"offers"
							]
						},
						"description": "Creates a fresh sample resource with a fixed id.\n\"sample\" is not really used in the server model but validated in the JSON payload!\n\"samples\" on the other hand should be used in the server model but invokes an error on the JSON side!"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"\",\n    \"description\": \"Excepteur Duis\",\n    \"keywords\": [\n        \"officia minim sint nisi\",\n        \"occaecat minim consequat Ut\"\n    ],\n    \"publisher\": \"https://XyoyxeafqzFoPrFhvsOCSddigrd.boOLGjDuwbNZ-OMWUjOI3orB+etgxg04H4avlnBeqFmp9OO\",\n    \"language\": \"eiusmod eu\",\n    \"license\": \"https://JhTUS.caetvlt1-\",\n    \"sovereign\": \"https://CXBZtnjZajkrLPMoyHwmnfZH.xqwddZ+3j1BPminOQ7pE8Vz74olN8-Cm,Rc+cJIEEW6xKM0UXu\",\n    \"endpointDocumentation\": \"http://ZkOWrWcNT.xwwn-eZqnKbFl\",\n    \"samples\": [\n        \"http://LjoxiIHfgTQlQktRPzHhPEszOuYj.cdx46TftMD-aXHSrH\",\n        \"https://utBGqjgGYN.rdxTwV4oZFltcx\"\n    ],\n    \"paymentMethod\": \"negotiationBasis\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/offers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"offers"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"\",\n    \"description\": \"Excepteur Duis\",\n    \"keywords\": [\n        \"officia minim sint nisi\",\n        \"occaecat minim consequat Ut\"\n    ],\n    \"publisher\": \"https://XyoyxeafqzFoPrFhvsOCSddigrd.boOLGjDuwbNZ-OMWUjOI3orB+etgxg04H4avlnBeqFmp9OO\",\n    \"language\": \"eiusmod eu\",\n    \"license\": \"https://JhTUS.caetvlt1-\",\n    \"sovereign\": \"https://CXBZtnjZajkrLPMoyHwmnfZH.xqwddZ+3j1BPminOQ7pE8Vz74olN8-Cm,Rc+cJIEEW6xKM0UXu\",\n    \"endpointDocumentation\": \"http://ZkOWrWcNT.xwwn-eZqnKbFl\",\n    \"samples\": [\n        \"http://LjoxiIHfgTQlQktRPzHhPEszOuYj.cdx46TftMD-aXHSrH\",\n        \"https://utBGqjgGYN.rdxTwV4oZFltcx\"\n    ],\n    \"paymentMethod\": \"negotiationBasis\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/offers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"offers"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "[Optional] Describe Offer",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{providerConnectorUrl}}/api/offers/:id",
							"host": [
								"{{providerConnectorUrl}}"
							],
							"path": [
								"api",
								"offers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{offer}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Ok",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/representations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"representations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/representations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"representations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "6 - Assign Contract to Offer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"{{contract-full}}\"\n]"
						},
						"url": {
							"raw": "{{providerConnectorUrl}}/api/offers/:id/contracts",
							"host": [
								"{{providerConnectorUrl}}"
							],
							"path": [
								"api",
								"offers",
								":id",
								"contracts"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{offer}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Ok",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL\",\n    \"http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/api/offers/:id/contracts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"offers",
										":id",
										"contracts"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL\",\n    \"http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/api/offers/:id/contracts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"offers",
										":id",
										"contracts"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "7 - Create a (XML) Representation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Extract Created Repesentation Id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var fullId=jsonData._links.self.href\r",
									"    console.info(\"Setting environment variable 'xml-representation-full' to \" + fullId)\r",
									"    pm.environment.set(\"xml-representation-full\", fullId);\r",
									"    var shortId=fullId.substring(fullId.lastIndexOf('/') + 1)\r",
									"    console.info(\"Setting environment variable 'xml-representation' to \" + shortId)\r",
									"    pm.environment.set(\"xml-representation\", shortId);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Sample XML Representation\",\n    \"description\": \"The representation of a local xml file\",\n    \"mediaType\": \"text/xml\",\n    \"language\": \"multi\",\n    \"standard\": \"https://www.w3.org/TR/REC-xml/\"\n}"
						},
						"url": {
							"raw": "{{providerConnectorUrl}}/api/representations",
							"host": [
								"{{providerConnectorUrl}}"
							],
							"path": [
								"api",
								"representations"
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"incididunt fugia\",\n    \"description\": \"magna Duis sit\",\n    \"mediaType\": \"qui in\",\n    \"language\": \"ut Duis\",\n    \"standard\": \"et\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/representations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"representations"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"incididunt fugia\",\n    \"description\": \"magna Duis sit\",\n    \"mediaType\": \"qui in\",\n    \"language\": \"ut Duis\",\n    \"standard\": \"et\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/representations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"representations"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "8 - Add (XML) Representation to Offer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"{{xml-representation-full}}\"\n]"
						},
						"url": {
							"raw": "{{providerConnectorUrl}}/api/offers/:id/representations",
							"host": [
								"{{providerConnectorUrl}}"
							],
							"path": [
								"api",
								"offers",
								":id",
								"representations"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{offer}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Ok",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL\",\n    \"http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/api/offers/:id/representations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"offers",
										":id",
										"representations"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL\",\n    \"http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/api/offers/:id/representations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"offers",
										":id",
										"representations"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "9 - Create an (Local) Artifact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Extract Created Artifact Id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var fullId=jsonData._links.self.href\r",
									"    console.info(\"Setting environment variable 'local-artifact-full' to \" + fullId)\r",
									"    pm.environment.set(\"local-artifact-full\", fullId);\r",
									"    var shortId=fullId.substring(fullId.lastIndexOf('/') + 1)\r",
									"    console.info(\"Setting environment variable 'local-artifact' to \" + shortId)\r",
									"    pm.environment.set(\"local-artifact\", shortId);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Sample Artifact\",\n    \"description\": \"This is a sample artifact which represents a locally uploaded file.\",\n    \"automatedDownload\": false\n}"
						},
						"url": {
							"raw": "{{providerConnectorUrl}}/api/artifacts",
							"host": [
								"{{providerConnectorUrl}}"
							],
							"path": [
								"api",
								"artifacts"
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"cillum est cupidatat\",\n    \"description\": \"voluptate qui Lorem velit est\",\n    \"accessUrl\": \"aliquip\",\n    \"basicAuth\": {\n        \"key\": \"reprehenderit\",\n        \"value\": \"pariatur in nisi id\"\n    },\n    \"apiKey\": {\n        \"key\": \"incididunt sint\",\n        \"value\": \"irure exercitation qui proident\"\n    },\n    \"value\": \"tempor ipsum ut cupidatat sed\",\n    \"automatedDownload\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/artifacts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"artifacts"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"cillum est cupidatat\",\n    \"description\": \"voluptate qui Lorem velit est\",\n    \"accessUrl\": \"aliquip\",\n    \"basicAuth\": {\n        \"key\": \"reprehenderit\",\n        \"value\": \"pariatur in nisi id\"\n    },\n    \"apiKey\": {\n        \"key\": \"incididunt sint\",\n        \"value\": \"irure exercitation qui proident\"\n    },\n    \"value\": \"tempor ipsum ut cupidatat sed\",\n    \"automatedDownload\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/artifacts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"artifacts"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "10 - Add (Local) Artifact to (XML) Representation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"{{local-artifact-full}}\"\n]"
						},
						"url": {
							"raw": "{{providerConnectorUrl}}/api/representations/:id/artifacts",
							"host": [
								"{{providerConnectorUrl}}"
							],
							"path": [
								"api",
								"representations",
								":id",
								"artifacts"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{xml-representation}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Ok",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL\",\n    \"http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/api/representations/:id/artifacts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"representations",
										":id",
										"artifacts"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL\",\n    \"http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/api/representations/:id/artifacts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"representations",
										":id",
										"artifacts"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "11 - Put (XML) Data into (Local) Artifact",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\nCopyright (c) 2021 T-Systems International GmbH (Catena-X Consortium)\n\nSee the AUTHORS file(s) distributed with this work for additional\ninformation regarding authorship.\n\nSee the LICENSE file(s) distributed with this work for\nadditional information regarding license terms.\n-->\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>net.catenax</groupId>\n    <artifactId>data</artifactId>\n    <version>latest</version>\n    <name>Catena-X Test Data Module</name>\n    <description>All code related to managing test data</description>\n    <properties>\n        <java.version>11</java.version>\n        <maven.compiler.source>11</maven.compiler.source>\n        <maven.compiler.target>11</maven.compiler.target>\n    </properties>\n    <dependencies>\n        <dependency>\n\t\t\t<groupId>com.microsoft.azure</groupId>\n\t\t\t<artifactId>azure-storage</artifactId>\n\t\t\t<version>8.6.6</version>\n\t\t</dependency>\n        <dependency>\n            <groupId>org.json</groupId>\n            <artifactId>json</artifactId>\n            <version>20210307</version>\n        </dependency>\n    </dependencies>\n    <build>\n        <plugins>\n        <plugin>\n        <artifactId>maven-assembly-plugin</artifactId>\n        <executions>\n          <execution>\n            <phase>package</phase>\n            <goals>\n              <goal>single</goal>\n            </goals>\n          </execution>\n        </executions>\n        <configuration>\n          <descriptorRefs>\n            <descriptorRef>jar-with-dependencies</descriptorRef>\n          </descriptorRefs>\n        </configuration>\n      </plugin>\t\t\n      </plugins> \n    </build>\n</project>\n",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{providerConnectorUrl}}/api/artifacts/:id/data",
							"host": [
								"{{providerConnectorUrl}}"
							],
							"path": [
								"api",
								"artifacts",
								":id",
								"data"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{local-artifact}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Ok",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"nisi et esse ut\",\n    \"laborum labo\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/api/artifacts/:id/data",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"artifacts",
										":id",
										"data"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"nisi et esse ut\",\n    \"laborum labo\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/api/artifacts/:id/data",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"artifacts",
										":id",
										"data"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "12 - Create Consumer Agreement/Artifact with Provider",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Extract Created Agreement\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var remoteId=jsonData.remoteId\r",
									"    console.info(\"Setting environment variable 'remote-agreement' to \" + remoteId)\r",
									"    pm.environment.set(\"remote-agreement\", remoteId);\r",
									"    var fullId=jsonData._links.self.href\r",
									"    console.info(\"Setting environment variable 'agreement-full' to \" + fullId)\r",
									"    pm.environment.set(\"agreement-full\", fullId);\r",
									"    var shortId=fullId.substring(fullId.lastIndexOf('/') + 1)\r",
									"    console.info(\"Setting environment variable 'agreement' to \" + shortId)\r",
									"    pm.environment.set(\"agreement\", shortId);\r",
									"});\r",
									"    "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"@type\":\"ids:Permission\",\n        \"ids:action\": [\n        ],\n        \"ids:target\":\"{{local-artifact-full}}\"\n    }\n]"
						},
						"url": {
							"raw": "{{consumerConnectorUrl}}/api/ids/contract?recipient={{providerConnectorUrl}}/api/ids/data&resourceIds={{offer-full}}&artifactIds={{local-artifact-full}}&download=false",
							"host": [
								"{{consumerConnectorUrl}}"
							],
							"path": [
								"api",
								"ids",
								"contract"
							],
							"query": [
								{
									"key": "recipient",
									"value": "{{providerConnectorUrl}}/api/ids/data",
									"description": "(Required) The recipient url."
								},
								{
									"key": "resourceIds",
									"value": "{{offer-full}}",
									"description": "(Required) List of ids resource that should be requested."
								},
								{
									"key": "resourceIds",
									"value": "https://GOQkkbCcfhGprDrqxIkG.exxPdkhzIdi9uUE1R",
									"description": "(Required) List of ids resource that should be requested.",
									"disabled": true
								},
								{
									"key": "artifactIds",
									"value": "{{local-artifact-full}}",
									"description": "(Required) List of ids artifacts that should be requested."
								},
								{
									"key": "artifactIds",
									"value": "https://GOQkkbCcfhGprDrqxIkG.exxPdkhzIdi9uUE1R",
									"description": "(Required) List of ids artifacts that should be requested.",
									"disabled": true
								},
								{
									"key": "download",
									"value": "false",
									"description": "(Required) Indicates whether the connector should automatically download data of an artifact."
								}
							]
						}
					},
					"response": [
						{
							"name": "Ok",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"@id\": \"https://AzVXhe.tincQuWjQCImsE1UWwuRz\",\n        \"@type\": \"in ut reprehenderit qui\",\n        \"ids:action\": [\n            \"https://w3id.org/idsa/code/GRANT_USE\",\n            \"https://w3id.org/idsa/code/TRACK_PROVENANCE\"\n        ],\n        \"properties\": {},\n        \"comment\": [\n            {\n                \"@value\": \"nostrud mollit eiusmod\",\n                \"@type\": \"adipisicing ut elit quis\",\n                \"@language\": \"sunt pariatur id nisi\"\n            },\n            {\n                \"@value\": \"dolore nisi do\",\n                \"@type\": \"sit eu ut minim\",\n                \"@language\": \"offici\"\n            }\n        ],\n        \"label\": [\n            {\n                \"@value\": \"reprehenderit Ut\",\n                \"@type\": \"voluptate aute in mollit\",\n                \"@language\": \"ut aliquip exercitation\"\n            },\n            {\n                \"@value\": \"ci\",\n                \"@type\": \"veniam Excepteur\",\n                \"@language\": \"sit aliqua incididunt dolore\"\n            }\n        ],\n        \"ids:target\": \"http://iYQjnJUkIazaxRGuOZBpdSMjtBnwMfBt.ehdfO,g454FqVygDMJbqqiTdZkkbjgPStZAQfzJGQwA9k5Q8\",\n        \"ids:assigner\": [\n            \"http://cGCAKYXtwERJGwNaB.ydlihW9YKp,qbfs3OmYVnPQvtp3iy30Z\",\n            \"http://jqaVzrtCQXfVFg.stfrLkx9wuV-nnKgGb3G18NCB9\"\n        ],\n        \"ids:assignee\": [\n            \"http://ovtRtTJpthFKZgayadgSGsaDGel.axpDIMx6dQPdvfHQ4,fRU-tlT\",\n            \"http://UnwiwVhiFqmANqVaJRMUpxs.arusCrD1QcFvN1Motr0RrEzEnPMnTorrOrR1lKKvtXxwGUD3hWIls-YBV\"\n        ],\n        \"ids:constraint\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"ids:assetRefinement\": {\n            \"ids:rightOperandReference\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:unit\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:operator\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:rightOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:leftOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:pipEndpoint\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"@type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"ids:description\": [\n            {\n                \"@value\": \"minim est commodo nisi cillum\",\n                \"@type\": \"culpa nisi minim\",\n                \"@language\": \"irure tempor dolore cillum\"\n            },\n            {\n                \"@value\": \"d\",\n                \"@type\": \"consequat aliquip elit in\",\n                \"@language\": \"sed Lorem velit\"\n            }\n        ],\n        \"ids:title\": [\n            {\n                \"@value\": \"consequat ci\",\n                \"@type\": \"proid\",\n                \"@language\": \"amet dolor\"\n            },\n            {\n                \"@value\": \"laboris tempor nisi\",\n                \"@type\": \"et eiusmod\",\n                \"@language\": \"culpa occaecat do\"\n            }\n        ]\n    },\n    {\n        \"@id\": \"https://icsjXYuIoGnQqfYZrtKaCu.puOTczk\",\n        \"@type\": \"ea est reprehenderit\",\n        \"ids:action\": [\n            \"https://w3id.org/idsa/code/WRITE\",\n            \"https://w3id.org/idsa/code/DELETE\"\n        ],\n        \"properties\": {},\n        \"comment\": [\n            {\n                \"@value\": \"Lorem sint exercitation pariatur\",\n                \"@type\": \"amet ex \",\n                \"@language\": \"adipisicing elit\"\n            },\n            {\n                \"@value\": \"nulla commodo\",\n                \"@type\": \"sunt est\",\n                \"@language\": \"in consectetur dolor mollit\"\n            }\n        ],\n        \"label\": [\n            {\n                \"@value\": \"laboris sit\",\n                \"@type\": \"minim dolor\",\n                \"@language\": \"pariatur tempor in consequa\"\n            },\n            {\n                \"@value\": \"est\",\n                \"@type\": \"exercitation Duis\",\n                \"@language\": \"cillum eiusmod consequat minim\"\n            }\n        ],\n        \"ids:target\": \"https://WvxmvWofBjaCiTxkWczmj.tacnJwlrsp8EcJTJvJaaEMMBKYdnPCQ2.wW23j\",\n        \"ids:assigner\": [\n            \"https://BWI.jwsK6cKtlR6SSxY6d0f.0b\",\n            \"http://TwWm.hhhiO1TdCHeuc1WwPz,yKnPpoYzN18r4q82pw9D60+7Syp+yQk1dSJ6rYnq6JnI6JwptI+9W\"\n        ],\n        \"ids:assignee\": [\n            \"https://NIGnmiNcfxwoGbYAiCTBeGeEtAIWxdeP.ghh9X4tRJP7NowQeWW-hAVoxjk2qRG\",\n            \"http://eYAMB.yzckNaPq6zKNN1GQWBLX81M3Y-OJL.mBOr-Q\"\n        ],\n        \"ids:constraint\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"ids:assetRefinement\": {\n            \"ids:rightOperandReference\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:unit\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:operator\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:rightOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:leftOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:pipEndpoint\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"@type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"ids:description\": [\n            {\n                \"@value\": \"et cupidatat\",\n                \"@type\": \"labore occaecat ullamco voluptate irure\",\n                \"@language\": \"sunt\"\n            },\n            {\n                \"@value\": \"cupidatat\",\n                \"@type\": \"enim incididunt\",\n                \"@language\": \"eiusmod irure velit elit\"\n            }\n        ],\n        \"ids:title\": [\n            {\n                \"@value\": \"et consectetur qui non sunt\",\n                \"@type\": \"aliqua ipsum en\",\n                \"@language\": \"enim\"\n            },\n            {\n                \"@value\": \"ut aliquip magna Duis aute\",\n                \"@type\": \"sint\",\n                \"@language\": \"Lorem\"\n            }\n        ]\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/api/ids/contract?recipient=http://VlBADUCyQZdrtokGKPDWip.ftdaBaG1uGYx&resourceIds=https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL&resourceIds=http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG&artifactIds=https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL&artifactIds=http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG&download=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ids",
										"contract"
									],
									"query": [
										{
											"key": "recipient",
											"value": "http://VlBADUCyQZdrtokGKPDWip.ftdaBaG1uGYx"
										},
										{
											"key": "resourceIds",
											"value": "https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL"
										},
										{
											"key": "resourceIds",
											"value": "http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG"
										},
										{
											"key": "artifactIds",
											"value": "https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL"
										},
										{
											"key": "artifactIds",
											"value": "http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG"
										},
										{
											"key": "download",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"@id\": \"https://AzVXhe.tincQuWjQCImsE1UWwuRz\",\n        \"@type\": \"in ut reprehenderit qui\",\n        \"ids:action\": [\n            \"https://w3id.org/idsa/code/GRANT_USE\",\n            \"https://w3id.org/idsa/code/TRACK_PROVENANCE\"\n        ],\n        \"properties\": {},\n        \"comment\": [\n            {\n                \"@value\": \"nostrud mollit eiusmod\",\n                \"@type\": \"adipisicing ut elit quis\",\n                \"@language\": \"sunt pariatur id nisi\"\n            },\n            {\n                \"@value\": \"dolore nisi do\",\n                \"@type\": \"sit eu ut minim\",\n                \"@language\": \"offici\"\n            }\n        ],\n        \"label\": [\n            {\n                \"@value\": \"reprehenderit Ut\",\n                \"@type\": \"voluptate aute in mollit\",\n                \"@language\": \"ut aliquip exercitation\"\n            },\n            {\n                \"@value\": \"ci\",\n                \"@type\": \"veniam Excepteur\",\n                \"@language\": \"sit aliqua incididunt dolore\"\n            }\n        ],\n        \"ids:target\": \"http://iYQjnJUkIazaxRGuOZBpdSMjtBnwMfBt.ehdfO,g454FqVygDMJbqqiTdZkkbjgPStZAQfzJGQwA9k5Q8\",\n        \"ids:assigner\": [\n            \"http://cGCAKYXtwERJGwNaB.ydlihW9YKp,qbfs3OmYVnPQvtp3iy30Z\",\n            \"http://jqaVzrtCQXfVFg.stfrLkx9wuV-nnKgGb3G18NCB9\"\n        ],\n        \"ids:assignee\": [\n            \"http://ovtRtTJpthFKZgayadgSGsaDGel.axpDIMx6dQPdvfHQ4,fRU-tlT\",\n            \"http://UnwiwVhiFqmANqVaJRMUpxs.arusCrD1QcFvN1Motr0RrEzEnPMnTorrOrR1lKKvtXxwGUD3hWIls-YBV\"\n        ],\n        \"ids:constraint\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"ids:assetRefinement\": {\n            \"ids:rightOperandReference\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:unit\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:operator\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:rightOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:leftOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:pipEndpoint\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"@type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"ids:description\": [\n            {\n                \"@value\": \"minim est commodo nisi cillum\",\n                \"@type\": \"culpa nisi minim\",\n                \"@language\": \"irure tempor dolore cillum\"\n            },\n            {\n                \"@value\": \"d\",\n                \"@type\": \"consequat aliquip elit in\",\n                \"@language\": \"sed Lorem velit\"\n            }\n        ],\n        \"ids:title\": [\n            {\n                \"@value\": \"consequat ci\",\n                \"@type\": \"proid\",\n                \"@language\": \"amet dolor\"\n            },\n            {\n                \"@value\": \"laboris tempor nisi\",\n                \"@type\": \"et eiusmod\",\n                \"@language\": \"culpa occaecat do\"\n            }\n        ]\n    },\n    {\n        \"@id\": \"https://icsjXYuIoGnQqfYZrtKaCu.puOTczk\",\n        \"@type\": \"ea est reprehenderit\",\n        \"ids:action\": [\n            \"https://w3id.org/idsa/code/WRITE\",\n            \"https://w3id.org/idsa/code/DELETE\"\n        ],\n        \"properties\": {},\n        \"comment\": [\n            {\n                \"@value\": \"Lorem sint exercitation pariatur\",\n                \"@type\": \"amet ex \",\n                \"@language\": \"adipisicing elit\"\n            },\n            {\n                \"@value\": \"nulla commodo\",\n                \"@type\": \"sunt est\",\n                \"@language\": \"in consectetur dolor mollit\"\n            }\n        ],\n        \"label\": [\n            {\n                \"@value\": \"laboris sit\",\n                \"@type\": \"minim dolor\",\n                \"@language\": \"pariatur tempor in consequa\"\n            },\n            {\n                \"@value\": \"est\",\n                \"@type\": \"exercitation Duis\",\n                \"@language\": \"cillum eiusmod consequat minim\"\n            }\n        ],\n        \"ids:target\": \"https://WvxmvWofBjaCiTxkWczmj.tacnJwlrsp8EcJTJvJaaEMMBKYdnPCQ2.wW23j\",\n        \"ids:assigner\": [\n            \"https://BWI.jwsK6cKtlR6SSxY6d0f.0b\",\n            \"http://TwWm.hhhiO1TdCHeuc1WwPz,yKnPpoYzN18r4q82pw9D60+7Syp+yQk1dSJ6rYnq6JnI6JwptI+9W\"\n        ],\n        \"ids:assignee\": [\n            \"https://NIGnmiNcfxwoGbYAiCTBeGeEtAIWxdeP.ghh9X4tRJP7NowQeWW-hAVoxjk2qRG\",\n            \"http://eYAMB.yzckNaPq6zKNN1GQWBLX81M3Y-OJL.mBOr-Q\"\n        ],\n        \"ids:constraint\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"ids:assetRefinement\": {\n            \"ids:rightOperandReference\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:unit\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:operator\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:rightOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:leftOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:pipEndpoint\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"@type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"ids:description\": [\n            {\n                \"@value\": \"et cupidatat\",\n                \"@type\": \"labore occaecat ullamco voluptate irure\",\n                \"@language\": \"sunt\"\n            },\n            {\n                \"@value\": \"cupidatat\",\n                \"@type\": \"enim incididunt\",\n                \"@language\": \"eiusmod irure velit elit\"\n            }\n        ],\n        \"ids:title\": [\n            {\n                \"@value\": \"et consectetur qui non sunt\",\n                \"@type\": \"aliqua ipsum en\",\n                \"@language\": \"enim\"\n            },\n            {\n                \"@value\": \"ut aliquip magna Duis aute\",\n                \"@type\": \"sint\",\n                \"@language\": \"Lorem\"\n            }\n        ]\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/api/ids/contract?recipient=http://VlBADUCyQZdrtokGKPDWip.ftdaBaG1uGYx&resourceIds=https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL&resourceIds=http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG&artifactIds=https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL&artifactIds=http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG&download=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ids",
										"contract"
									],
									"query": [
										{
											"key": "recipient",
											"value": "http://VlBADUCyQZdrtokGKPDWip.ftdaBaG1uGYx"
										},
										{
											"key": "resourceIds",
											"value": "https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL"
										},
										{
											"key": "resourceIds",
											"value": "http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG"
										},
										{
											"key": "artifactIds",
											"value": "https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL"
										},
										{
											"key": "artifactIds",
											"value": "http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG"
										},
										{
											"key": "download",
											"value": "true"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"@id\": \"https://AzVXhe.tincQuWjQCImsE1UWwuRz\",\n        \"@type\": \"in ut reprehenderit qui\",\n        \"ids:action\": [\n            \"https://w3id.org/idsa/code/GRANT_USE\",\n            \"https://w3id.org/idsa/code/TRACK_PROVENANCE\"\n        ],\n        \"properties\": {},\n        \"comment\": [\n            {\n                \"@value\": \"nostrud mollit eiusmod\",\n                \"@type\": \"adipisicing ut elit quis\",\n                \"@language\": \"sunt pariatur id nisi\"\n            },\n            {\n                \"@value\": \"dolore nisi do\",\n                \"@type\": \"sit eu ut minim\",\n                \"@language\": \"offici\"\n            }\n        ],\n        \"label\": [\n            {\n                \"@value\": \"reprehenderit Ut\",\n                \"@type\": \"voluptate aute in mollit\",\n                \"@language\": \"ut aliquip exercitation\"\n            },\n            {\n                \"@value\": \"ci\",\n                \"@type\": \"veniam Excepteur\",\n                \"@language\": \"sit aliqua incididunt dolore\"\n            }\n        ],\n        \"ids:target\": \"http://iYQjnJUkIazaxRGuOZBpdSMjtBnwMfBt.ehdfO,g454FqVygDMJbqqiTdZkkbjgPStZAQfzJGQwA9k5Q8\",\n        \"ids:assigner\": [\n            \"http://cGCAKYXtwERJGwNaB.ydlihW9YKp,qbfs3OmYVnPQvtp3iy30Z\",\n            \"http://jqaVzrtCQXfVFg.stfrLkx9wuV-nnKgGb3G18NCB9\"\n        ],\n        \"ids:assignee\": [\n            \"http://ovtRtTJpthFKZgayadgSGsaDGel.axpDIMx6dQPdvfHQ4,fRU-tlT\",\n            \"http://UnwiwVhiFqmANqVaJRMUpxs.arusCrD1QcFvN1Motr0RrEzEnPMnTorrOrR1lKKvtXxwGUD3hWIls-YBV\"\n        ],\n        \"ids:constraint\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"ids:assetRefinement\": {\n            \"ids:rightOperandReference\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:unit\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:operator\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:rightOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:leftOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:pipEndpoint\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"@type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"ids:description\": [\n            {\n                \"@value\": \"minim est commodo nisi cillum\",\n                \"@type\": \"culpa nisi minim\",\n                \"@language\": \"irure tempor dolore cillum\"\n            },\n            {\n                \"@value\": \"d\",\n                \"@type\": \"consequat aliquip elit in\",\n                \"@language\": \"sed Lorem velit\"\n            }\n        ],\n        \"ids:title\": [\n            {\n                \"@value\": \"consequat ci\",\n                \"@type\": \"proid\",\n                \"@language\": \"amet dolor\"\n            },\n            {\n                \"@value\": \"laboris tempor nisi\",\n                \"@type\": \"et eiusmod\",\n                \"@language\": \"culpa occaecat do\"\n            }\n        ]\n    },\n    {\n        \"@id\": \"https://icsjXYuIoGnQqfYZrtKaCu.puOTczk\",\n        \"@type\": \"ea est reprehenderit\",\n        \"ids:action\": [\n            \"https://w3id.org/idsa/code/WRITE\",\n            \"https://w3id.org/idsa/code/DELETE\"\n        ],\n        \"properties\": {},\n        \"comment\": [\n            {\n                \"@value\": \"Lorem sint exercitation pariatur\",\n                \"@type\": \"amet ex \",\n                \"@language\": \"adipisicing elit\"\n            },\n            {\n                \"@value\": \"nulla commodo\",\n                \"@type\": \"sunt est\",\n                \"@language\": \"in consectetur dolor mollit\"\n            }\n        ],\n        \"label\": [\n            {\n                \"@value\": \"laboris sit\",\n                \"@type\": \"minim dolor\",\n                \"@language\": \"pariatur tempor in consequa\"\n            },\n            {\n                \"@value\": \"est\",\n                \"@type\": \"exercitation Duis\",\n                \"@language\": \"cillum eiusmod consequat minim\"\n            }\n        ],\n        \"ids:target\": \"https://WvxmvWofBjaCiTxkWczmj.tacnJwlrsp8EcJTJvJaaEMMBKYdnPCQ2.wW23j\",\n        \"ids:assigner\": [\n            \"https://BWI.jwsK6cKtlR6SSxY6d0f.0b\",\n            \"http://TwWm.hhhiO1TdCHeuc1WwPz,yKnPpoYzN18r4q82pw9D60+7Syp+yQk1dSJ6rYnq6JnI6JwptI+9W\"\n        ],\n        \"ids:assignee\": [\n            \"https://NIGnmiNcfxwoGbYAiCTBeGeEtAIWxdeP.ghh9X4tRJP7NowQeWW-hAVoxjk2qRG\",\n            \"http://eYAMB.yzckNaPq6zKNN1GQWBLX81M3Y-OJL.mBOr-Q\"\n        ],\n        \"ids:constraint\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"ids:assetRefinement\": {\n            \"ids:rightOperandReference\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:unit\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:operator\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:rightOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:leftOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:pipEndpoint\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"@type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"ids:description\": [\n            {\n                \"@value\": \"et cupidatat\",\n                \"@type\": \"labore occaecat ullamco voluptate irure\",\n                \"@language\": \"sunt\"\n            },\n            {\n                \"@value\": \"cupidatat\",\n                \"@type\": \"enim incididunt\",\n                \"@language\": \"eiusmod irure velit elit\"\n            }\n        ],\n        \"ids:title\": [\n            {\n                \"@value\": \"et consectetur qui non sunt\",\n                \"@type\": \"aliqua ipsum en\",\n                \"@language\": \"enim\"\n            },\n            {\n                \"@value\": \"ut aliquip magna Duis aute\",\n                \"@type\": \"sint\",\n                \"@language\": \"Lorem\"\n            }\n        ]\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/api/ids/contract?recipient=http://VlBADUCyQZdrtokGKPDWip.ftdaBaG1uGYx&resourceIds=https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL&resourceIds=http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG&artifactIds=https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL&artifactIds=http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG&download=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ids",
										"contract"
									],
									"query": [
										{
											"key": "recipient",
											"value": "http://VlBADUCyQZdrtokGKPDWip.ftdaBaG1uGYx"
										},
										{
											"key": "resourceIds",
											"value": "https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL"
										},
										{
											"key": "resourceIds",
											"value": "http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG"
										},
										{
											"key": "artifactIds",
											"value": "https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL"
										},
										{
											"key": "artifactIds",
											"value": "http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG"
										},
										{
											"key": "download",
											"value": "true"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"@id\": \"https://AzVXhe.tincQuWjQCImsE1UWwuRz\",\n        \"@type\": \"in ut reprehenderit qui\",\n        \"ids:action\": [\n            \"https://w3id.org/idsa/code/GRANT_USE\",\n            \"https://w3id.org/idsa/code/TRACK_PROVENANCE\"\n        ],\n        \"properties\": {},\n        \"comment\": [\n            {\n                \"@value\": \"nostrud mollit eiusmod\",\n                \"@type\": \"adipisicing ut elit quis\",\n                \"@language\": \"sunt pariatur id nisi\"\n            },\n            {\n                \"@value\": \"dolore nisi do\",\n                \"@type\": \"sit eu ut minim\",\n                \"@language\": \"offici\"\n            }\n        ],\n        \"label\": [\n            {\n                \"@value\": \"reprehenderit Ut\",\n                \"@type\": \"voluptate aute in mollit\",\n                \"@language\": \"ut aliquip exercitation\"\n            },\n            {\n                \"@value\": \"ci\",\n                \"@type\": \"veniam Excepteur\",\n                \"@language\": \"sit aliqua incididunt dolore\"\n            }\n        ],\n        \"ids:target\": \"http://iYQjnJUkIazaxRGuOZBpdSMjtBnwMfBt.ehdfO,g454FqVygDMJbqqiTdZkkbjgPStZAQfzJGQwA9k5Q8\",\n        \"ids:assigner\": [\n            \"http://cGCAKYXtwERJGwNaB.ydlihW9YKp,qbfs3OmYVnPQvtp3iy30Z\",\n            \"http://jqaVzrtCQXfVFg.stfrLkx9wuV-nnKgGb3G18NCB9\"\n        ],\n        \"ids:assignee\": [\n            \"http://ovtRtTJpthFKZgayadgSGsaDGel.axpDIMx6dQPdvfHQ4,fRU-tlT\",\n            \"http://UnwiwVhiFqmANqVaJRMUpxs.arusCrD1QcFvN1Motr0RrEzEnPMnTorrOrR1lKKvtXxwGUD3hWIls-YBV\"\n        ],\n        \"ids:constraint\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"ids:assetRefinement\": {\n            \"ids:rightOperandReference\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:unit\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:operator\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:rightOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:leftOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:pipEndpoint\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"@type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"ids:description\": [\n            {\n                \"@value\": \"minim est commodo nisi cillum\",\n                \"@type\": \"culpa nisi minim\",\n                \"@language\": \"irure tempor dolore cillum\"\n            },\n            {\n                \"@value\": \"d\",\n                \"@type\": \"consequat aliquip elit in\",\n                \"@language\": \"sed Lorem velit\"\n            }\n        ],\n        \"ids:title\": [\n            {\n                \"@value\": \"consequat ci\",\n                \"@type\": \"proid\",\n                \"@language\": \"amet dolor\"\n            },\n            {\n                \"@value\": \"laboris tempor nisi\",\n                \"@type\": \"et eiusmod\",\n                \"@language\": \"culpa occaecat do\"\n            }\n        ]\n    },\n    {\n        \"@id\": \"https://icsjXYuIoGnQqfYZrtKaCu.puOTczk\",\n        \"@type\": \"ea est reprehenderit\",\n        \"ids:action\": [\n            \"https://w3id.org/idsa/code/WRITE\",\n            \"https://w3id.org/idsa/code/DELETE\"\n        ],\n        \"properties\": {},\n        \"comment\": [\n            {\n                \"@value\": \"Lorem sint exercitation pariatur\",\n                \"@type\": \"amet ex \",\n                \"@language\": \"adipisicing elit\"\n            },\n            {\n                \"@value\": \"nulla commodo\",\n                \"@type\": \"sunt est\",\n                \"@language\": \"in consectetur dolor mollit\"\n            }\n        ],\n        \"label\": [\n            {\n                \"@value\": \"laboris sit\",\n                \"@type\": \"minim dolor\",\n                \"@language\": \"pariatur tempor in consequa\"\n            },\n            {\n                \"@value\": \"est\",\n                \"@type\": \"exercitation Duis\",\n                \"@language\": \"cillum eiusmod consequat minim\"\n            }\n        ],\n        \"ids:target\": \"https://WvxmvWofBjaCiTxkWczmj.tacnJwlrsp8EcJTJvJaaEMMBKYdnPCQ2.wW23j\",\n        \"ids:assigner\": [\n            \"https://BWI.jwsK6cKtlR6SSxY6d0f.0b\",\n            \"http://TwWm.hhhiO1TdCHeuc1WwPz,yKnPpoYzN18r4q82pw9D60+7Syp+yQk1dSJ6rYnq6JnI6JwptI+9W\"\n        ],\n        \"ids:assignee\": [\n            \"https://NIGnmiNcfxwoGbYAiCTBeGeEtAIWxdeP.ghh9X4tRJP7NowQeWW-hAVoxjk2qRG\",\n            \"http://eYAMB.yzckNaPq6zKNN1GQWBLX81M3Y-OJL.mBOr-Q\"\n        ],\n        \"ids:constraint\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"ids:assetRefinement\": {\n            \"ids:rightOperandReference\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:unit\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:operator\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:rightOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:leftOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:pipEndpoint\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"@type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"ids:description\": [\n            {\n                \"@value\": \"et cupidatat\",\n                \"@type\": \"labore occaecat ullamco voluptate irure\",\n                \"@language\": \"sunt\"\n            },\n            {\n                \"@value\": \"cupidatat\",\n                \"@type\": \"enim incididunt\",\n                \"@language\": \"eiusmod irure velit elit\"\n            }\n        ],\n        \"ids:title\": [\n            {\n                \"@value\": \"et consectetur qui non sunt\",\n                \"@type\": \"aliqua ipsum en\",\n                \"@language\": \"enim\"\n            },\n            {\n                \"@value\": \"ut aliquip magna Duis aute\",\n                \"@type\": \"sint\",\n                \"@language\": \"Lorem\"\n            }\n        ]\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/api/ids/contract?recipient=http://VlBADUCyQZdrtokGKPDWip.ftdaBaG1uGYx&resourceIds=https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL&resourceIds=http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG&artifactIds=https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL&artifactIds=http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG&download=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ids",
										"contract"
									],
									"query": [
										{
											"key": "recipient",
											"value": "http://VlBADUCyQZdrtokGKPDWip.ftdaBaG1uGYx"
										},
										{
											"key": "resourceIds",
											"value": "https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL"
										},
										{
											"key": "resourceIds",
											"value": "http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG"
										},
										{
											"key": "artifactIds",
											"value": "https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL"
										},
										{
											"key": "artifactIds",
											"value": "http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG"
										},
										{
											"key": "download",
											"value": "true"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Expectation failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"@id\": \"https://AzVXhe.tincQuWjQCImsE1UWwuRz\",\n        \"@type\": \"in ut reprehenderit qui\",\n        \"ids:action\": [\n            \"https://w3id.org/idsa/code/GRANT_USE\",\n            \"https://w3id.org/idsa/code/TRACK_PROVENANCE\"\n        ],\n        \"properties\": {},\n        \"comment\": [\n            {\n                \"@value\": \"nostrud mollit eiusmod\",\n                \"@type\": \"adipisicing ut elit quis\",\n                \"@language\": \"sunt pariatur id nisi\"\n            },\n            {\n                \"@value\": \"dolore nisi do\",\n                \"@type\": \"sit eu ut minim\",\n                \"@language\": \"offici\"\n            }\n        ],\n        \"label\": [\n            {\n                \"@value\": \"reprehenderit Ut\",\n                \"@type\": \"voluptate aute in mollit\",\n                \"@language\": \"ut aliquip exercitation\"\n            },\n            {\n                \"@value\": \"ci\",\n                \"@type\": \"veniam Excepteur\",\n                \"@language\": \"sit aliqua incididunt dolore\"\n            }\n        ],\n        \"ids:target\": \"http://iYQjnJUkIazaxRGuOZBpdSMjtBnwMfBt.ehdfO,g454FqVygDMJbqqiTdZkkbjgPStZAQfzJGQwA9k5Q8\",\n        \"ids:assigner\": [\n            \"http://cGCAKYXtwERJGwNaB.ydlihW9YKp,qbfs3OmYVnPQvtp3iy30Z\",\n            \"http://jqaVzrtCQXfVFg.stfrLkx9wuV-nnKgGb3G18NCB9\"\n        ],\n        \"ids:assignee\": [\n            \"http://ovtRtTJpthFKZgayadgSGsaDGel.axpDIMx6dQPdvfHQ4,fRU-tlT\",\n            \"http://UnwiwVhiFqmANqVaJRMUpxs.arusCrD1QcFvN1Motr0RrEzEnPMnTorrOrR1lKKvtXxwGUD3hWIls-YBV\"\n        ],\n        \"ids:constraint\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"ids:assetRefinement\": {\n            \"ids:rightOperandReference\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:unit\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:operator\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:rightOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:leftOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:pipEndpoint\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"@type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"ids:description\": [\n            {\n                \"@value\": \"minim est commodo nisi cillum\",\n                \"@type\": \"culpa nisi minim\",\n                \"@language\": \"irure tempor dolore cillum\"\n            },\n            {\n                \"@value\": \"d\",\n                \"@type\": \"consequat aliquip elit in\",\n                \"@language\": \"sed Lorem velit\"\n            }\n        ],\n        \"ids:title\": [\n            {\n                \"@value\": \"consequat ci\",\n                \"@type\": \"proid\",\n                \"@language\": \"amet dolor\"\n            },\n            {\n                \"@value\": \"laboris tempor nisi\",\n                \"@type\": \"et eiusmod\",\n                \"@language\": \"culpa occaecat do\"\n            }\n        ]\n    },\n    {\n        \"@id\": \"https://icsjXYuIoGnQqfYZrtKaCu.puOTczk\",\n        \"@type\": \"ea est reprehenderit\",\n        \"ids:action\": [\n            \"https://w3id.org/idsa/code/WRITE\",\n            \"https://w3id.org/idsa/code/DELETE\"\n        ],\n        \"properties\": {},\n        \"comment\": [\n            {\n                \"@value\": \"Lorem sint exercitation pariatur\",\n                \"@type\": \"amet ex \",\n                \"@language\": \"adipisicing elit\"\n            },\n            {\n                \"@value\": \"nulla commodo\",\n                \"@type\": \"sunt est\",\n                \"@language\": \"in consectetur dolor mollit\"\n            }\n        ],\n        \"label\": [\n            {\n                \"@value\": \"laboris sit\",\n                \"@type\": \"minim dolor\",\n                \"@language\": \"pariatur tempor in consequa\"\n            },\n            {\n                \"@value\": \"est\",\n                \"@type\": \"exercitation Duis\",\n                \"@language\": \"cillum eiusmod consequat minim\"\n            }\n        ],\n        \"ids:target\": \"https://WvxmvWofBjaCiTxkWczmj.tacnJwlrsp8EcJTJvJaaEMMBKYdnPCQ2.wW23j\",\n        \"ids:assigner\": [\n            \"https://BWI.jwsK6cKtlR6SSxY6d0f.0b\",\n            \"http://TwWm.hhhiO1TdCHeuc1WwPz,yKnPpoYzN18r4q82pw9D60+7Syp+yQk1dSJ6rYnq6JnI6JwptI+9W\"\n        ],\n        \"ids:assignee\": [\n            \"https://NIGnmiNcfxwoGbYAiCTBeGeEtAIWxdeP.ghh9X4tRJP7NowQeWW-hAVoxjk2qRG\",\n            \"http://eYAMB.yzckNaPq6zKNN1GQWBLX81M3Y-OJL.mBOr-Q\"\n        ],\n        \"ids:constraint\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"ids:assetRefinement\": {\n            \"ids:rightOperandReference\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:unit\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:operator\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:rightOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:leftOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:pipEndpoint\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"@type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"ids:description\": [\n            {\n                \"@value\": \"et cupidatat\",\n                \"@type\": \"labore occaecat ullamco voluptate irure\",\n                \"@language\": \"sunt\"\n            },\n            {\n                \"@value\": \"cupidatat\",\n                \"@type\": \"enim incididunt\",\n                \"@language\": \"eiusmod irure velit elit\"\n            }\n        ],\n        \"ids:title\": [\n            {\n                \"@value\": \"et consectetur qui non sunt\",\n                \"@type\": \"aliqua ipsum en\",\n                \"@language\": \"enim\"\n            },\n            {\n                \"@value\": \"ut aliquip magna Duis aute\",\n                \"@type\": \"sint\",\n                \"@language\": \"Lorem\"\n            }\n        ]\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/api/ids/contract?recipient=http://VlBADUCyQZdrtokGKPDWip.ftdaBaG1uGYx&resourceIds=https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL&resourceIds=http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG&artifactIds=https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL&artifactIds=http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG&download=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ids",
										"contract"
									],
									"query": [
										{
											"key": "recipient",
											"value": "http://VlBADUCyQZdrtokGKPDWip.ftdaBaG1uGYx"
										},
										{
											"key": "resourceIds",
											"value": "https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL"
										},
										{
											"key": "resourceIds",
											"value": "http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG"
										},
										{
											"key": "artifactIds",
											"value": "https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL"
										},
										{
											"key": "artifactIds",
											"value": "http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG"
										},
										{
											"key": "download",
											"value": "true"
										}
									]
								}
							},
							"status": "Expectation Failed",
							"code": 417,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"@id\": \"https://AzVXhe.tincQuWjQCImsE1UWwuRz\",\n        \"@type\": \"in ut reprehenderit qui\",\n        \"ids:action\": [\n            \"https://w3id.org/idsa/code/GRANT_USE\",\n            \"https://w3id.org/idsa/code/TRACK_PROVENANCE\"\n        ],\n        \"properties\": {},\n        \"comment\": [\n            {\n                \"@value\": \"nostrud mollit eiusmod\",\n                \"@type\": \"adipisicing ut elit quis\",\n                \"@language\": \"sunt pariatur id nisi\"\n            },\n            {\n                \"@value\": \"dolore nisi do\",\n                \"@type\": \"sit eu ut minim\",\n                \"@language\": \"offici\"\n            }\n        ],\n        \"label\": [\n            {\n                \"@value\": \"reprehenderit Ut\",\n                \"@type\": \"voluptate aute in mollit\",\n                \"@language\": \"ut aliquip exercitation\"\n            },\n            {\n                \"@value\": \"ci\",\n                \"@type\": \"veniam Excepteur\",\n                \"@language\": \"sit aliqua incididunt dolore\"\n            }\n        ],\n        \"ids:target\": \"http://iYQjnJUkIazaxRGuOZBpdSMjtBnwMfBt.ehdfO,g454FqVygDMJbqqiTdZkkbjgPStZAQfzJGQwA9k5Q8\",\n        \"ids:assigner\": [\n            \"http://cGCAKYXtwERJGwNaB.ydlihW9YKp,qbfs3OmYVnPQvtp3iy30Z\",\n            \"http://jqaVzrtCQXfVFg.stfrLkx9wuV-nnKgGb3G18NCB9\"\n        ],\n        \"ids:assignee\": [\n            \"http://ovtRtTJpthFKZgayadgSGsaDGel.axpDIMx6dQPdvfHQ4,fRU-tlT\",\n            \"http://UnwiwVhiFqmANqVaJRMUpxs.arusCrD1QcFvN1Motr0RrEzEnPMnTorrOrR1lKKvtXxwGUD3hWIls-YBV\"\n        ],\n        \"ids:constraint\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"ids:assetRefinement\": {\n            \"ids:rightOperandReference\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:unit\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:operator\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:rightOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:leftOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:pipEndpoint\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"@type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"ids:description\": [\n            {\n                \"@value\": \"minim est commodo nisi cillum\",\n                \"@type\": \"culpa nisi minim\",\n                \"@language\": \"irure tempor dolore cillum\"\n            },\n            {\n                \"@value\": \"d\",\n                \"@type\": \"consequat aliquip elit in\",\n                \"@language\": \"sed Lorem velit\"\n            }\n        ],\n        \"ids:title\": [\n            {\n                \"@value\": \"consequat ci\",\n                \"@type\": \"proid\",\n                \"@language\": \"amet dolor\"\n            },\n            {\n                \"@value\": \"laboris tempor nisi\",\n                \"@type\": \"et eiusmod\",\n                \"@language\": \"culpa occaecat do\"\n            }\n        ]\n    },\n    {\n        \"@id\": \"https://icsjXYuIoGnQqfYZrtKaCu.puOTczk\",\n        \"@type\": \"ea est reprehenderit\",\n        \"ids:action\": [\n            \"https://w3id.org/idsa/code/WRITE\",\n            \"https://w3id.org/idsa/code/DELETE\"\n        ],\n        \"properties\": {},\n        \"comment\": [\n            {\n                \"@value\": \"Lorem sint exercitation pariatur\",\n                \"@type\": \"amet ex \",\n                \"@language\": \"adipisicing elit\"\n            },\n            {\n                \"@value\": \"nulla commodo\",\n                \"@type\": \"sunt est\",\n                \"@language\": \"in consectetur dolor mollit\"\n            }\n        ],\n        \"label\": [\n            {\n                \"@value\": \"laboris sit\",\n                \"@type\": \"minim dolor\",\n                \"@language\": \"pariatur tempor in consequa\"\n            },\n            {\n                \"@value\": \"est\",\n                \"@type\": \"exercitation Duis\",\n                \"@language\": \"cillum eiusmod consequat minim\"\n            }\n        ],\n        \"ids:target\": \"https://WvxmvWofBjaCiTxkWczmj.tacnJwlrsp8EcJTJvJaaEMMBKYdnPCQ2.wW23j\",\n        \"ids:assigner\": [\n            \"https://BWI.jwsK6cKtlR6SSxY6d0f.0b\",\n            \"http://TwWm.hhhiO1TdCHeuc1WwPz,yKnPpoYzN18r4q82pw9D60+7Syp+yQk1dSJ6rYnq6JnI6JwptI+9W\"\n        ],\n        \"ids:assignee\": [\n            \"https://NIGnmiNcfxwoGbYAiCTBeGeEtAIWxdeP.ghh9X4tRJP7NowQeWW-hAVoxjk2qRG\",\n            \"http://eYAMB.yzckNaPq6zKNN1GQWBLX81M3Y-OJL.mBOr-Q\"\n        ],\n        \"ids:constraint\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"ids:assetRefinement\": {\n            \"ids:rightOperandReference\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:unit\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:operator\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:rightOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:leftOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:pipEndpoint\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"@type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"ids:description\": [\n            {\n                \"@value\": \"et cupidatat\",\n                \"@type\": \"labore occaecat ullamco voluptate irure\",\n                \"@language\": \"sunt\"\n            },\n            {\n                \"@value\": \"cupidatat\",\n                \"@type\": \"enim incididunt\",\n                \"@language\": \"eiusmod irure velit elit\"\n            }\n        ],\n        \"ids:title\": [\n            {\n                \"@value\": \"et consectetur qui non sunt\",\n                \"@type\": \"aliqua ipsum en\",\n                \"@language\": \"enim\"\n            },\n            {\n                \"@value\": \"ut aliquip magna Duis aute\",\n                \"@type\": \"sint\",\n                \"@language\": \"Lorem\"\n            }\n        ]\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/api/ids/contract?recipient=http://VlBADUCyQZdrtokGKPDWip.ftdaBaG1uGYx&resourceIds=https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL&resourceIds=http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG&artifactIds=https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL&artifactIds=http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG&download=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ids",
										"contract"
									],
									"query": [
										{
											"key": "recipient",
											"value": "http://VlBADUCyQZdrtokGKPDWip.ftdaBaG1uGYx"
										},
										{
											"key": "resourceIds",
											"value": "https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL"
										},
										{
											"key": "resourceIds",
											"value": "http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG"
										},
										{
											"key": "artifactIds",
											"value": "https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL"
										},
										{
											"key": "artifactIds",
											"value": "http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG"
										},
										{
											"key": "download",
											"value": "true"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad gateway",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"@id\": \"https://AzVXhe.tincQuWjQCImsE1UWwuRz\",\n        \"@type\": \"in ut reprehenderit qui\",\n        \"ids:action\": [\n            \"https://w3id.org/idsa/code/GRANT_USE\",\n            \"https://w3id.org/idsa/code/TRACK_PROVENANCE\"\n        ],\n        \"properties\": {},\n        \"comment\": [\n            {\n                \"@value\": \"nostrud mollit eiusmod\",\n                \"@type\": \"adipisicing ut elit quis\",\n                \"@language\": \"sunt pariatur id nisi\"\n            },\n            {\n                \"@value\": \"dolore nisi do\",\n                \"@type\": \"sit eu ut minim\",\n                \"@language\": \"offici\"\n            }\n        ],\n        \"label\": [\n            {\n                \"@value\": \"reprehenderit Ut\",\n                \"@type\": \"voluptate aute in mollit\",\n                \"@language\": \"ut aliquip exercitation\"\n            },\n            {\n                \"@value\": \"ci\",\n                \"@type\": \"veniam Excepteur\",\n                \"@language\": \"sit aliqua incididunt dolore\"\n            }\n        ],\n        \"ids:target\": \"http://iYQjnJUkIazaxRGuOZBpdSMjtBnwMfBt.ehdfO,g454FqVygDMJbqqiTdZkkbjgPStZAQfzJGQwA9k5Q8\",\n        \"ids:assigner\": [\n            \"http://cGCAKYXtwERJGwNaB.ydlihW9YKp,qbfs3OmYVnPQvtp3iy30Z\",\n            \"http://jqaVzrtCQXfVFg.stfrLkx9wuV-nnKgGb3G18NCB9\"\n        ],\n        \"ids:assignee\": [\n            \"http://ovtRtTJpthFKZgayadgSGsaDGel.axpDIMx6dQPdvfHQ4,fRU-tlT\",\n            \"http://UnwiwVhiFqmANqVaJRMUpxs.arusCrD1QcFvN1Motr0RrEzEnPMnTorrOrR1lKKvtXxwGUD3hWIls-YBV\"\n        ],\n        \"ids:constraint\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"ids:assetRefinement\": {\n            \"ids:rightOperandReference\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:unit\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:operator\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:rightOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:leftOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:pipEndpoint\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"@type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"ids:description\": [\n            {\n                \"@value\": \"minim est commodo nisi cillum\",\n                \"@type\": \"culpa nisi minim\",\n                \"@language\": \"irure tempor dolore cillum\"\n            },\n            {\n                \"@value\": \"d\",\n                \"@type\": \"consequat aliquip elit in\",\n                \"@language\": \"sed Lorem velit\"\n            }\n        ],\n        \"ids:title\": [\n            {\n                \"@value\": \"consequat ci\",\n                \"@type\": \"proid\",\n                \"@language\": \"amet dolor\"\n            },\n            {\n                \"@value\": \"laboris tempor nisi\",\n                \"@type\": \"et eiusmod\",\n                \"@language\": \"culpa occaecat do\"\n            }\n        ]\n    },\n    {\n        \"@id\": \"https://icsjXYuIoGnQqfYZrtKaCu.puOTczk\",\n        \"@type\": \"ea est reprehenderit\",\n        \"ids:action\": [\n            \"https://w3id.org/idsa/code/WRITE\",\n            \"https://w3id.org/idsa/code/DELETE\"\n        ],\n        \"properties\": {},\n        \"comment\": [\n            {\n                \"@value\": \"Lorem sint exercitation pariatur\",\n                \"@type\": \"amet ex \",\n                \"@language\": \"adipisicing elit\"\n            },\n            {\n                \"@value\": \"nulla commodo\",\n                \"@type\": \"sunt est\",\n                \"@language\": \"in consectetur dolor mollit\"\n            }\n        ],\n        \"label\": [\n            {\n                \"@value\": \"laboris sit\",\n                \"@type\": \"minim dolor\",\n                \"@language\": \"pariatur tempor in consequa\"\n            },\n            {\n                \"@value\": \"est\",\n                \"@type\": \"exercitation Duis\",\n                \"@language\": \"cillum eiusmod consequat minim\"\n            }\n        ],\n        \"ids:target\": \"https://WvxmvWofBjaCiTxkWczmj.tacnJwlrsp8EcJTJvJaaEMMBKYdnPCQ2.wW23j\",\n        \"ids:assigner\": [\n            \"https://BWI.jwsK6cKtlR6SSxY6d0f.0b\",\n            \"http://TwWm.hhhiO1TdCHeuc1WwPz,yKnPpoYzN18r4q82pw9D60+7Syp+yQk1dSJ6rYnq6JnI6JwptI+9W\"\n        ],\n        \"ids:assignee\": [\n            \"https://NIGnmiNcfxwoGbYAiCTBeGeEtAIWxdeP.ghh9X4tRJP7NowQeWW-hAVoxjk2qRG\",\n            \"http://eYAMB.yzckNaPq6zKNN1GQWBLX81M3Y-OJL.mBOr-Q\"\n        ],\n        \"ids:constraint\": [\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        ],\n        \"ids:assetRefinement\": {\n            \"ids:rightOperandReference\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:unit\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:operator\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:rightOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:leftOperand\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ids:pipEndpoint\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"@type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n        },\n        \"ids:description\": [\n            {\n                \"@value\": \"et cupidatat\",\n                \"@type\": \"labore occaecat ullamco voluptate irure\",\n                \"@language\": \"sunt\"\n            },\n            {\n                \"@value\": \"cupidatat\",\n                \"@type\": \"enim incididunt\",\n                \"@language\": \"eiusmod irure velit elit\"\n            }\n        ],\n        \"ids:title\": [\n            {\n                \"@value\": \"et consectetur qui non sunt\",\n                \"@type\": \"aliqua ipsum en\",\n                \"@language\": \"enim\"\n            },\n            {\n                \"@value\": \"ut aliquip magna Duis aute\",\n                \"@type\": \"sint\",\n                \"@language\": \"Lorem\"\n            }\n        ]\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/api/ids/contract?recipient=http://VlBADUCyQZdrtokGKPDWip.ftdaBaG1uGYx&resourceIds=https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL&resourceIds=http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG&artifactIds=https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL&artifactIds=http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG&download=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ids",
										"contract"
									],
									"query": [
										{
											"key": "recipient",
											"value": "http://VlBADUCyQZdrtokGKPDWip.ftdaBaG1uGYx"
										},
										{
											"key": "resourceIds",
											"value": "https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL"
										},
										{
											"key": "resourceIds",
											"value": "http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG"
										},
										{
											"key": "artifactIds",
											"value": "https://SGJNfqCcdsihRGwtfGmFPmjPwr.kxnsvcwRctmUwL"
										},
										{
											"key": "artifactIds",
											"value": "http://pklhbKhEIHAhRfJIYZ.ckuLSnkXxKGt4Gpued7H8AFqWaK5PgbpYTfdwpbB5UB5.5fsmTgBhN8pIDG"
										},
										{
											"key": "download",
											"value": "true"
										}
									]
								}
							},
							"status": "Bad Gateway",
							"code": 502,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "13 - Check Artifacts under Consumer Agreement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Extract Remote Artifact Id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var fullId=jsonData._embedded.artifacts[0]._links.self.href\r",
									"    console.info(\"Setting environment variable 'remote-artifact-full' to \" + fullId)\r",
									"    pm.environment.set(\"remote-artifact-full\", fullId);\r",
									"    var shortId=fullId.substring(fullId.lastIndexOf('/') + 1)\r",
									"    console.info(\"Setting environment variable 'remote-artifact' to \" + shortId)\r",
									"    pm.environment.set(\"remote-artifact\", shortId);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{consumerConnectorUrl}}/api/agreements/:id/artifacts?page=0&size=30",
							"host": [
								"{{consumerConnectorUrl}}"
							],
							"path": [
								"api",
								"agreements",
								":id",
								"artifacts"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "30"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{agreement}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Ok",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/artifacts/:id/subscriptions?page=0&size=30",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"artifacts",
										":id",
										"subscriptions"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "30"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/artifacts/:id/subscriptions?page=0&size=30",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"artifacts",
										":id",
										"subscriptions"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "30"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "14 - Request/Query Data By Consumer Artifact and Agreement",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{consumerConnectorUrl}}/api/artifacts/:id/data/**?download=true&agreementUri={{remote-agreement}}",
							"host": [
								"{{consumerConnectorUrl}}"
							],
							"path": [
								"api",
								"artifacts",
								":id",
								"data",
								"**"
							],
							"query": [
								{
									"key": "download",
									"value": "true"
								},
								{
									"key": "agreementUri",
									"value": "{{remote-agreement}}"
								},
								{
									"key": "manufacturer",
									"value": "BMW",
									"disabled": true
								},
								{
									"key": "number",
									"value": "8P61",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{remote-artifact}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Ok",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/artifacts/:id/data/**?download=true&agreementUri=http://VlBADUCyQZdrtokGKPDWip.ftdaBaG1uGYx",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"artifacts",
										":id",
										"data",
										"**"
									],
									"query": [
										{
											"key": "download",
											"value": "true"
										},
										{
											"key": "agreementUri",
											"value": "http://VlBADUCyQZdrtokGKPDWip.ftdaBaG1uGYx"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/artifacts/:id/data/**?download=true&agreementUri=http://VlBADUCyQZdrtokGKPDWip.ftdaBaG1uGYx",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"artifacts",
										":id",
										"data",
										"**"
									],
									"query": [
										{
											"key": "download",
											"value": "true"
										},
										{
											"key": "agreementUri",
											"value": "http://VlBADUCyQZdrtokGKPDWip.ftdaBaG1uGYx"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "password",
						"value": "{{catenax-admin-password}}",
						"type": "string"
					},
					{
						"key": "username",
						"value": "{{catenax-admin}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "IDS Connector Artifact Search",
			"item": [
				{
					"name": "List/Find Catalogs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Extract First Catalog\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var fullId=jsonData._embedded.catalogs[0]._links.self.href\r",
									"    var shortId=fullId.substring(fullId.lastIndexOf('/') + 1)\r",
									"    console.info(\"Setting environment variable 'catalog' to \" + shortId)\r",
									"    pm.environment.set(\"catalog\", shortId);\r",
									"});\r",
									"    "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{providerConnectorUrl}}/api/catalogs?page=0&size=1",
							"host": [
								"{{providerConnectorUrl}}"
							],
							"path": [
								"api",
								"catalogs"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "1"
								}
							]
						}
					},
					"response": [
						{
							"name": "Ok",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/catalogs?page=0&size=30",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"catalogs"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "30"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/catalogs?page=0&size=30",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"catalogs"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "30"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List/Find Offer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Extract First Offer\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var fullId=jsonData._embedded.resources[0]._links.self.href\r",
									"    var shortId=fullId.substring(fullId.lastIndexOf('/') + 1)\r",
									"    console.info(\"Setting environment variable 'offer-full' to \" + fullId)\r",
									"    pm.environment.set(\"offer-full\", fullId);\r",
									"    pm.environment.set(\"offer\", shortId);\r",
									"});\r",
									"    "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{providerConnectorUrl}}/api/catalogs/:id/offers?page=0&size=30",
							"host": [
								"{{providerConnectorUrl}}"
							],
							"path": [
								"api",
								"catalogs",
								":id",
								"offers"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "30"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{catalog}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Ok",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/catalogs/:id/offers?page=0&size=30",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"catalogs",
										":id",
										"offers"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "30"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/catalogs/:id/offers?page=0&size=30",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"catalogs",
										":id",
										"offers"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "30"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List/Find Representations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Extract First Representation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var fullId=jsonData._embedded.representations[0]._links.self.href\r",
									"    var shortId=fullId.substring(fullId.lastIndexOf('/') + 1)\r",
									"    console.info(\"Setting environment variable 'representation-full' to \" + fullId)\r",
									"    pm.environment.set(\"representation-full\", fullId);\r",
									"    pm.environment.set(\"representation\", shortId);\r",
									"});\r",
									"    "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{providerConnectorUrl}}/api/offers/:id/representations?page=0&size=30",
							"host": [
								"{{providerConnectorUrl}}"
							],
							"path": [
								"api",
								"offers",
								":id",
								"representations"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "30"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{offer}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Ok",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/offers/:id/representations?page=0&size=30",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"offers",
										":id",
										"representations"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "30"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/offers/:id/representations?page=0&size=30",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"offers",
										":id",
										"representations"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "30"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List/Find Artifacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Extract First Artifact\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var fullId=jsonData._embedded.artifacts[0]._links.self.href\r",
									"    var shortId=fullId.substring(fullId.lastIndexOf('/') + 1)\r",
									"    console.info(\"Setting environment variable 'artifact-full' to \" + fullId)\r",
									"    pm.environment.set(\"local-artifact-full\", fullId);\r",
									"    pm.environment.set(\"local-artifact\", shortId);\r",
									"});\r",
									"    "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{providerConnectorUrl}}/api/representations/:id/artifacts?page=0&size=30",
							"host": [
								"{{providerConnectorUrl}}"
							],
							"path": [
								"api",
								"representations",
								":id",
								"artifacts"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "30"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{representation}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Ok",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/representations/:id/artifacts?page=0&size=30",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"representations",
										":id",
										"artifacts"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "30"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/representations/:id/artifacts?page=0&size=30",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"representations",
										":id",
										"artifacts"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "30"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "password",
						"value": "{{catenax-admin-password}}",
						"type": "string"
					},
					{
						"key": "username",
						"value": "{{catenax-admin}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "IDS Vocabulary Provider",
			"item": [
				{
					"name": "IDS self-description",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{vocabularyprovider}}",
							"host": [
								"{{vocabularyprovider}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Describe Resource",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Date",
								"value": "Tue, 11 Feb 2020 08:12:31 GMT",
								"type": "text",
								"disabled": true
							},
							{
								"key": "MessageType",
								"value": "ids:SelfDescriptionRequestMessage",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "multipart/mixed",
								"type": "text"
							},
							{
								"key": "IssuerConnector",
								"value": "http://localhost/client/",
								"type": "text",
								"disabled": true
							},
							{
								"key": "SecurityToken",
								"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImRlZmF1bHQifQ.eyJzZWN1cml0eV9sZXZlbCI6Nywic2NvcGVzIjpbImlkc19jb25uZWN0b3IiLCJzZWN1cml0eV9sZXZlbCJdLCJhdWQiOiJJRFNfQ29ubmVjdG9yIiwiaXNzIjoiaHR0cHM6Ly9kYXBzLmFpc2VjLmZyYXVuaG9mZXIuZGUiLCJzdWIiOiI3MTgxMGZmZi00MTM5LTQ5ZDAtYjBhNC03ZDAyYjliNTRkMTUiLCJuYmYiOjE1NTk3MzAyNTAsImV4cCI6MTU1OTczMzg1MH0.oS5kZtFhqn1jUSBtmCKSU0MzcVAxhfW7BCa4oIo_aQi6Qcc-FN-bBhmx1fXgD57HqXaV7r0kxJrDsoDGo4AE1qG384HhSzFJOqA6Nws7n0OorkjsOIFMM4ulPYNKy2srUAb9EeDaAWb6uGA5bbk5E1yKM73ub_U8OF1W4OmgUCOFizxOPY8HEnklsk6eiqrAFFCebp-BtuaVp1p7U9SotpcFxoq235OwRWz2aFiAr9v53VLJzlBYPGsuqdBZ1lpOUQXCMbDfqWXfyNSa0uDPeHKP_Xj1tUug0g-WXjGsZIMzXHPvAM-syw1SweYq_c4ulpZyABSYPSwEfufdtaO_Iw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "header",
									"value": "{\n  \"@context\" : {\n    \"ids\" : \"https://w3id.org/idsa/core/\",\n    \"idsc\" : \"https://w3id.org/idsa/code/\",\n    \"xsd\":\"http://www.w3.org/2001/XMLSchema#\"\n  },\n  \"@type\" : \"ids:DescriptionRequestMessage\",\n  \"@id\" : \"http://industrialdataspace.org/1a421b8c-3407-44a8-aeb9-253f145c869a\",\n  \"ids:issued\" : {\"@value\":\"2021-05-25T15:35:34.589Z\",\"@type\":\"xsd:dateTimeStamp\"},\n  \"ids:modelVersion\" : \"4.0.0\",\n  \"ids:senderAgent\":{\"@id\":\"https://localhost/agent\"},\n  \"ids:issuerConnector\":{\"@id\":\"https://localhost/59a68243\"},\n  \"ids:securityToken\" : {\n    \"@type\" : \"ids:DynamicAttributeToken\",\n    \"@id\" : \"https://w3id.org/idsa/autogen/dynamicAttributeToken/2bd53efc-5995-d75590476820\",\n    \"ids:tokenFormat\" : {\n      \"@id\" : \"https://w3id.org/idsa/code/JWT\"\n    },\n    \"ids:tokenValue\" : \"{{token}}\"\n  }\n}",
									"type": "text"
								},
								{
									"key": "payload",
									"value": "urn:bamm:io.openmanufacturing:meta-model:1.0.0#Aspect",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{vocabularyprovider}}/infrastructure",
							"host": [
								"{{vocabularyprovider}}"
							],
							"path": [
								"infrastructure"
							]
						}
					},
					"response": []
				},
				{
					"name": "Perform Query",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Date",
								"value": "Tue, 11 Feb 2020 08:12:31 GMT",
								"type": "text",
								"disabled": true
							},
							{
								"key": "MessageType",
								"value": "ids:SelfDescriptionRequestMessage",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "multipart/mixed",
								"type": "text"
							},
							{
								"key": "IssuerConnector",
								"value": "http://localhost/client/",
								"type": "text",
								"disabled": true
							},
							{
								"key": "SecurityToken",
								"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImRlZmF1bHQifQ.eyJzZWN1cml0eV9sZXZlbCI6Nywic2NvcGVzIjpbImlkc19jb25uZWN0b3IiLCJzZWN1cml0eV9sZXZlbCJdLCJhdWQiOiJJRFNfQ29ubmVjdG9yIiwiaXNzIjoiaHR0cHM6Ly9kYXBzLmFpc2VjLmZyYXVuaG9mZXIuZGUiLCJzdWIiOiI3MTgxMGZmZi00MTM5LTQ5ZDAtYjBhNC03ZDAyYjliNTRkMTUiLCJuYmYiOjE1NTk3MzAyNTAsImV4cCI6MTU1OTczMzg1MH0.oS5kZtFhqn1jUSBtmCKSU0MzcVAxhfW7BCa4oIo_aQi6Qcc-FN-bBhmx1fXgD57HqXaV7r0kxJrDsoDGo4AE1qG384HhSzFJOqA6Nws7n0OorkjsOIFMM4ulPYNKy2srUAb9EeDaAWb6uGA5bbk5E1yKM73ub_U8OF1W4OmgUCOFizxOPY8HEnklsk6eiqrAFFCebp-BtuaVp1p7U9SotpcFxoq235OwRWz2aFiAr9v53VLJzlBYPGsuqdBZ1lpOUQXCMbDfqWXfyNSa0uDPeHKP_Xj1tUug0g-WXjGsZIMzXHPvAM-syw1SweYq_c4ulpZyABSYPSwEfufdtaO_Iw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "header",
									"value": "{\n  \"@context\" : {\n    \"ids\" : \"https://w3id.org/idsa/core/\",\n    \"idsc\" : \"https://w3id.org/idsa/code/\",\n    \"xsd\":\"http://www.w3.org/2001/XMLSchema#\"\n  },\n  \"@type\" : \"ids:QueryMessage\",\n  \"@id\" : \"http://industrialdataspace.org/1a421b8c-3407-44a8-aeb9-253f145c869a\",\n  \"ids:issued\" : {\"@value\":\"2021-05-25T15:35:34.589Z\",\"@type\":\"xsd:dateTimeStamp\"},\n  \"ids:modelVersion\" : \"4.0.0\",\n  \"ids:senderAgent\":{\"@id\":\"https://localhost/agent\"},\n  \"ids:issuerConnector\":{\"@id\":\"https://localhost/59a68243\"},\n  \"ids:securityToken\" : {\n    \"@type\" : \"ids:DynamicAttributeToken\",\n    \"@id\" : \"https://w3id.org/idsa/autogen/dynamicAttributeToken/2bd53efc-5995-d75590476820\",\n    \"ids:tokenFormat\" : {\n      \"@id\" : \"https://w3id.org/idsa/code/JWT\"\n    },\n    \"ids:tokenValue\" : \"{{token}}\"\n  },\n  \"ids:queryLanguage\" : {\n    \"@id\" : \"idsc:SPARQL\"\n  },\n  \"ids:queryScope\" : {\n    \"@id\" : \"idsc:ALL\"\n  }\n}",
									"type": "text"
								},
								{
									"key": "payload",
									"value": "PREFIX ids: <https://w3id.org/idsa/core/>\nSELECT ?subject ?predicate ?object\nWHERE {\n  ?subject ?predicate ?object\n}\nLIMIT 25",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{vocabularyprovider}}/infrastructure",
							"host": [
								"{{vocabularyprovider}}"
							],
							"path": [
								"infrastructure"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Semantic Layer",
			"item": [
				{
					"name": "Semantic Hub",
					"item": [
						{
							"name": "{model-id}",
							"item": [
								{
									"name": "getModelById",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{semanticServicesUrl}}/models/urn:bamm:com.catenaX:0.0.1%23Traceability",
											"host": [
												"{{semanticServicesUrl}}"
											],
											"path": [
												"models",
												"urn:bamm:com.catenaX:0.0.1%23Traceability"
											]
										}
									},
									"response": [
										{
											"name": "The resulting model entry.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "modifyModel",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"private\": false,\n    \"publisher\": \"Catena-X Consortium\",\n    \"type\": \"BAMM\",\n    \"model\": \"@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#> .\\n@prefix unit: <urn:bamm:io.openmanufacturing:unit:1.0.0#> .\\n@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#> .\\n@prefix bamm-e: <urn:bamm:io.openmanufacturing:entity:1.0.0#> .\\n@prefix : <urn:bamm:com.catenaX:0.0.1#> .\\n\\n:Traceability a bamm:Aspect ;\\n   bamm:name \\\"Traceability\\\" ;\\n   bamm:preferredName \\\"Traceability\\\"@en ;\\n   bamm:description \\\"Traceability\\\"@en ;\\n   bamm:properties ( :staticData :uniqueData :individualData :supplierTree :partTree :qualityAlertData ) ;\\n   bamm:operations () .\\n\\n:individualData a bamm:Property ;\\n   bamm:name \\\"individualData\\\" ;\\n   bamm:preferredName \\\"Individual Data\\\"@en ;\\n   bamm:characteristic :PartIndividualDataCharacteristic .\\n\\n:PartIndividualDataCharacteristic a bamm-c:SingleEntity ;\\n   bamm:name \\\"PartIndividualDataCharacteristic\\\" ;\\n   bamm:dataType :PartIndividualDataEntity .\\n\\n:PartIndividualDataEntity a bamm:Entity ;\\n   bamm:name \\\"PartIndividualDataEntity\\\" ;\\n   bamm:preferredName \\\"Individual Data\\\"@en ;\\n   bamm:properties ( :productionCountryCode :productionDateGMT ) .\\n\\n:productionCountryCode a bamm:Property ;\\n   bamm:name \\\"productionCountryCode\\\" ;\\n   bamm:preferredName \\\"Country code of production\\\"@en ;\\n   bamm:description \\\"Country code of production\\\"@en ;\\n   bamm:characteristic :CountryCodeCharacteristic ;\\n   bamm:exampleValue \\\"HUR\\\" .\\n\\n:CountryCodeCharacteristic a bamm-c:Code ;\\n   bamm:name \\\"CountryCodeCharacteristic\\\" ;\\n   bamm:dataType xsd:string .\\n\\n:productionDateGMT a bamm:Property ;\\n   bamm:name \\\"productionDateGMT\\\" ;\\n   bamm:preferredName \\\"Production Date (GMT)\\\"@en ;\\n   bamm:description \\\"Production date without timestamp\\\"@en ;\\n   bamm:characteristic :DateWithoutTimestamp ;\\n   bamm:exampleValue \\\"2021-05-30\\\"^^xsd:date .\\n\\n:DateWithoutTimestamp a bamm:Characteristic ;\\n   bamm:name \\\"DateWithoutTimestamp\\\" ;\\n   bamm:preferredName \\\"Date (without timestamp)\\\"@en ;\\n   bamm:description \\\"Date without timestamp conformant to ISO 8601\\\"@en ;\\n   bamm:dataType xsd:date .\\n\\n:partTree a bamm:Property ;\\n   bamm:name \\\"partTree\\\" ;\\n   bamm:preferredName \\\"Part Tree Parent\\\"@en ;\\n   bamm:characteristic :PartTreeParentCharacteristic .\\n   \\n:supplierTree a bamm:Property ;\\n   bamm:name \\\"supplierTree\\\" ;\\n   bamm:preferredName \\\"Supplier Tree\\\"@en ;\\n   bamm:characteristic :PartTreeParentCharacteristic .\\n   \\n:PartTreeParentCharacteristic a bamm:Characteristic ;\\n   bamm:name \\\"PartTreeParentCharacteristic\\\" ;\\n   bamm:dataType :PartTreeParentEntity .\\n\\n:PartTreeParentEntity a bamm:Entity ;\\n   bamm:name \\\"PartTreeParentEntity\\\" ;\\n   bamm:properties ( :isParentOf ) .\\n\\n:isParentOf a bamm:Property ;\\n   bamm:name \\\"isParentOf\\\" ;\\n   bamm:preferredName \\\"is Parent of\\\"@en ;\\n   bamm:description \\\"Set of Parts, identified by ID\\\"@en ;\\n   bamm:characteristic :IsParentOfCharacteristic .\\n\\n:IsParentOfCharacteristic a bamm-c:Set ;\\n   bamm:name \\\"IsParentOfCharacteristic\\\" ;\\n   bamm:dataType :ProductReferenceEntity .\\n\\n:ProductReferenceEntity a bamm:Entity ;\\n   bamm:name \\\"ProductReferenceEntity\\\" ;\\n   bamm:properties ( :src :value ) ;\\n   bamm:preferredName \\\"Product Reference\\\"@en .\\n\\n:src a bamm:Property ;\\n   bamm:name \\\"src\\\" ;\\n   bamm:preferredName \\\"Product Reference Source\\\"@en ;\\n   bamm:characteristic :StringCharacteristic .\\n\\n:value a bamm:Property ;\\n   bamm:name \\\"value\\\" ;\\n   bamm:preferredName \\\"Product Reference Value\\\"@en ;\\n   bamm:characteristic :StringCharacteristic .\\n\\n:StringCharacteristic a bamm-c:Code ;\\n   bamm:name \\\"StringCharacteristic\\\" ;\\n   bamm:dataType xsd:string .\\n\\n:qualityAlertData a bamm:Property ;\\n   bamm:name \\\"qualityAlertData\\\" ;\\n   bamm:preferredName \\\"Quality Alert Data\\\"@en ;\\n   bamm:characteristic :QualityAlertDataCharacteristic .\\n\\n:QualityAlertDataCharacteristic a bamm-c:SingleEntity ;\\n   bamm:name \\\"QualityAlertDataCharacteristic\\\" ;\\n   bamm:dataType :QualityAlertDataEntity .\\n\\n:QualityAlertDataEntity a bamm:Entity ;\\n   bamm:name \\\"QualityAlertDataEntity\\\" ;\\n   bamm:properties ( :qualityAlert :qualityType ) ;\\n   bamm:preferredName \\\"Quality Alert Data\\\"@en .\\n\\n:qualityAlert a bamm:Property ;\\n   bamm:name \\\"qualityAlert\\\" ;\\n   bamm:preferredName \\\"Quality Alert\\\"@en ;\\n   bamm:characteristic bamm-c:Boolean ;\\n   bamm:exampleValue \\\"true\\\"^^xsd:boolean .\\n\\n:qualityType a bamm:Property ;\\n   bamm:name \\\"qualityType\\\" ;\\n   bamm:preferredName \\\"Quality Type\\\"@en ;\\n   bamm:characteristic :QualityTypeEnum ;\\n   bamm:exampleValue \\\"major\\\"^^xsd:string .\\n\\n:QualityTypeEnum a bamm-c:Enumeration ;\\n   bamm:name \\\"QualityTypeEnum\\\" ;\\n   bamm:dataType xsd:string ;\\n   bamm-c:values ( \\\"major\\\" \\\"minor\\\" \\\"critical\\\" ) .\\n\\n:staticData a bamm:Property ;\\n   bamm:name \\\"staticData\\\" ;\\n   bamm:preferredName \\\"Static Data\\\"@en ;\\n   bamm:characteristic :PartStaticDataCharacteristic .\\n\\n:PartStaticDataCharacteristic a bamm-c:SingleEntity ;\\n   bamm:name \\\"PartStaticDataCharacteristic\\\" ;\\n   bamm:dataType :PartStaticDataEntity .\\n\\n:PartStaticDataEntity a bamm:Entity ;\\n   bamm:name \\\"PartStaticDataEntity\\\" ;\\n   bamm:properties ( :customerContractOneID :customerOneID :manufacturerContractOneID :manufacturerOneID :partNameCustomer :partNameManufacturer :partNumberCustomer :partNumberManufacturer ) ;\\n   bamm:preferredName \\\"Static Data\\\"@en .\\n\\n:customerContractOneID a bamm:Property ;\\n   bamm:name \\\"customerContractOneID\\\" ;\\n   bamm:preferredName \\\"Customer Contract OneID\\\"@en ;\\n   bamm:description \\\"OneID of customer contract partner\\\"@en ;\\n   bamm:characteristic :OneIDBusinessPartner .\\n\\n:customerOneID a bamm:Property ;\\n   bamm:name \\\"customerOneID\\\" ;\\n   bamm:preferredName \\\"Customer OneID\\\"@en ;\\n   bamm:description \\\"OneID of customer plant\\\"@en ;\\n   bamm:characteristic :OneIDBusinessPartner ;\\n   bamm:exampleValue \\\"CUSTOMER_ID\\\" .\\n\\n:manufacturerContractOneID a bamm:Property ;\\n   bamm:name \\\"manufacturerContractOneID\\\" ;\\n   bamm:preferredName \\\"Manufacturer Contract OneID\\\"@en ;\\n   bamm:description \\\"OneID of manufacturer contract partner\\\"@en ;\\n   bamm:characteristic :OneIDBusinessPartner .\\n\\n:manufacturerOneID a bamm:Property ;\\n   bamm:name \\\"manufacturerOneID\\\" ;\\n   bamm:preferredName \\\"Manufacturer OneID\\\"@en ;\\n   bamm:description \\\"OneID of manufacturer partner\\\"@en ;\\n   bamm:characteristic :OneIDBusinessPartner ;\\n   bamm:exampleValue \\\"ERROR_CP\\\" .\\n\\n:partNameCustomer a bamm:Property ;\\n   bamm:name \\\"partNameCustomer\\\" ;\\n   bamm:preferredName \\\"Name of the product (customer)\\\"@en ;\\n   bamm:description \\\"Name of the part family of customer\\\"@en ;\\n   bamm:characteristic bamm-c:Text ;\\n   bamm:exampleValue \\\"MIRROR_1\\\" .\\n\\n:partNameManufacturer a bamm:Property ;\\n   bamm:name \\\"partNameManufacturer\\\" ;\\n   bamm:preferredName \\\"Name of the product (manufacturer)\\\"@en ;\\n   bamm:description \\\"Name of the part family of manufacture\\\"@en ;\\n   bamm:characteristic bamm-c:Text ;\\n   bamm:exampleValue \\\"KLEBER1\\\" .\\n\\n:partNumberCustomer a bamm:Property ;\\n   bamm:name \\\"partNumberCustomer\\\" ;\\n   bamm:preferredName \\\"Part number (customer)\\\"@en ;\\n   bamm:description \\\"Type/Part No. of customer product\\\"@en ;\\n   bamm:characteristic :PartNumberCharacteristic ;\\n   bamm:exampleValue \\\"1122334455\\\" .\\n\\n:partNumberManufacturer a bamm:Property ;\\n   bamm:name \\\"partNumberManufacturer\\\" ;\\n   bamm:preferredName \\\"Part number (manufacturer)\\\"@en ;\\n   bamm:description \\\"Number of part family of manufacture\\\"@en ;\\n   bamm:characteristic :PartNumberCharacteristic .\\n\\n:OneIDBusinessPartner a bamm-c:Code ;\\n   bamm:name \\\"OneIDBusinessPartner\\\" ;\\n   bamm:preferredName \\\"OneID BusinessPartner\\\"@en ;\\n   bamm:dataType xsd:string .\\n\\n:PartNumberCharacteristic a bamm:Characteristic ;\\n   bamm:name \\\"PartNumberCharacteristic\\\" ;\\n   bamm:preferredName \\\"part number\\\"@en ;\\n   bamm:dataType xsd:string .\\n\\n:uniqueData a bamm:Property ;\\n   bamm:name \\\"uniqueData\\\" ;\\n   bamm:preferredName \\\"Unique Data\\\"@en ;\\n   bamm:characteristic :PartUniqueDataCharacteristic .\\n\\n:PartUniqueDataCharacteristic a bamm-c:SingleEntity ;\\n   bamm:name \\\"PartUniqueDataCharacteristic\\\" ;\\n   bamm:dataType :PartUniqueDataEntity .\\n\\n:PartUniqueDataEntity a bamm:Entity ;\\n   bamm:name \\\"PartUniqueDataEntity\\\" ;\\n   bamm:properties ( :customerUniqueID :manufacturerUniqueID :uniqueID ) ;\\n   bamm:preferredName \\\"Unique Data Entity\\\"@en .\\n\\n:customerUniqueID a bamm:Property ;\\n   bamm:name \\\"customerUniqueID\\\" ;\\n   bamm:preferredName \\\"Customer Unique ID\\\"@en ;\\n   bamm:description \\\"SerialNo. Of customer\\\"@en ;\\n   bamm:characteristic :IdCharacteristic ;\\n   bamm:exampleValue \\\"333\\\" .\\n\\n:manufacturerUniqueID a bamm:Property ;\\n   bamm:name \\\"manufacturerUniqueID\\\" ;\\n   bamm:preferredName \\\"Manufacturer Unique ID\\\"@en ;\\n   bamm:description \\\"SerialNo. of manufacturer\\\"@en ;\\n   bamm:characteristic :IdCharacteristic ;\\n   bamm:exampleValue \\\"Xxx\\\" .\\n\\n:uniqueID a bamm:Property ;\\n   bamm:name \\\"uniqueID\\\" ;\\n   bamm:preferredName \\\"unique ID\\\"@en ;\\n   bamm:description \\\"this is a local unique ID to identiy the part\\\"@en ;\\n   bamm:characteristic :IdCharacteristic ;\\n   bamm:exampleValue \\\"1AB\\\" .\\n\\n:IdCharacteristic a bamm:Characteristic ;\\n   bamm:name \\\"IdCharacteristic\\\" ;\\n   bamm:dataType xsd:string .\\n\"    \n}"
										},
										"url": {
											"raw": "{{semanticServicesUrl}}/models",
											"host": [
												"{{semanticServicesUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"response": [
										{
											"name": "The resulting model entry.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
										},
										{
											"name": "Created",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "deleteModel",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{semanticServicesUrl}}/models/:model-id",
											"host": [
												"{{semanticServicesUrl}}"
											],
											"path": [
												"models",
												":model-id"
											],
											"variable": [
												{
													"key": "model-id",
													"value": "urn:bamm:net.catenax.semantics:1.0.0%23DigitalTwin",
													"description": "(Required) model-id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The resource was deleted successfully.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "getModelTree",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{semanticServicesUrl}}/models/:model-id/diagram",
											"host": [
												"{{semanticServicesUrl}}"
											],
											"path": [
												"models",
												":model-id",
												"diagram"
											],
											"variable": [
												{
													"key": "model-id",
													"value": "urn:bamm:net.catenax.semantics:1.0.0%23DigitalTwin",
													"description": "(Required) model-id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"diagram"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "image/png"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"diagram"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"diagram"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"diagram"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"diagram"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"diagram"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "getModelDocu",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{semanticServicesUrl}}/models/:model-id/documentation",
											"host": [
												"{{semanticServicesUrl}}"
											],
											"path": [
												"models",
												":model-id",
												"documentation"
											],
											"variable": [
												{
													"key": "model-id",
													"value": "Excepteur et",
													"description": "(Required) model-id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/documentation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"documentation"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/documentation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"documentation"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/documentation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"documentation"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/documentation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"documentation"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/documentation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"documentation"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/documentation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"documentation"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "getModelFile",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{semanticServicesUrl}}/models/:model-id/file",
											"host": [
												"{{semanticServicesUrl}}"
											],
											"path": [
												"models",
												":model-id",
												"file"
											],
											"variable": [
												{
													"key": "model-id",
													"value": "urn:bamm:com.catenaX:0.0.1%23Material",
													"description": "(Required) model-id"
												}
											]
										}
									},
									"response": [
										{
											"name": "The raw RDF based model definition.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "getModelSchema",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{semanticServicesUrl}}/models/:model-id/json-schema",
											"host": [
												"{{semanticServicesUrl}}"
											],
											"path": [
												"models",
												":model-id",
												"json-schema"
											],
											"variable": [
												{
													"key": "model-id",
													"value": "urn:bamm:com.catenaX:0.0.1%23Traceability",
													"description": "(Required) model-id"
												}
											]
										}
									},
									"response": [
										{
											"name": "The raw RDF based model definition.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "getModelList",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{semanticServicesUrl}}/models",
									"host": [
										"{{semanticServicesUrl}}"
									],
									"path": [
										"models"
									],
									"query": [
										{
											"key": "isPrivate",
											"value": "false",
											"description": "isPrivate",
											"disabled": true
										},
										{
											"key": "nameFilter",
											"value": "Movement",
											"description": "nameFilter",
											"disabled": true
										},
										{
											"key": "namespaceFilter",
											"value": "1.0.0",
											"description": "namespaceFilter",
											"disabled": true
										},
										{
											"key": "page",
											"value": "0",
											"description": "(Required) page",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "10",
											"description": "(Required) pageSize",
											"disabled": true
										},
										{
											"key": "type",
											"value": "BAMM",
											"description": "type",
											"disabled": true
										},
										{
											"key": "status",
											"value": "RELEASED",
											"disabled": true
										},
										{
											"key": "nameType",
											"value": "_DESCRIPTION_",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "A list of models, matching the provided filter options.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/models?isPrivate=false&nameFilter=Excepteur et&namespaceFilter=Excepteur et&page=0&pageSize=10&type=BAMM",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											],
											"query": [
												{
													"key": "isPrivate",
													"value": "false"
												},
												{
													"key": "nameFilter",
													"value": "Excepteur et"
												},
												{
													"key": "namespaceFilter",
													"value": "Excepteur et"
												},
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "pageSize",
													"value": "10"
												},
												{
													"key": "type",
													"value": "BAMM"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"elit\",\n  \"name\": \"sunt aliqui\",\n  \"private\": false,\n  \"publisher\": \"sunt elit minim\",\n  \"type\": \"BAMM\",\n  \"version\": \"culpa elit mollit\"\n },\n {\n  \"id\": \"culpa\",\n  \"name\": \"officia laborum dolor nostrud Lorem\",\n  \"private\": false,\n  \"publisher\": \"et magna velit\",\n  \"type\": \"BAMM\",\n  \"version\": \"enim quis ad sit aliquip\"\n }\n]"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/models?isPrivate=false&nameFilter=Excepteur et&namespaceFilter=Excepteur et&page=0&pageSize=10&type=BAMM",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											],
											"query": [
												{
													"key": "isPrivate",
													"value": "false"
												},
												{
													"key": "nameFilter",
													"value": "Excepteur et"
												},
												{
													"key": "namespaceFilter",
													"value": "Excepteur et"
												},
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "pageSize",
													"value": "10"
												},
												{
													"key": "type",
													"value": "BAMM"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/models?isPrivate=false&nameFilter=Excepteur et&namespaceFilter=Excepteur et&page=0&pageSize=10&type=BAMM",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											],
											"query": [
												{
													"key": "isPrivate",
													"value": "false"
												},
												{
													"key": "nameFilter",
													"value": "Excepteur et"
												},
												{
													"key": "namespaceFilter",
													"value": "Excepteur et"
												},
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "pageSize",
													"value": "10"
												},
												{
													"key": "type",
													"value": "BAMM"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/models?isPrivate=false&nameFilter=Excepteur et&namespaceFilter=Excepteur et&page=0&pageSize=10&type=BAMM",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											],
											"query": [
												{
													"key": "isPrivate",
													"value": "false"
												},
												{
													"key": "nameFilter",
													"value": "Excepteur et"
												},
												{
													"key": "namespaceFilter",
													"value": "Excepteur et"
												},
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "pageSize",
													"value": "10"
												},
												{
													"key": "type",
													"value": "BAMM"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/models?isPrivate=false&nameFilter=Excepteur et&namespaceFilter=Excepteur et&page=0&pageSize=10&type=BAMM",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											],
											"query": [
												{
													"key": "isPrivate",
													"value": "false"
												},
												{
													"key": "nameFilter",
													"value": "Excepteur et"
												},
												{
													"key": "namespaceFilter",
													"value": "Excepteur et"
												},
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "pageSize",
													"value": "10"
												},
												{
													"key": "type",
													"value": "BAMM"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/models?isPrivate=false&nameFilter=Excepteur et&namespaceFilter=Excepteur et&page=0&pageSize=10&type=BAMM",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											],
											"query": [
												{
													"key": "isPrivate",
													"value": "false"
												},
												{
													"key": "nameFilter",
													"value": "Excepteur et"
												},
												{
													"key": "namespaceFilter",
													"value": "Excepteur et"
												},
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "pageSize",
													"value": "10"
												},
												{
													"key": "type",
													"value": "BAMM"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "createProductDescription",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#> .\\n@prefix unit: <urn:bamm:io.openmanufacturing:unit:1.0.0#> .\\n@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#> .\\n@prefix bamm-e: <urn:bamm:io.openmanufacturing:entity:1.0.0#> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.\\n@prefix : <urn:bamm:com.catenaX:0.0.1#>.\\n\\n:ProductDescription a bamm:Aspect;\\n    bamm:name \\\"ProductDescription\\\";\\n    bamm:properties (:productID :productName :productDescription :productionDateGMT \\n    [\\n        bamm:property :buildPosition;\\n        bamm:optional \\\"true\\\"^^xsd:boolean\\n    ]\\n    [\\n        bamm:property :liquidBearing;\\n        bamm:optional \\\"true\\\"^^xsd:boolean\\n    ]\\n    [\\n        bamm:property :productWeight;\\n        bamm:optional \\\"true\\\"^^xsd:boolean\\n    ]\\n    [\\n        bamm:property :performanceIndicator;\\n        bamm:optional \\\"true\\\"^^xsd:boolean\\n    ]\\n    [\\n        bamm:property :productDimension;\\n        bamm:optional \\\"true\\\"^^xsd:boolean\\n    ]\\n    [\\n        bamm:property :productType;\\n        bamm:optional \\\"true\\\"^^xsd:boolean\\n    ] );\\n    bamm:operations ();\\n    bamm:preferredName \\\"Product Description\\\"@en, \\\"Produktbeschreibung\\\"@de.\\n:productName a bamm:Property;\\n    bamm:name \\\"productName\\\";\\n    bamm:description \\\"name of the product\\\"@en;\\n    bamm:characteristic bamm-c:Text .\\n:productDescription a bamm:Property;\\n    bamm:name \\\"productDescription\\\";\\n    bamm:description \\\"description of the product\\\"@en;\\n    bamm:characteristic bamm-c:Text .\\n:productID a bamm:Property;\\n    bamm:name \\\"productID\\\";\\n    bamm:description \\\"identification of the product\\\"@en;\\n    bamm:characteristic bamm-c:Text .\\n:buildPosition a bamm:Property;\\n    bamm:name \\\"buildPosition\\\";\\n    bamm:description \\\"building position of the product\\\"@en;\\n    bamm:characteristic bamm-c:Text .\\n:liquidBearing a bamm:Property;\\n    bamm:name \\\"liquidBearing\\\";\\n    bamm:description \\\"indicator whether a liquid bearing is present\\\"@en;\\n    bamm:characteristic bamm-c:Boolean .\\n\\n:performanceIndicator a bamm:Property;\\n    bamm:name \\\"performanceIndicator\\\";\\n    bamm:description \\\"The performance indicator\\\"@en;\\n    bamm:characteristic :PerformanceIndicatorCharacteristic .\\n:PerformanceIndicatorCharacteristic a bamm-c:SingleEntity;\\n    bamm:name \\\"performanceIndicatorCharacteristic\\\";\\n    bamm:dataType :PerformanceIndicatorEntity .\\n:PerformanceIndicatorEntity a bamm:Entity;\\n    bamm:name \\\"performanceIndicatorEntity\\\";\\n    bamm:properties (:electrictiyCapacityMin :electrictiyCapacityMax) .\\n:electrictiyCapacityMin a bamm:Property;\\n    bamm:name \\\"electricCapacityMin\\\";\\n    bamm:description \\\"The minimal electric capacity\\\"@en;\\n    bamm:characteristic :Capacity .\\n:electrictiyCapacityMax a bamm:Property;\\n    bamm:name \\\"electricCapacityMax\\\";\\n    bamm:description \\\"The maximal electric capacity\\\"@en;\\n    bamm:characteristic :Capacity .\\n:Capacity a bamm-c:Measurement;\\n    bamm:name \\\"capacity\\\";\\n    bamm:description \\\"A capacity value\\\"@en;\\n    bamm-c:unit unit:farad;\\n    bamm:dataType xsd:double .\\n\\n:productWeight a bamm:Property;\\n    bamm:name \\\"productWeight\\\";\\n    bamm:description \\\"weight in gramm\\\"@en;\\n    bamm:characteristic :Weight .\\n:Weight a bamm-c:Measurement;\\n    bamm:name \\\"weight\\\";\\n    bamm:description \\\"weight in g\\\"@en;\\n    bamm-c:unit unit:gram;\\n    bamm:dataType xsd:double .\\n\\n:productionDateGMT a bamm:Property;\\n    bamm:name \\\"productionDateGMT\\\";\\n    bamm:description \\\"the production data in GMT time zone\\\"@en;\\n    bamm:exampleValue \\\"2021-09-30\\\"^^xsd:dateTime;\\n    bamm:characteristic bamm-c:Timestamp .\\n\\n:productDimension a bamm:Property;\\n    bamm:name \\\"productDimension\\\";\\n    bamm:description \\\"The performance indicator\\\"@en;\\n    bamm:characteristic :ProductDimension3D .\\n:ProductDimension3D a bamm-c:SingleEntity;\\n    bamm:name \\\"productDimension3D\\\";\\n    bamm:dataType :ProductDimension3DEntity .\\n:ProductDimension3DEntity a bamm:Entity;\\n    bamm:name \\\"productDimension3DEntity\\\";\\n    bamm:properties (:dimensionX :dimensionY :dimensionZ) .\\n:dimensionX a bamm:Property;\\n    bamm:name \\\"dimensionX\\\";\\n    bamm:description \\\"The minimal electric capacity\\\"@en;\\n    bamm:characteristic :Length .\\n:dimensionY a bamm:Property;\\n    bamm:name \\\"dimensionY\\\";\\n    bamm:description \\\"The maximal electric capacity\\\"@en;\\n    bamm:characteristic :Length .\\n:dimensionZ a bamm:Property;\\n    bamm:name \\\"dimensionZ\\\";\\n    bamm:description \\\"The maximal electric capacity\\\"@en;\\n    bamm:characteristic :Length .\\n\\n:Length a bamm-c:Measurement;\\n    bamm:name \\\"length\\\";\\n    bamm:description \\\"A length measurement value\\\"@en;\\n    bamm-c:unit unit:centimetre;\\n    bamm:dataType xsd:double .\\n\\n:productType a bamm:Property;\\n    bamm:name \\\"productType\\\";\\n    bamm:description \\\"product type is described by a list of document types\\\"@en;\\n    bamm:characteristic :SetOfDocumentTypes .\\n:SetOfDocumentTypes a bamm-c:Set;\\n    bamm:name \\\"setOfDocumentTypes\\\";\\n    bamm:description \\\"a set of document types\\\"@en;\\n    bamm-c:elementCharacteristic bamm-c:Text .\\n\",\n    \"private\": false,\n    \"type\": \"BAMM\"\n}"
								},
								"url": {
									"raw": "{{semanticServicesUrl}}/models",
									"host": [
										"{{semanticServicesUrl}}"
									],
									"path": [
										"models"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "The resulting model entry.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "createProductUsage",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.\\n@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#>.\\n@prefix unit: <urn:bamm:io.openmanufacturing:unit:1.0.0#>.\\n@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#>.\\n@prefix bamm-e: <urn:bamm:io.openmanufacturing:entity:1.0.0#>.\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.\\n@prefix : <urn:bamm:com.catenax:0.0.1#>.\\n\\n:ProductUsage a bamm:Aspect;\\n    bamm:name \\\"ProductUsage\\\";\\n    bamm:properties (:lifeSpan :stateOfHealth :stateOfCharge :mileage :numberOfChargingCycles :voltage :residualCurrentHazard :lifeSpanAsPlanned :numberOfChargingCyclesAsPlanned);\\n    bamm:operations ();\\n    bamm:preferredName \\\"Product Usage\\\"@en.\\n:lifeSpan a bamm:Property;\\n    bamm:name \\\"lifeSpan\\\";\\n    bamm:preferredName \\\"lifeSpan\\\"@en;\\n    bamm:characteristic :LifeSpan.\\n:stateOfHealth a bamm:Property;\\n    bamm:name \\\"stateOfHealth\\\";\\n    bamm:preferredName \\\"State of Health\\\"@en;\\n    bamm:characteristic :PercentOfSomething.\\n:stateOfCharge a bamm:Property;\\n    bamm:name \\\"stateOfCharge\\\";\\n    bamm:characteristic :PercentOfSomething.\\n:mileage a bamm:Property;\\n    bamm:name \\\"mileage\\\";\\n    bamm:characteristic :Mileage;\\n    bamm:description \\\"The mileage stated by the vehicle\\\"@en.\\n:numberOfChargingCycles a bamm:Property;\\n    bamm:name \\\"numberOfChargingCycles\\\";\\n    bamm:characteristic :NumberOfCycles;\\n    bamm:exampleValue \\\"10000\\\"^^xsd:long.\\n:voltage a bamm:Property;\\n    bamm:name \\\"voltage\\\";\\n    bamm:characteristic :Voltage.\\n:residualCurrentHazard a bamm:Property;\\n    bamm:name \\\"residualCurrentHazard\\\";\\n    bamm:characteristic :Current;\\n    bamm:description \\\"The residual current still present.\\\"@en;\\n    bamm:exampleValue \\\"40\\\"^^xsd:double.\\n:LifeSpan a bamm-c:Quantifiable;\\n    bamm:name \\\"LifeSpan\\\";\\n    bamm:preferredName \\\"LifeSpan\\\"@en;\\n    bamm:dataType xsd:double;\\n    bamm:description \\\"The Life Span\\\"@en;\\n    bamm-c:unit unit:year.\\n:PercentOfSomething a bamm-c:Quantifiable;\\n    bamm:name \\\"PercentOfSomething\\\";\\n    bamm:dataType xsd:double;\\n    bamm-c:unit unit:percent.\\n:Mileage a bamm-c:Quantifiable;\\n    bamm:name \\\"Mileage\\\";\\n    bamm:dataType xsd:double;\\n    bamm-c:unit unit:kilometre.\\n:NumberOfCycles a bamm:Characteristic;\\n    bamm:name \\\"NumberOfCycles\\\";\\n    bamm:dataType xsd:long.\\n:Voltage a bamm-c:Measurement;\\n    bamm:name \\\"Voltage\\\";\\n    bamm:dataType xsd:double;\\n    bamm-c:unit unit:volt.\\n:Current a bamm-c:Measurement;\\n    bamm:name \\\"Current\\\";\\n    bamm:dataType xsd:double;\\n    bamm-c:unit unit:ampere.\\n:lifeSpanAsPlanned a bamm:Property;\\n    bamm:name \\\"lifeSpanAsPlanned\\\";\\n    bamm:characteristic :LifeSpan;\\n    bamm:description \\\"as planned lifeSpan for one specific vehicle\\\"@en.\\n:numberOfChargingCyclesAsPlanned a bamm:Property;\\n    bamm:name \\\"numberOfChargingCyclesAsPlanned\\\";\\n    bamm:characteristic :NumberOfCycles;\\n    bamm:description \\\"as planned number of charging cycles per planned life span\\\"@en.\\n\",\n    \"private\": false,\n    \"type\": \"BAMM\"\n}"
								},
								"url": {
									"raw": "{{semanticServicesUrl}}/models",
									"host": [
										"{{semanticServicesUrl}}"
									],
									"path": [
										"models"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "The resulting model entry.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "createReturnRequest",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.\\n@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#>.\\n@prefix unit: <urn:bamm:io.openmanufacturing:unit:1.0.0#>.\\n@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#>.\\n@prefix bamm-e: <urn:bamm:io.openmanufacturing:entity:1.0.0#>.\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.\\n@prefix : <urn:bamm:com.bosch.nexeed.digitaltwin:1.0.0#>.\\n\\n:ReturnRequest a bamm:Aspect;\\n    bamm:name \\\"ReturnRequest\\\";\\n    bamm:properties (:return);\\n    bamm:operations ();\\n    bamm:description \\\"Aspect to indicate if there is a return request for a material\\\"@en.\\n:return a bamm:Property;\\n    bamm:name \\\"return\\\";\\n    bamm:characteristic bamm-c:Boolean;\\n    bamm:description \\\"Describes the fact whether a vehicle, assembly or part needs to be returned to requestor.\\\"@en;\\n    bamm:exampleValue \\\"yes\\\"^^xsd:boolean.\\n\",\n    \"private\": false,\n    \"type\": \"BAMM\"\n}"
								},
								"url": {
									"raw": "{{semanticServicesUrl}}/models",
									"host": [
										"{{semanticServicesUrl}}"
									],
									"path": [
										"models"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "The resulting model entry.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "createTraceability",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#> .\\n@prefix unit: <urn:bamm:io.openmanufacturing:unit:1.0.0#> .\\n@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#> .\\n@prefix bamm-e: <urn:bamm:io.openmanufacturing:entity:1.0.0#> .\\n@prefix : <urn:bamm:com.catenaX:0.0.1#> .\\n\\n:Traceability a bamm:Aspect ;\\n   bamm:name \\\"Traceability\\\" ;\\n   bamm:preferredName \\\"Traceability\\\"@en ;\\n   bamm:description \\\"Traceability\\\"@en ;\\n   bamm:properties ( :staticData :uniqueData :individualData :supplierTree :partTree :qualityAlertData ) ;\\n   bamm:operations () .\\n\\n:individualData a bamm:Property ;\\n   bamm:name \\\"individualData\\\" ;\\n   bamm:preferredName \\\"Individual Data\\\"@en ;\\n   bamm:characteristic :PartIndividualDataCharacteristic .\\n\\n:PartIndividualDataCharacteristic a bamm-c:SingleEntity ;\\n   bamm:name \\\"PartIndividualDataCharacteristic\\\" ;\\n   bamm:dataType :PartIndividualDataEntity .\\n\\n:PartIndividualDataEntity a bamm:Entity ;\\n   bamm:name \\\"PartIndividualDataEntity\\\" ;\\n   bamm:preferredName \\\"Individual Data\\\"@en ;\\n   bamm:properties ( :productionCountryCode :productionDateGMT ) .\\n\\n:productionCountryCode a bamm:Property ;\\n   bamm:name \\\"productionCountryCode\\\" ;\\n   bamm:preferredName \\\"Country code of production\\\"@en ;\\n   bamm:description \\\"Country code of production\\\"@en ;\\n   bamm:characteristic :CountryCodeCharacteristic ;\\n   bamm:exampleValue \\\"HUR\\\" .\\n\\n:CountryCodeCharacteristic a bamm-c:Code ;\\n   bamm:name \\\"CountryCodeCharacteristic\\\" ;\\n   bamm:dataType xsd:string .\\n\\n:productionDateGMT a bamm:Property ;\\n   bamm:name \\\"productionDateGMT\\\" ;\\n   bamm:preferredName \\\"Production Date (GMT)\\\"@en ;\\n   bamm:description \\\"Production date without timestamp\\\"@en ;\\n   bamm:characteristic :DateWithoutTimestamp ;\\n   bamm:exampleValue \\\"2021-05-30\\\"^^xsd:date .\\n\\n:DateWithoutTimestamp a bamm:Characteristic ;\\n   bamm:name \\\"DateWithoutTimestamp\\\" ;\\n   bamm:preferredName \\\"Date (without timestamp)\\\"@en ;\\n   bamm:description \\\"Date without timestamp conformant to ISO 8601\\\"@en ;\\n   bamm:dataType xsd:date .\\n\\n:partTree a bamm:Property ;\\n   bamm:name \\\"partTree\\\" ;\\n   bamm:preferredName \\\"Part Tree Parent\\\"@en ;\\n   bamm:characteristic :PartTreeParentCharacteristic .\\n   \\n:supplierTree a bamm:Property ;\\n   bamm:name \\\"supplierTree\\\" ;\\n   bamm:preferredName \\\"Supplier Tree\\\"@en ;\\n   bamm:characteristic :PartTreeParentCharacteristic .\\n   \\n:PartTreeParentCharacteristic a bamm:Characteristic ;\\n   bamm:name \\\"PartTreeParentCharacteristic\\\" ;\\n   bamm:dataType :PartTreeParentEntity .\\n\\n:PartTreeParentEntity a bamm:Entity ;\\n   bamm:name \\\"PartTreeParentEntity\\\" ;\\n   bamm:properties ( :isParentOf ) .\\n\\n:isParentOf a bamm:Property ;\\n   bamm:name \\\"isParentOf\\\" ;\\n   bamm:preferredName \\\"is Parent of\\\"@en ;\\n   bamm:description \\\"Set of Parts, identified by ID\\\"@en ;\\n   bamm:characteristic :IsParentOfCharacteristic .\\n\\n:IsParentOfCharacteristic a bamm-c:Set ;\\n   bamm:name \\\"IsParentOfCharacteristic\\\" ;\\n   bamm:dataType :ProductReferenceEntity .\\n\\n:ProductReferenceEntity a bamm:Entity ;\\n   bamm:name \\\"ProductReferenceEntity\\\" ;\\n   bamm:properties ( :src :value ) ;\\n   bamm:preferredName \\\"Product Reference\\\"@en .\\n\\n:src a bamm:Property ;\\n   bamm:name \\\"src\\\" ;\\n   bamm:preferredName \\\"Product Reference Source\\\"@en ;\\n   bamm:characteristic :StringCharacteristic .\\n\\n:value a bamm:Property ;\\n   bamm:name \\\"value\\\" ;\\n   bamm:preferredName \\\"Product Reference Value\\\"@en ;\\n   bamm:characteristic :StringCharacteristic .\\n\\n:StringCharacteristic a bamm-c:Code ;\\n   bamm:name \\\"StringCharacteristic\\\" ;\\n   bamm:dataType xsd:string .\\n\\n:qualityAlertData a bamm:Property ;\\n   bamm:name \\\"qualityAlertData\\\" ;\\n   bamm:preferredName \\\"Quality Alert Data\\\"@en ;\\n   bamm:characteristic :QualityAlertDataCharacteristic .\\n\\n:QualityAlertDataCharacteristic a bamm-c:SingleEntity ;\\n   bamm:name \\\"QualityAlertDataCharacteristic\\\" ;\\n   bamm:dataType :QualityAlertDataEntity .\\n\\n:QualityAlertDataEntity a bamm:Entity ;\\n   bamm:name \\\"QualityAlertDataEntity\\\" ;\\n   bamm:properties ( :qualityAlert :qualityType ) ;\\n   bamm:preferredName \\\"Quality Alert Data\\\"@en .\\n\\n:qualityAlert a bamm:Property ;\\n   bamm:name \\\"qualityAlert\\\" ;\\n   bamm:preferredName \\\"Quality Alert\\\"@en ;\\n   bamm:characteristic bamm-c:Boolean ;\\n   bamm:exampleValue \\\"true\\\"^^xsd:boolean .\\n\\n:qualityType a bamm:Property ;\\n   bamm:name \\\"qualityType\\\" ;\\n   bamm:preferredName \\\"Quality Type\\\"@en ;\\n   bamm:characteristic :QualityTypeEnum ;\\n   bamm:exampleValue \\\"major\\\"^^xsd:string .\\n\\n:QualityTypeEnum a bamm-c:Enumeration ;\\n   bamm:name \\\"QualityTypeEnum\\\" ;\\n   bamm:dataType xsd:string ;\\n   bamm-c:values ( \\\"major\\\" \\\"minor\\\" \\\"critical\\\" ) .\\n\\n:staticData a bamm:Property ;\\n   bamm:name \\\"staticData\\\" ;\\n   bamm:preferredName \\\"Static Data\\\"@en ;\\n   bamm:characteristic :PartStaticDataCharacteristic .\\n\\n:PartStaticDataCharacteristic a bamm-c:SingleEntity ;\\n   bamm:name \\\"PartStaticDataCharacteristic\\\" ;\\n   bamm:dataType :PartStaticDataEntity .\\n\\n:PartStaticDataEntity a bamm:Entity ;\\n   bamm:name \\\"PartStaticDataEntity\\\" ;\\n   bamm:properties ( :customerContractOneID :customerOneID :manufacturerContractOneID :manufacturerOneID :partNameCustomer :partNameManufacturer :partNumberCustomer :partNumberManufacturer ) ;\\n   bamm:preferredName \\\"Static Data\\\"@en .\\n\\n:customerContractOneID a bamm:Property ;\\n   bamm:name \\\"customerContractOneID\\\" ;\\n   bamm:preferredName \\\"Customer Contract OneID\\\"@en ;\\n   bamm:description \\\"OneID of customer contract partner\\\"@en ;\\n   bamm:characteristic :OneIDBusinessPartner .\\n\\n:customerOneID a bamm:Property ;\\n   bamm:name \\\"customerOneID\\\" ;\\n   bamm:preferredName \\\"Customer OneID\\\"@en ;\\n   bamm:description \\\"OneID of customer plant\\\"@en ;\\n   bamm:characteristic :OneIDBusinessPartner ;\\n   bamm:exampleValue \\\"CUSTOMER_ID\\\" .\\n\\n:manufacturerContractOneID a bamm:Property ;\\n   bamm:name \\\"manufacturerContractOneID\\\" ;\\n   bamm:preferredName \\\"Manufacturer Contract OneID\\\"@en ;\\n   bamm:description \\\"OneID of manufacturer contract partner\\\"@en ;\\n   bamm:characteristic :OneIDBusinessPartner .\\n\\n:manufacturerOneID a bamm:Property ;\\n   bamm:name \\\"manufacturerOneID\\\" ;\\n   bamm:preferredName \\\"Manufacturer OneID\\\"@en ;\\n   bamm:description \\\"OneID of manufacturer partner\\\"@en ;\\n   bamm:characteristic :OneIDBusinessPartner ;\\n   bamm:exampleValue \\\"ERROR_CP\\\" .\\n\\n:partNameCustomer a bamm:Property ;\\n   bamm:name \\\"partNameCustomer\\\" ;\\n   bamm:preferredName \\\"Name of the product (customer)\\\"@en ;\\n   bamm:description \\\"Name of the part family of customer\\\"@en ;\\n   bamm:characteristic bamm-c:Text ;\\n   bamm:exampleValue \\\"MIRROR_1\\\" .\\n\\n:partNameManufacturer a bamm:Property ;\\n   bamm:name \\\"partNameManufacturer\\\" ;\\n   bamm:preferredName \\\"Name of the product (manufacturer)\\\"@en ;\\n   bamm:description \\\"Name of the part family of manufacture\\\"@en ;\\n   bamm:characteristic bamm-c:Text ;\\n   bamm:exampleValue \\\"KLEBER1\\\" .\\n\\n:partNumberCustomer a bamm:Property ;\\n   bamm:name \\\"partNumberCustomer\\\" ;\\n   bamm:preferredName \\\"Part number (customer)\\\"@en ;\\n   bamm:description \\\"Type/Part No. of customer product\\\"@en ;\\n   bamm:characteristic :PartNumberCharacteristic ;\\n   bamm:exampleValue \\\"1122334455\\\" .\\n\\n:partNumberManufacturer a bamm:Property ;\\n   bamm:name \\\"partNumberManufacturer\\\" ;\\n   bamm:preferredName \\\"Part number (manufacturer)\\\"@en ;\\n   bamm:description \\\"Number of part family of manufacture\\\"@en ;\\n   bamm:characteristic :PartNumberCharacteristic .\\n\\n:OneIDBusinessPartner a bamm-c:Code ;\\n   bamm:name \\\"OneIDBusinessPartner\\\" ;\\n   bamm:preferredName \\\"OneID BusinessPartner\\\"@en ;\\n   bamm:dataType xsd:string .\\n\\n:PartNumberCharacteristic a bamm:Characteristic ;\\n   bamm:name \\\"PartNumberCharacteristic\\\" ;\\n   bamm:preferredName \\\"part number\\\"@en ;\\n   bamm:dataType xsd:string .\\n\\n:uniqueData a bamm:Property ;\\n   bamm:name \\\"uniqueData\\\" ;\\n   bamm:preferredName \\\"Unique Data\\\"@en ;\\n   bamm:characteristic :PartUniqueDataCharacteristic .\\n\\n:PartUniqueDataCharacteristic a bamm-c:SingleEntity ;\\n   bamm:name \\\"PartUniqueDataCharacteristic\\\" ;\\n   bamm:dataType :PartUniqueDataEntity .\\n\\n:PartUniqueDataEntity a bamm:Entity ;\\n   bamm:name \\\"PartUniqueDataEntity\\\" ;\\n   bamm:properties ( :customerUniqueID :manufacturerUniqueID :uniqueID ) ;\\n   bamm:preferredName \\\"Unique Data Entity\\\"@en .\\n\\n:customerUniqueID a bamm:Property ;\\n   bamm:name \\\"customerUniqueID\\\" ;\\n   bamm:preferredName \\\"Customer Unique ID\\\"@en ;\\n   bamm:description \\\"SerialNo. Of customer\\\"@en ;\\n   bamm:characteristic :IdCharacteristic ;\\n   bamm:exampleValue \\\"333\\\" .\\n\\n:manufacturerUniqueID a bamm:Property ;\\n   bamm:name \\\"manufacturerUniqueID\\\" ;\\n   bamm:preferredName \\\"Manufacturer Unique ID\\\"@en ;\\n   bamm:description \\\"SerialNo. of manufacturer\\\"@en ;\\n   bamm:characteristic :IdCharacteristic ;\\n   bamm:exampleValue \\\"Xxx\\\" .\\n\\n:uniqueID a bamm:Property ;\\n   bamm:name \\\"uniqueID\\\" ;\\n   bamm:preferredName \\\"unique ID\\\"@en ;\\n   bamm:description \\\"this is a local unique ID to identiy the part\\\"@en ;\\n   bamm:characteristic :IdCharacteristic ;\\n   bamm:exampleValue \\\"1AB\\\" .\\n\\n:IdCharacteristic a bamm:Characteristic ;\\n   bamm:name \\\"IdCharacteristic\\\" ;\\n   bamm:dataType xsd:string .\\n\",\n    \"private\": false,\n    \"type\": \"BAMM\"\n}"
								},
								"url": {
									"raw": "{{semanticServicesUrl}}/models",
									"host": [
										"{{semanticServicesUrl}}"
									],
									"path": [
										"models"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "The resulting model entry.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "createGDPM",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#> .\\n@prefix unit: <urn:bamm:io.openmanufacturing:unit:1.0.0#> .\\n@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#> .\\n@prefix bamm-e: <urn:bamm:io.openmanufacturing:entity:1.0.0#> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.\\n@prefix : <urn:bamm:com.catenaX:0.0.1#>.\\n\\n:OneIDBusinessPartner a bamm-c:Code;\\n    bamm:name \\\"OneIDBusinessPartner\\\";\\n    bamm:preferredName \\\"OneID BusinessPartner\\\"@en;\\n    bamm:dataType xsd:string.\\n:GPDMAspectPoC a bamm:Aspect;\\n    bamm:name \\\"GPDMAspectPoC\\\";\\n    bamm:preferredName \\\"GPDM Aspect\\\"@en;\\n    bamm:properties ([\\n  bamm:property :businessPartnerData;\\n  bamm:optional \\\"true\\\"^^xsd:boolean\\n] :contactData);\\n    bamm:operations ().\\n:businessPartnerData a bamm:Property;\\n    bamm:name \\\"businessPartnerData\\\";\\n    bamm:preferredName \\\"Business Partner Data\\\"@en;\\n    bamm:characteristic :BusinessPartnerDataCharacteristic.\\n:BusinessPartnerDataEntity a bamm:Entity;\\n    bamm:name \\\"BusinessPartnerDataEntity\\\";\\n    bamm:properties ([\\n  bamm:property :oneId;\\n  bamm:optional \\\"true\\\"^^xsd:boolean\\n] :businessPartnerType :businessPartnerNames).\\n:BusinessPartnerDataCharacteristic a bamm-c:SingleEntity;\\n    bamm:name \\\"BusinessPartnerDataCharacteristic\\\";\\n    bamm:dataType :BusinessPartnerDataEntity.\\n:oneId a bamm:Property;\\n    bamm:name \\\"oneId\\\";\\n    bamm:preferredName \\\"oneID\\\"@en;\\n    bamm:characteristic :OneIDBusinessPartner.\\n:businessPartnerType a bamm:Property;\\n    bamm:name \\\"businessPartnerType\\\";\\n    bamm:preferredName \\\"businessPartnerType\\\"@en;\\n    bamm:characteristic :BusinessPartnerTypeCharacteristic.\\n:BusinessPartnerTypeCharacteristic a bamm:Characteristic;\\n    bamm:name \\\"BusinessPartnerTypeCharacteristic\\\";\\n    bamm:dataType xsd:string.\\n:SetOfBusinessPartnerName a bamm-c:Set;\\n    bamm:name \\\"SetOfBusinessPartnerName\\\";\\n    bamm:preferredName \\\"Business Partner Names\\\"@en;\\n    bamm:dataType :BusinessPartnerName.\\n:BusinessPartnerName a bamm:Entity;\\n    bamm:name \\\"BusinessPartnerName\\\";\\n    bamm:preferredName \\\"Business Partner Name\\\"@en;\\n    bamm:properties (:name :type :legalForm).\\n:name a bamm:Property;\\n    bamm:name \\\"name\\\";\\n    bamm:preferredName \\\"Name\\\"@en;\\n    bamm:characteristic bamm-c:Text.\\n:type a bamm:Property;\\n    bamm:name \\\"type\\\";\\n    bamm:preferredName \\\"Type\\\"@en;\\n    bamm:characteristic :BusinessPartnerNameTypeEnum;\\n    bamm:exampleValue \\\"registered_name\\\".\\n:BusinessPartnerNameTypeEnum a bamm-c:Enumeration;\\n    bamm:name \\\"BusinessPartnerNameTypeEnum\\\";\\n    bamm:preferredName \\\"BusinessPartnerNameTypeEnum\\\"@en;\\n    bamm:dataType xsd:string;\\n    bamm-c:values (\\\"registered_name\\\" \\\"local_name\\\" \\\"international_name\\\" \\\"transliterated_name\\\" \\\"DBA_name\\\" \\\"VAT_registered_name\\\").\\n:legalForm a bamm:Property;\\n    bamm:name \\\"legalForm\\\";\\n    bamm:preferredName \\\"Legal Form\\\"@en;\\n    bamm:characteristic bamm-c:Text.\\n:businessPartnerNames a bamm:Property;\\n    bamm:name \\\"businessPartnerNames\\\";\\n    bamm:preferredName \\\"businessPartnerNames\\\"@en;\\n    bamm:characteristic :SetOfBusinessPartnerName.\\n:contactData a bamm:Property;\\n    bamm:name \\\"contactData\\\";\\n    bamm:preferredName \\\"contactData\\\"@en;\\n    bamm:characteristic :ContactDataCharacteristic.\\n:ContactDataCharacteristic a bamm-c:SingleEntity;\\n    bamm:name \\\"ContactDataCharacteristic\\\";\\n    bamm:dataType :ContactDataEntity.\\n:ContactDataEntity a bamm:Entity;\\n    bamm:name \\\"ContactDataEntity\\\";\\n    bamm:preferredName \\\"ContactDataEntity\\\"@en;\\n    bamm:properties ([\\n  bamm:property :eMailAddress;\\n  bamm:optional \\\"true\\\"^^xsd:boolean\\n] [\\n  bamm:property :url;\\n  bamm:optional \\\"true\\\"^^xsd:boolean\\n]).\\n:eMailAddress a bamm:Property;\\n    bamm:name \\\"eMailAddress\\\";\\n    bamm:preferredName \\\"eMailAddress\\\"@en;\\n    bamm:characteristic :EMailAddressTrait.\\n:url a bamm:Property;\\n    bamm:name \\\"url\\\";\\n    bamm:preferredName \\\"URL\\\"@en;\\n    bamm:characteristic bamm-c:ResourcePath.\\n:EMailCharacteristic a bamm:Characteristic;\\n    bamm:name \\\"EMailCharacteristic\\\";\\n    bamm:preferredName \\\"EMailCharacteristic\\\"@en;\\n    bamm:dataType xsd:string.\\n:EMailAddressTrait a bamm-c:Trait;\\n    bamm:name \\\"EMailAddressTrait\\\";\\n    bamm-c:baseCharacteristic :EMailCharacteristic;\\n    bamm-c:constraint :RegularExpressionForEMail.\\n:RegularExpressionForEMail a bamm-c:RegularExpressionConstraint;\\n    bamm:name \\\"RegularExpressionForEMail\\\";\\n    bamm:preferredName \\\"RegularExpressionForEMail\\\"@en;\\n    bamm:value \\\"tbd\\\".\\n\\n\",\n    \"private\": false,\n    \"type\": \"BAMM\"\n}"
								},
								"url": {
									"raw": "{{semanticServicesUrl}}/models",
									"host": [
										"{{semanticServicesUrl}}"
									],
									"path": [
										"models"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "The resulting model entry.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "createDigitalTwin",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"#\\n# Copyright (c) 2021 T-Systems International GmbH (Catena-X Consortium)\\n#\\n# See the AUTHORS file(s) distributed with this work for additional\\n# information regarding authorship.\\n#\\n# See the LICENSE file(s) distributed with this work for\\n# additional information regarding license terms.\\n#\\n\\n@prefix : <urn:bamm:net.catenax.semantics:1.0.0#> .\\n@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#> .\\n@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n\\n:DigitalTwin a bamm:Aspect ;\\n   bamm:name \\\"DigitalTwin\\\" ;\\n   bamm:preferredName \\\"(Digital) Twin\\\"@en ;\\n   bamm:description \\\"The Digital Twin is a virtual representation of assets. The DT has at least one Catena-X-wide unique ID. Digital Twins are organized by a set of Aspects which include both structural as well as behavioral data and models (including operations and simulation models).\\\"@en ;\\n   bamm:properties ( :manufacturer :localIdentifiers :modelReference :httpEndpoints) ;\\n   bamm:operations ( ) .\\n\\n:manufacturer a bamm:Property ;\\n   bamm:name \\\"manufacturer\\\" ;\\n   bamm:preferredName \\\"(Digital) Twin Manufacturer\\\"@en ;\\n   bamm:description \\\"The manufacturer (registrar) of a digital twin.\\\"@en ;\\n   bamm:characteristic bamm-c:Text .\\n\\n:localIdentifiers a bamm:Property ;\\n   bamm:name \\\"localIdentifiers\\\" ;\\n   bamm:preferredName \\\"(Digital) Twin Local Identifiers\\\"@en ;\\n   bamm:description \\\"A set of individual business-local identifiers which (as a union) identify the Digital Twin.\\\"@en ;\\n   bamm:characteristic :LocalIdentifierList .\\n\\n:LocalIdentifierList a bamm-c:List ;\\n   bamm:name \\\"LocalIdentifierList\\\" ;\\n   bamm:preferredName \\\"Local Identifiers List\\\"@en ;\\n   bamm:description \\\"A list of business-local identifiers.\\\"@en ;\\n   bamm:dataType :LocalIdentifier .\\n\\n:LocalIdentifier a bamm:Entity ;\\n   bamm:name \\\"LocalIdentifier\\\" ;\\n   bamm:preferredName \\\"Local Identifier\\\"@en ;\\n   bamm:description \\\"A business-local identifier has a namespace (key) and a local name (value) component.\\\"@en ;\\n   bamm:properties ( :key :value) .\\n\\n:key a bamm:Property ;\\n   bamm:name \\\"key\\\" ;\\n   bamm:preferredName \\\"Identifier Key\\\"@en ;\\n   bamm:description \\\"The key (domain, namespace) component of an identifier.\\\"@en ;\\n   bamm:characteristic bamm-c:Text .\\n\\n:value a bamm:Property ;\\n   bamm:name \\\"value\\\" ;\\n   bamm:preferredName \\\"Identifier Value\\\"@en ;\\n   bamm:description \\\"The value (name) component of an identifier.\\\"@en ;\\n   bamm:characteristic bamm-c:Text .\\n\\n:aspects a bamm:Property ;\\n   bamm:name \\\"aspects\\\" ;\\n   bamm:preferredName \\\"(Digital) Twin Aspects\\\"@en ;\\n   bamm:description \\\"A set of Aspects which represent concrete interfaces to the assets of a Digital Twin.\\\"@en ;\\n   bamm:characteristic :AspectList .\\n\\n:AspectList a bamm-c:List ;\\n   bamm:name \\\"AspectList\\\" ;\\n   bamm:preferredName \\\"Aspect List\\\"@en ;\\n   bamm:description \\\"A list of Aspects.\\\"@en ;\\n   bamm:dataType :Aspect .\\n\\n:Aspect a bamm:Entity ;\\n   bamm:name \\\"Aspect\\\" ;\\n   bamm:preferredName \\\"Aspect\\\"@en ;\\n   bamm:description \\\"An Aspect includes both structural as well as behavioral data and models (including operations and simulation models).\\\"@en ;\\n   bamm:properties ( :modelReference :httpEndpoints ) .\\n\\n:modelReference a bamm:Property ;\\n   bamm:name \\\"modelReference\\\" ;\\n   bamm:preferredName \\\"Aspect Model Reference\\\"@en ;\\n   bamm:description \\\"The reference to the semantic model describing the structural and behavioural asset.\\\"@en ;\\n   bamm:characteristic :ModelReferenceSingle .\\n\\n:ModelReferenceSingle a bamm-c:SingleEntity ;\\n   bamm:name \\\"ModelReferenceSingle\\\" ;\\n   bamm:preferredName \\\"Model Reference\\\"@en ;\\n   bamm:description \\\"A single Model Reference.\\\"@en ;\\n   bamm:dataType :ModelReference .\\n\\n:ModelReference a bamm:Entity ;\\n   bamm:name \\\"Model Reference\\\" ;\\n   bamm:preferredName \\\"Model Reference\\\"@en ;\\n   bamm:description \\\"An Model Reference describes a semantic model.\\\"@en ;\\n   bamm:properties ( :urn ) .\\n\\n:urn a bamm:Property ;\\n   bamm:name \\\"urn\\\" ;\\n   bamm:preferredName \\\"Model Reference URN\\\"@en ;\\n   bamm:description \\\"Unique resource name following [rfc2141] belonging to a [Model] registered in the [SemanticHub].\\\"@en ;\\n   bamm:characteristic bamm-c:ResourcePath .\\n\\n:httpEndpoints a bamm:Property ;\\n   bamm:name \\\"httpEndpoints\\\" ;\\n   bamm:preferredName \\\"Aspect Endpoints (HTTTP)\\\"@en ;\\n   bamm:description \\\"Protocol-specific set of endpoints providing aspect interfaces.\\\"@en;\\n   bamm:characteristic :EndpointList .\\n\\n:EndpointList a bamm-c:List ;\\n   bamm:name \\\"EndpointList\\\" ;\\n   bamm:preferredName \\\"Endpoint List\\\"@en ;\\n   bamm:description \\\"A list of Endpoints.\\\"@en ;\\n   bamm:dataType :Endpoint .\\n\\n:Endpoint a bamm:Entity ;\\n   bamm:name \\\"Endpoint\\\" ;\\n   bamm:preferredName \\\"Endpoint\\\"@en ;\\n   bamm:description \\\"An endpoint describes how to connect to a particular asset in the given protocol.\\\"@en ;\\n   bamm:properties ( :method :url ) .\\n\\n:method a bamm:Property ;\\n   bamm:name \\\"method\\\" ;\\n   bamm:preferredName \\\"Endpoint Method\\\"@en ;\\n   bamm:description \\\"A connection method according to the protocol.\\\"@en ;\\n   bamm:characteristic bamm-c:Text .\\n\\n:url a bamm:Property ;\\n   bamm:name \\\"url\\\" ;\\n   bamm:preferredName \\\"Endpoint URL\\\"@en ;\\n   bamm:description \\\"Unique resource location following [rfc2141] and compatible with the given protocol.\\\"@en ;\\n   bamm:characteristic bamm-c:ResourcePath .\\n\\n\",\n    \"private\": false,\n    \"type\": \"BAMM\"\n}"
								},
								"url": {
									"raw": "{{semanticServicesUrl}}/models",
									"host": [
										"{{semanticServicesUrl}}"
									],
									"path": [
										"models"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "The resulting model entry.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "createMaterial",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.\\n@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#>.\\n@prefix unit: <urn:bamm:io.openmanufacturing:unit:1.0.0#>.\\n@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#>.\\n@prefix bamm-e: <urn:bamm:io.openmanufacturing:entity:1.0.0#>.\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.\\n@prefix : <urn:bamm:com.catenaX:0.0.1#>.\\n\\n:Material a bamm:Aspect;\\n    bamm:name \\\"Material\\\";\\n    bamm:operations ();\\n    bamm:properties (:materialDetails).\\n:materialDetails a bamm:Property;\\n    bamm:name \\\"materialDetails\\\";\\n    bamm:characteristic :MaterialCharacteristic.\\n:MaterialCharacteristic a bamm:Characteristic;\\n    bamm:name \\\"MaterialCharacteristic\\\";\\n    bamm:dataType :MaterialEntity.\\n:MaterialEntity a bamm:Entity;\\n    bamm:name \\\"MaterialEntity\\\";\\n    bamm:properties (:materialName :materialType :aggregateState [\\n  bamm:property :chemicalComposition;\\n  bamm:optional \\\"true\\\"^^xsd:boolean\\n] :weight [\\n  bamm:property :chemicalCompositionFraction;\\n  bamm:optional \\\"true\\\"^^xsd:boolean\\n]).\\n:materialName a bamm:Property;\\n    bamm:name \\\"materialName\\\";\\n    bamm:characteristic :MaterialNamesEnumeration;\\n    bamm:description \\\"The name of a material\\\"@en;\\n    bamm:exampleValue \\\"aluminium\\\".\\n:materialType a bamm:Property;\\n    bamm:name \\\"materialType\\\";\\n    bamm:characteristic :MaterialTypesEnumeration;\\n    bamm:description \\\"The type of a material\\\"@en;\\n    bamm:exampleValue \\\"metal\\\".\\n:aggregateState a bamm:Property;\\n    bamm:name \\\"aggregateState\\\";\\n    bamm:characteristic :AggregateStatesEnumeration;\\n    bamm:description \\\"The aggregate state of a material at ambient conditions\\\"@en;\\n    bamm:exampleValue \\\"solid\\\".\\n:chemicalComposition a bamm:Property;\\n    bamm:name \\\"chemicalComposition\\\";\\n    bamm:characteristic :materialCollection.\\n:materialCollection a bamm-c:Collection;\\n    bamm:name \\\"materialCollection\\\";\\n    bamm-c:elementCharacteristic :MaterialCharacteristic.\\n:MaterialNamesEnumeration a bamm-c:Enumeration;\\n    bamm:name \\\"MaterialNamesEnumeration\\\";\\n    bamm:dataType xsd:string;\\n    bamm:description \\\"An enumeration of possible material names\\\"@en;\\n    bamm-c:values (\\\"aluminium\\\" \\\"polyamide\\\" \\\"composite\\\" \\\"synthetic rubber\\\" \\\"chromed plastic\\\" \\\"others\\\" \\\"Aluminium (Metall)\\\" \\\"Anode Copper\\\" \\\"Carbon Steel (1008)\\\" \\\"Cathode Aluminium\\\" \\\"Composite\\\" \\\"Copper\\\" \\\"Eisen\\\" \\\"Kleber\\\" \\\"Material_1768\\\" \\\"Material_23315\\\" \\\"Material_2812\\\" \\\"Material_2889\\\" \\\"Material_3367\\\" \\\"Material_728088751\\\" \\\"Material_781\\\" \\\"Material_9999\\\" \\\"Paraffinwachse und Kohlenwasserstoffwachse, oxidiert, Lithiumsalze\\\" \\\"Polyamid 6\\\" \\\"Polyethylen\\\").\\n:MaterialTypesEnumeration a bamm-c:Enumeration;\\n    bamm:name \\\"MaterialTypesEnumeration\\\";\\n    bamm:dataType xsd:string;\\n    bamm:description \\\"An enumeration of possible types of a material\\\"@en;\\n    bamm-c:values (\\\"metal\\\" \\\"plastic\\\" \\\"composite\\\" \\\"rubber\\\" \\\"other\\\" \\\"Adhesives, sealants\\\" \\\"Aluminium and aluminium alloys\\\" \\\"Composite\\\" \\\"Copper\\\" \\\"Lubricants\\\" \\\"Plastics\\\" \\\"Steels / cast steels / sintered steel\\\" \\\"Washing water, battery acids\\\" \\\"highly alloyed\\\").\\n:AggregateStatesEnumeration a bamm-c:Enumeration;\\n    bamm:name \\\"AggregateStatesEnumeration\\\";\\n    bamm:dataType xsd:string;\\n    bamm:description \\\"An enumeration of possible aggregate states\\\"@en;\\n    bamm-c:values (\\\"gas\\\" \\\"liquid\\\" \\\"solid\\\").\\n:weight a bamm:Property;\\n    bamm:name \\\"weight\\\";\\n    bamm:characteristic :Weight.\\n:Weight a bamm-c:Quantifiable;\\n    bamm:name \\\"Weight\\\";\\n    bamm:dataType xsd:double;\\n    bamm:description \\\"Weight of the material\\\"@en;\\n    bamm-c:unit unit:kilogram.\\n:chemicalCompositionFraction a bamm:Property;\\n    bamm:name \\\"chemicalCompositionFraction\\\";\\n    bamm:characteristic :Fraction;\\n    bamm:description \\\"Fraction of the material in a chemical composition. Is not set if material is not part of a material composition.\\\"@en;\\n    bamm:exampleValue \\\"0.23\\\"^^xsd:double.\\n:Fraction a bamm:Characteristic;\\n    bamm:name \\\"Fraction\\\";\\n    bamm:dataType xsd:double;\\n    bamm:description \\\"Fraction of something\\\"@en.\\n:Constraint1 a bamm:Constraint;\\n    bamm:name \\\"Constraint1\\\".\\n:Constraint2 a bamm:Constraint;\\n    bamm:name \\\"Constraint2\\\".\\n\",\n    \"private\": false,\n    \"type\": \"BAMM\"\n}"
								},
								"url": {
									"raw": "{{semanticServicesUrl}}/models",
									"host": [
										"{{semanticServicesUrl}}"
									],
									"path": [
										"models"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "The resulting model entry.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "createDocumentation",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.\\n@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#>.\\n@prefix unit: <urn:bamm:io.openmanufacturing:unit:1.0.0#>.\\n@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#>.\\n@prefix bamm-e: <urn:bamm:io.openmanufacturing:entity:1.0.0#>.\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.\\n@prefix : <urn:bamm:com.catenaX:0.0.1#>.\\n\\n:Material a bamm:Aspect;\\n    bamm:name \\\"Material\\\";\\n    bamm:operations ();\\n    bamm:properties (:materialDetails).\\n:materialDetails a bamm:Property;\\n    bamm:name \\\"materialDetails\\\";\\n    bamm:characteristic :MaterialCharacteristic.\\n:MaterialCharacteristic a bamm:Characteristic;\\n    bamm:name \\\"MaterialCharacteristic\\\";\\n    bamm:dataType :MaterialEntity.\\n:MaterialEntity a bamm:Entity;\\n    bamm:name \\\"MaterialEntity\\\";\\n    bamm:properties (:materialName :materialType :aggregateState [\\n  bamm:property :chemicalComposition;\\n  bamm:optional \\\"true\\\"^^xsd:boolean\\n] :weight [\\n  bamm:property :chemicalCompositionFraction;\\n  bamm:optional \\\"true\\\"^^xsd:boolean\\n]).\\n:materialName a bamm:Property;\\n    bamm:name \\\"materialName\\\";\\n    bamm:characteristic :MaterialNamesEnumeration;\\n    bamm:description \\\"The name of a material\\\"@en;\\n    bamm:exampleValue \\\"aluminium\\\".\\n:materialType a bamm:Property;\\n    bamm:name \\\"materialType\\\";\\n    bamm:characteristic :MaterialTypesEnumeration;\\n    bamm:description \\\"The type of a material\\\"@en;\\n    bamm:exampleValue \\\"metal\\\".\\n:aggregateState a bamm:Property;\\n    bamm:name \\\"aggregateState\\\";\\n    bamm:characteristic :AggregateStatesEnumeration;\\n    bamm:description \\\"The aggregate state of a material at ambient conditions\\\"@en;\\n    bamm:exampleValue \\\"solid\\\".\\n:chemicalComposition a bamm:Property;\\n    bamm:name \\\"chemicalComposition\\\";\\n    bamm:characteristic :materialCollection.\\n:materialCollection a bamm-c:Collection;\\n    bamm:name \\\"materialCollection\\\";\\n    bamm-c:elementCharacteristic :MaterialCharacteristic.\\n:MaterialNamesEnumeration a bamm-c:Enumeration;\\n    bamm:name \\\"MaterialNamesEnumeration\\\";\\n    bamm:dataType xsd:string;\\n    bamm:description \\\"An enumeration of possible material names\\\"@en;\\n    bamm-c:values (\\\"aluminium\\\" \\\"polyamide\\\" \\\"composite\\\" \\\"synthetic rubber\\\" \\\"chromed plastic\\\" \\\"others\\\" \\\"Aluminium (Metall)\\\" \\\"Anode Copper\\\" \\\"Carbon Steel (1008)\\\" \\\"Cathode Aluminium\\\" \\\"Composite\\\" \\\"Copper\\\" \\\"Eisen\\\" \\\"Kleber\\\" \\\"Material_1768\\\" \\\"Material_23315\\\" \\\"Material_2812\\\" \\\"Material_2889\\\" \\\"Material_3367\\\" \\\"Material_728088751\\\" \\\"Material_781\\\" \\\"Material_9999\\\" \\\"Paraffinwachse und Kohlenwasserstoffwachse, oxidiert, Lithiumsalze\\\" \\\"Polyamid 6\\\" \\\"Polyethylen\\\").\\n:MaterialTypesEnumeration a bamm-c:Enumeration;\\n    bamm:name \\\"MaterialTypesEnumeration\\\";\\n    bamm:dataType xsd:string;\\n    bamm:description \\\"An enumeration of possible types of a material\\\"@en;\\n    bamm-c:values (\\\"metal\\\" \\\"plastic\\\" \\\"composite\\\" \\\"rubber\\\" \\\"other\\\" \\\"Adhesives, sealants\\\" \\\"Aluminium and aluminium alloys\\\" \\\"Composite\\\" \\\"Copper\\\" \\\"Lubricants\\\" \\\"Plastics\\\" \\\"Steels / cast steels / sintered steel\\\" \\\"Washing water, battery acids\\\" \\\"highly alloyed\\\").\\n:AggregateStatesEnumeration a bamm-c:Enumeration;\\n    bamm:name \\\"AggregateStatesEnumeration\\\";\\n    bamm:dataType xsd:string;\\n    bamm:description \\\"An enumeration of possible aggregate states\\\"@en;\\n    bamm-c:values (\\\"gas\\\" \\\"liquid\\\" \\\"solid\\\").\\n:weight a bamm:Property;\\n    bamm:name \\\"weight\\\";\\n    bamm:characteristic :Weight.\\n:Weight a bamm-c:Quantifiable;\\n    bamm:name \\\"Weight\\\";\\n    bamm:dataType xsd:double;\\n    bamm:description \\\"Weight of the material\\\"@en;\\n    bamm-c:unit unit:kilogram.\\n:chemicalCompositionFraction a bamm:Property;\\n    bamm:name \\\"chemicalCompositionFraction\\\";\\n    bamm:characteristic :Fraction;\\n    bamm:description \\\"Fraction of the material in a chemical composition. Is not set if material is not part of a material composition.\\\"@en;\\n    bamm:exampleValue \\\"0.23\\\"^^xsd:double.\\n:Fraction a bamm:Characteristic;\\n    bamm:name \\\"Fraction\\\";\\n    bamm:dataType xsd:double;\\n    bamm:description \\\"Fraction of something\\\"@en.\\n:Constraint1 a bamm:Constraint;\\n    bamm:name \\\"Constraint1\\\".\\n:Constraint2 a bamm:Constraint;\\n    bamm:name \\\"Constraint2\\\".\\n\",\n    \"private\": false,\n    \"type\": \"BAMM\"\n}"
								},
								"url": {
									"raw": "{{semanticServicesUrl}}/models",
									"host": [
										"{{semanticServicesUrl}}"
									],
									"path": [
										"models"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "The resulting model entry.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "createMovement",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.\\n@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#>.\\n@prefix unit: <urn:bamm:io.openmanufacturing:unit:1.0.0#>.\\n@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#>.\\n@prefix bamm-e: <urn:bamm:io.openmanufacturing:entity:1.0.0#>.\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.\\n@prefix : <urn:bamm:com.catenax:0.0.2#>.\\n \\n:Movement a bamm:Aspect ;\\n    bamm:name \\\"Movement\\\" ;\\n    bamm:preferredName \\\"Movement\\\"@en ;\\n    bamm:description \\\"Aspect for movement information\\\"@en ;\\n    bamm:properties ( :moving :speedLimitWarning :position ) ;\\n    bamm:operations ( ) .\\n \\n:moving a bamm:Property ;\\n    bamm:name \\\"moving\\\" ;\\n    bamm:preferredName \\\"Moving\\\"@en ;\\n    bamm:description \\\"Flag indicating if the position is changing\\\"@en ;\\n    bamm:characteristic bamm-c:Boolean .\\n \\n:speedLimitWarning a bamm:Property ;\\n    bamm:name \\\"speedLimitWarning\\\" ;\\n    bamm:preferredName \\\"Speed Limit Warning\\\"@en ;\\n    bamm:description \\\"Indicats if speed limit is adhered to.\\\"@en ;\\n    bamm:characteristic :WarningLevel .\\n \\n:position a bamm:Property ;\\n    bamm:name \\\"position\\\" ;\\n    bamm:preferredName \\\"Position\\\"@en ;\\n    bamm:description \\\"Indicates a position\\\"@en ;\\n    bamm:characteristic [\\n                          a bamm-c:SingleEntity ;\\n                          bamm:name \\\"SpatialPositionCharacteristic\\\" ;\\n                          bamm:preferredName \\\"Spatial Position Characteristic\\\"@en ;\\n                          bamm:description \\\"Represents a single location in space.\\\"@en ;\\n                          bamm:dataType :SpatialPosition\\n                      ] .\\n \\n:WarningLevel a bamm-c:Enumeration ;\\n    bamm:name \\\"WarningLevel\\\" ;\\n    bamm:preferredName \\\"Warning Level\\\"@en ;\\n    bamm:description \\\"Represents if speed of position change is within specification (green), within tolerance (yellow), or outside specification (red).\\\"@en ;\\n    bamm:dataType xsd:string ;\\n    bamm-c:values ( \\\"green\\\" \\\"yellow\\\" \\\"red\\\" ) .\\n \\n:SpatialPosition a bamm:Entity ;\\n    bamm:name \\\"SpatialPosition\\\" ;\\n    bamm:preferredName \\\"Spatial Position\\\"@en ;\\n    bamm:description \\\"Position in space, described along three axis, with the third axis optional, if all positions are in a plane.\\\"@en ;\\n    bamm:properties ( :x :y [ bamm:property :z; bamm:optional true ] ) .\\n \\n:x a bamm:Property ;\\n    bamm:name \\\"x\\\" ;\\n    bamm:preferredName \\\"x\\\"@en ;\\n    bamm:description \\\"x coordinate in space\\\"@en ;\\n    bamm:characteristic :Coordinate .\\n \\n:y a bamm:Property ;\\n    bamm:name \\\"y\\\" ;\\n    bamm:preferredName \\\"y\\\"@en ;\\n    bamm:description \\\"y coordinate in space\\\"@en ;\\n    bamm:characteristic :Coordinate .\\n \\n:z a bamm:Property ;\\n    bamm:name \\\"z\\\" ;\\n    bamm:preferredName \\\"z\\\"@en ;\\n    bamm:description \\\"z coordinate in space\\\"@en ;\\n    bamm:characteristic :Coordinate .\\n \\n:Coordinate a bamm-c:Measurement ;\\n    bamm:name \\\"Coordinate\\\" ;\\n    bamm:preferredName \\\"Coordinate\\\"@en ;\\n    bamm:description \\\"Represents a coordinate along an axis in space.\\\"@en ;\\n    bamm:dataType xsd:float ;\\n    bamm-c:unit unit:metre .\",\n    \"private\": false,\n    \"type\": \"BAMM\",\n    \"publisher\":\"ME\",\n    \"status\":\"DRAFT\"\n}"
								},
								"url": {
									"raw": "{{semanticServicesUrl}}/models",
									"host": [
										"{{semanticServicesUrl}}"
									],
									"path": [
										"models"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "The resulting model entry.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "modifyMaterial",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.\\n@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#>.\\n@prefix unit: <urn:bamm:io.openmanufacturing:unit:1.0.0#>.\\n@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#>.\\n@prefix bamm-e: <urn:bamm:io.openmanufacturing:entity:1.0.0#>.\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.\\n@prefix : <urn:bamm:com.catenaX:0.0.1#>.\\n\\n:Material a bamm:Aspect;\\n    bamm:name \\\"Material\\\";\\n    bamm:operations ();\\n    bamm:properties (:materialDetails).\\n:materialDetails a bamm:Property;\\n    bamm:name \\\"materialDetails\\\";\\n    bamm:characteristic :MaterialCharacteristic.\\n:MaterialCharacteristic a bamm:Characteristic;\\n    bamm:name \\\"MaterialCharacteristic\\\";\\n    bamm:dataType :MaterialEntity.\\n:MaterialEntity a bamm:Entity;\\n    bamm:name \\\"MaterialEntity\\\";\\n    bamm:properties (:materialName :materialType :aggregateState [\\n  bamm:property :chemicalComposition;\\n  bamm:optional \\\"true\\\"^^xsd:boolean\\n] :weight [\\n  bamm:property :chemicalCompositionFraction;\\n  bamm:optional \\\"true\\\"^^xsd:boolean\\n]).\\n:materialName a bamm:Property;\\n    bamm:name \\\"materialName\\\";\\n    bamm:characteristic :MaterialNamesEnumeration;\\n    bamm:description \\\"The name of a material\\\"@en;\\n    bamm:exampleValue \\\"aluminium\\\".\\n:materialType a bamm:Property;\\n    bamm:name \\\"materialType\\\";\\n    bamm:characteristic :MaterialTypesEnumeration;\\n    bamm:description \\\"The type of a material\\\"@en;\\n    bamm:exampleValue \\\"metal\\\".\\n:aggregateState a bamm:Property;\\n    bamm:name \\\"aggregateState\\\";\\n    bamm:characteristic :AggregateStatesEnumeration;\\n    bamm:description \\\"The aggregate state of a material at ambient conditions\\\"@en;\\n    bamm:exampleValue \\\"solid\\\".\\n:chemicalComposition a bamm:Property;\\n    bamm:name \\\"chemicalComposition\\\";\\n    bamm:characteristic :materialCollection.\\n:materialCollection a bamm-c:Collection;\\n    bamm:name \\\"materialCollection\\\";\\n    bamm-c:elementCharacteristic :MaterialCharacteristic.\\n:MaterialNamesEnumeration a bamm-c:Enumeration;\\n    bamm:name \\\"MaterialNamesEnumeration\\\";\\n    bamm:dataType xsd:string;\\n    bamm:description \\\"An enumeration of possible material names\\\"@en;\\n    bamm-c:values (\\\"aluminium\\\" \\\"polyamide\\\" \\\"composite\\\" \\\"synthetic rubber\\\" \\\"chromed plastic\\\" \\\"others\\\" \\\"Aluminium (Metall)\\\" \\\"Anode Copper\\\" \\\"Carbon Steel (1008)\\\" \\\"Cathode Aluminium\\\" \\\"Composite\\\" \\\"Copper\\\" \\\"Eisen\\\" \\\"Kleber\\\" \\\"Material_1768\\\" \\\"Material_23315\\\" \\\"Material_2812\\\" \\\"Material_2889\\\" \\\"Material_3367\\\" \\\"Material_728088751\\\" \\\"Material_781\\\" \\\"Material_9999\\\" \\\"Paraffinwachse und Kohlenwasserstoffwachse, oxidiert, Lithiumsalze\\\" \\\"Polyamid 6\\\" \\\"Polyethylen\\\").\\n:MaterialTypesEnumeration a bamm-c:Enumeration;\\n    bamm:name \\\"MaterialTypesEnumeration\\\";\\n    bamm:dataType xsd:string;\\n    bamm:description \\\"An enumeration of possible types of a material\\\"@en;\\n    bamm-c:values (\\\"metal\\\" \\\"plastic\\\" \\\"composite\\\" \\\"rubber\\\" \\\"other\\\" \\\"Adhesives, sealants\\\" \\\"Aluminium and aluminium alloys\\\" \\\"Composite\\\" \\\"Copper\\\" \\\"Lubricants\\\" \\\"Plastics\\\" \\\"Steels / cast steels / sintered steel\\\" \\\"Washing water, battery acids\\\" \\\"highly alloyed\\\").\\n:AggregateStatesEnumeration a bamm-c:Enumeration;\\n    bamm:name \\\"AggregateStatesEnumeration\\\";\\n    bamm:dataType xsd:string;\\n    bamm:description \\\"An enumeration of possible aggregate states\\\"@en;\\n    bamm-c:values (\\\"gas\\\" \\\"liquid\\\" \\\"solid\\\").\\n:weight a bamm:Property;\\n    bamm:name \\\"weight\\\";\\n    bamm:characteristic :Weight.\\n:Weight a bamm-c:Quantifiable;\\n    bamm:name \\\"Weight\\\";\\n    bamm:dataType xsd:double;\\n    bamm:description \\\"Weight of the material\\\"@en;\\n    bamm-c:unit unit:kilogram.\\n:chemicalCompositionFraction a bamm:Property;\\n    bamm:name \\\"chemicalCompositionFraction\\\";\\n    bamm:characteristic :Fraction;\\n    bamm:description \\\"Fraction of the material in a chemical composition. Is not set if material is not part of a material composition.\\\"@en;\\n    bamm:exampleValue \\\"0.23\\\"^^xsd:double.\\n:Fraction a bamm:Characteristic;\\n    bamm:name \\\"Fraction\\\";\\n    bamm:dataType xsd:double;\\n    bamm:description \\\"Fraction of something\\\"@en.\\n:Constraint1 a bamm:Constraint;\\n    bamm:name \\\"Constraint1\\\".\\n:Constraint2 a bamm:Constraint;\\n    bamm:name \\\"Constraint2\\\".\\n\",\n    \"private\": false,\n    \"type\": \"BAMM\"\n}"
								},
								"url": {
									"raw": "{{semanticServicesUrl}}/models",
									"host": [
										"{{semanticServicesUrl}}"
									],
									"path": [
										"models"
									]
								}
							},
							"response": [
								{
									"name": "The resulting model entry.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models/:model-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models",
												":model-id"
											],
											"variable": [
												{
													"key": "model-id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models/:model-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models",
												":model-id"
											],
											"variable": [
												{
													"key": "model-id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models/:model-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models",
												":model-id"
											],
											"variable": [
												{
													"key": "model-id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models/:model-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models",
												":model-id"
											],
											"variable": [
												{
													"key": "model-id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models/:model-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models",
												":model-id"
											],
											"variable": [
												{
													"key": "model-id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models/:model-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models",
												":model-id"
											],
											"variable": [
												{
													"key": "model-id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models/:model-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models",
												":model-id"
											],
											"variable": [
												{
													"key": "model-id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Twin Registry",
					"item": [
						{
							"name": "{twin id}",
							"item": [
								{
									"name": "Get Twin By Id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/twins/:twin_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"twins",
												":twin_id"
											],
											"variable": [
												{
													"key": "twin_id",
													"value": "do",
													"description": "(Required) twin_id"
												}
											]
										}
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/twins/:twin_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"twins",
														":twin_id"
													],
													"variable": [
														{
															"key": "twin_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"aspects\": [\n  {\n   \"httpEndpoints\": [\n    {\n     \"id\": \"velit Excepteur deserunt\",\n     \"method\": \"GET\",\n     \"url\": \"minim veniam\"\n    },\n    {\n     \"id\": \"nulla elit officia deserunt reprehenderit\",\n     \"method\": \"GET\",\n     \"url\": \"esse minim cupidatat sunt et\"\n    }\n   ],\n   \"id\": \"ex in\",\n   \"modelReference\": {\n    \"urn\": \"eu\"\n   }\n  },\n  {\n   \"httpEndpoints\": [\n    {\n     \"id\": \"laboris sit\",\n     \"method\": \"GET\",\n     \"url\": \"mollit tempor\"\n    },\n    {\n     \"id\": \"ci\",\n     \"method\": \"GET\",\n     \"url\": \"sunt consectetur laborum et\"\n    }\n   ],\n   \"id\": \"consectetur irure aliquip fugiat labore\",\n   \"modelReference\": {\n    \"urn\": \"qui adipisicing cupidatat nostrud\"\n   }\n  }\n ],\n \"description\": \"dolore\",\n \"id\": \"incididunt\",\n \"localIdentifiers\": [\n  {\n   \"key\": \"pariatur voluptate\",\n   \"value\": \"esse ea dolore fugiat\"\n  },\n  {\n   \"key\": \"cillum adipisicing esse\",\n   \"value\": \"Duis in\"\n  }\n ],\n \"manufacturer\": \"sunt est sint officia\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/twins/:twin_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"twins",
														":twin_id"
													],
													"variable": [
														{
															"key": "twin_id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/twins/:twin_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"twins",
														":twin_id"
													],
													"variable": [
														{
															"key": "twin_id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Twin not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/twins/:twin_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"twins",
														":twin_id"
													],
													"variable": [
														{
															"key": "twin_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete Twin",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{semanticServicesUrl}}/twins/:twin_id",
											"host": [
												"{{semanticServicesUrl}}"
											],
											"path": [
												"twins",
												":twin_id"
											],
											"variable": [
												{
													"key": "twin_id",
													"value": "d5406556-7457-47c1-bc41-be136310563f",
													"description": "(Required) twin_id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/twins/:twin_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"twins",
														":twin_id"
													],
													"variable": [
														{
															"key": "twin_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/twins/:twin_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"twins",
														":twin_id"
													],
													"variable": [
														{
															"key": "twin_id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/twins/:twin_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"twins",
														":twin_id"
													],
													"variable": [
														{
															"key": "twin_id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/twins/:twin_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"twins",
														":twin_id"
													],
													"variable": [
														{
															"key": "twin_id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Twin not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/twins/:twin_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"twins",
														":twin_id"
													],
													"variable": [
														{
															"key": "twin_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get Twin By Query",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{semanticServicesUrl}}/twins",
									"host": [
										"{{semanticServicesUrl}}"
									],
									"path": [
										"twins"
									],
									"query": [
										{
											"key": "key",
											"value": "do",
											"description": "key",
											"disabled": true
										},
										{
											"key": "value",
											"value": "do",
											"description": "value",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/twins?key=do&value=do",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"twins"
											],
											"query": [
												{
													"key": "key",
													"value": "do"
												},
												{
													"key": "value",
													"value": "do"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"currentPage\": -8325849,\n \"itemCount\": 64447747,\n \"items\": [\n  {\n   \"aspects\": [\n    {\n     \"httpEndpoints\": [\n      {\n       \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"method\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"method\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"id\": \"dolore Excepteur Ut ex eiusmod\",\n     \"modelReference\": {\n      \"urn\": \"minim enim tempor\"\n     }\n    },\n    {\n     \"httpEndpoints\": [\n      {\n       \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"method\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"method\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"id\": \"tempor exercitation\",\n     \"modelReference\": {\n      \"urn\": \"eiusmod consectetur veniam\"\n     }\n    }\n   ],\n   \"description\": \"ipsum magna\",\n   \"id\": \"aute eiusmod Lorem esse\",\n   \"localIdentifiers\": [\n    {\n     \"key\": \"laborum\",\n     \"value\": \"aliquip sunt consectetur in\"\n    },\n    {\n     \"key\": \"labore cillum quis velit\",\n     \"value\": \"sit ut in exercitation\"\n    }\n   ],\n   \"manufacturer\": \"nulla\"\n  },\n  {\n   \"aspects\": [\n    {\n     \"httpEndpoints\": [\n      {\n       \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"method\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"method\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"id\": \"pariatur deserunt minim\",\n     \"modelReference\": {\n      \"urn\": \"officia exercitation fugiat dolor ea\"\n     }\n    },\n    {\n     \"httpEndpoints\": [\n      {\n       \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"method\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"method\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"id\": \"amet ipsum\",\n     \"modelReference\": {\n      \"urn\": \"aliquip nostrud consectetur et\"\n     }\n    }\n   ],\n   \"description\": \"deserun\",\n   \"id\": \"fugiat exercitation dolore sunt\",\n   \"localIdentifiers\": [\n    {\n     \"key\": \"in\",\n     \"value\": \"exercitation dolor laboris in\"\n    },\n    {\n     \"key\": \"in nulla sunt in ut\",\n     \"value\": \"adipisicing laboris ullamco magna\"\n    }\n   ],\n   \"manufacturer\": \"sint nostrud magna officia amet\"\n  }\n ],\n \"totalItems\": 93718325,\n \"totalPages\": -42995641\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/twins?key=do&value=do",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"twins"
											],
											"query": [
												{
													"key": "key",
													"value": "do"
												},
												{
													"key": "value",
													"value": "do"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/twins?key=do&value=do",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"twins"
											],
											"query": [
												{
													"key": "key",
													"value": "do"
												},
												{
													"key": "value",
													"value": "do"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/twins?key=do&value=do",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"twins"
											],
											"query": [
												{
													"key": "key",
													"value": "do"
												},
												{
													"key": "value",
													"value": "do"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create Twin(s)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n   {\n    \"id\":\"f80e22b0-34a9-4740-a434-9c74e47f6136\",\n    \"aspects\": [\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"GET\",\n                    \"url\": \"urn:Vocabulary:com.ids:Connector?recipient=https://w3id.org/idsa/autogen/connectorEndpoint/a73d2202-cb77-41db-a3a6-05ed251c0b8a&offer=offer-tdm&representation=bom-aspect&artifact=bom-vehicle\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"urn:bamm:com.catenaX:0.0.1#Traceability\"\n            }\n        },\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"GET\",\n                    \"url\": \"urn:Vocabulary:com.ids:Connector?recipient=https://w3id.org/idsa/autogen/connectorEndpoint/a73d2202-cb77-41db-a3a6-05ed251c0b8a&offer=offer-tdm&representation=material-aspect&artifact=material-vehicle\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"urn:bamm:com.catenaX:0.0.1#Material\"\n            }\n        }\n    ],\n    \"description\": \"OEM E-LINE 42.20b EU5\",\n    \"localIdentifiers\": [\n        {\n            \"key\": \"urn:vehicle:org.schema:vin\",\n            \"value\": \"WBABW33496PX84330\"\n        },\n        {\n            \"key\": \"urn:bom:com.oem:partid\",\n            \"value\": \"8a1633c0dd7d75ef77c05dd80ada991f\"\n        },\n        {\n            \"key\": \"urn:openid:net.catena-x:nodeid\",\n            \"value\": \"8a1633c0dd7d75ef77c05dd80ada991f\"\n        }\n    ],\n    \"manufacturer\": \"Orig. Equipment Manufacturer\"\n},{\n    \"id\":\"3c7556f7-6956-4360-8036-d03e5a79c3c8\",\n    \"aspects\": [\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"GET\",\n                    \"url\": \"urn:Vocabulary:com.ids:Connector?recipient=https://w3id.org/idsa/autogen/connectorEndpoint/a73d2202-cb77-41db-a3a6-05ed251c0b8a&offer=offer-windchill&representation=bom-aspect&artifact=bom-brake\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"urn:bamm:com.catenaX:0.0.1#Traceability\"\n            }\n        },\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"GET\",\n                    \"url\": \"urn:Vocabulary:com.ids:Connector?recipient=https://w3id.org/idsa/autogen/connectorEndpoint/a73d2202-cb77-41db-a3a6-05ed251c0b8a&offer=offer-windchill&representation=material-aspect&artifact=material-brake\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"urn:bamm:com.catenaX:0.0.1#Material\"\n            }\n        }\n    ],\n    \"description\": \"brake_dt_2019_snr.asm\",\n    \"localIdentifiers\": [\n        {\n            \"key\": \"http://pwc.t-systems.com/datamodel/common\",\n            \"value\": \"0000000251\"\n        },\n        {\n            \"key\": \"VR:wt.part.WTPart\",\n            \"value\": \"25054146@nis11c130.epdm-d.edm.dsh.de\"\n        }\n    ],\n    \"manufacturer\": \"T-Systems International GmbH\"\n}\n]"
								},
								"url": {
									"raw": "{{semanticServicesUrl}}/twins",
									"host": [
										"{{semanticServicesUrl}}"
									],
									"path": [
										"twins"
									]
								}
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"aspects\": [\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"laboris Lorem\"\n                },\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"id\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"id ullamco anim\"\n            }\n        },\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"sint minim\"\n                },\n                {\n                    \"method\": \"GET\",\n                    \"url\": \"sint sed exercitation Duis consequat\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"proident magna voluptate pariatur\"\n            }\n        }\n    ],\n    \"description\": \"ex eli\",\n    \"localIdentifiers\": [\n        {\n            \"key\": \"veniam ea\",\n            \"value\": \"consequat magna\"\n        },\n        {\n            \"key\": \"anim eu\",\n            \"value\": \"cupidatat id et laborum\"\n        }\n    ],\n    \"manufacturer\": \"cupidatat Ut\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/twins",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"twins"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"aspects\": [\n  {\n   \"httpEndpoints\": [\n    {\n     \"id\": \"velit Excepteur deserunt\",\n     \"method\": \"GET\",\n     \"url\": \"minim veniam\"\n    },\n    {\n     \"id\": \"nulla elit officia deserunt reprehenderit\",\n     \"method\": \"GET\",\n     \"url\": \"esse minim cupidatat sunt et\"\n    }\n   ],\n   \"id\": \"ex in\",\n   \"modelReference\": {\n    \"urn\": \"eu\"\n   }\n  },\n  {\n   \"httpEndpoints\": [\n    {\n     \"id\": \"laboris sit\",\n     \"method\": \"GET\",\n     \"url\": \"mollit tempor\"\n    },\n    {\n     \"id\": \"ci\",\n     \"method\": \"GET\",\n     \"url\": \"sunt consectetur laborum et\"\n    }\n   ],\n   \"id\": \"consectetur irure aliquip fugiat labore\",\n   \"modelReference\": {\n    \"urn\": \"qui adipisicing cupidatat nostrud\"\n   }\n  }\n ],\n \"description\": \"dolore\",\n \"id\": \"incididunt\",\n \"localIdentifiers\": [\n  {\n   \"key\": \"pariatur voluptate\",\n   \"value\": \"esse ea dolore fugiat\"\n  },\n  {\n   \"key\": \"cillum adipisicing esse\",\n   \"value\": \"Duis in\"\n  }\n ],\n \"manufacturer\": \"sunt est sint officia\"\n}"
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"aspects\": [\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"laboris Lorem\"\n                },\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"id\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"id ullamco anim\"\n            }\n        },\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"sint minim\"\n                },\n                {\n                    \"method\": \"GET\",\n                    \"url\": \"sint sed exercitation Duis consequat\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"proident magna voluptate pariatur\"\n            }\n        }\n    ],\n    \"description\": \"ex eli\",\n    \"localIdentifiers\": [\n        {\n            \"key\": \"veniam ea\",\n            \"value\": \"consequat magna\"\n        },\n        {\n            \"key\": \"anim eu\",\n            \"value\": \"cupidatat id et laborum\"\n        }\n    ],\n    \"manufacturer\": \"cupidatat Ut\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/twins",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"twins"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"aspects\": [\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"laboris Lorem\"\n                },\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"id\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"id ullamco anim\"\n            }\n        },\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"sint minim\"\n                },\n                {\n                    \"method\": \"GET\",\n                    \"url\": \"sint sed exercitation Duis consequat\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"proident magna voluptate pariatur\"\n            }\n        }\n    ],\n    \"description\": \"ex eli\",\n    \"localIdentifiers\": [\n        {\n            \"key\": \"veniam ea\",\n            \"value\": \"consequat magna\"\n        },\n        {\n            \"key\": \"anim eu\",\n            \"value\": \"cupidatat id et laborum\"\n        }\n    ],\n    \"manufacturer\": \"cupidatat Ut\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/twins",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"twins"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"details\": {},\n  \"message\": \"size must be between {min} and {max}\",\n  \"path\": \"aliquip incididunt Duis amet ullamco\"\n }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"aspects\": [\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"laboris Lorem\"\n                },\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"id\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"id ullamco anim\"\n            }\n        },\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"sint minim\"\n                },\n                {\n                    \"method\": \"GET\",\n                    \"url\": \"sint sed exercitation Duis consequat\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"proident magna voluptate pariatur\"\n            }\n        }\n    ],\n    \"description\": \"ex eli\",\n    \"localIdentifiers\": [\n        {\n            \"key\": \"veniam ea\",\n            \"value\": \"consequat magna\"\n        },\n        {\n            \"key\": \"anim eu\",\n            \"value\": \"cupidatat id et laborum\"\n        }\n    ],\n    \"manufacturer\": \"cupidatat Ut\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/twins",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"twins"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"aspects\": [\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"laboris Lorem\"\n                },\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"id\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"id ullamco anim\"\n            }\n        },\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"sint minim\"\n                },\n                {\n                    \"method\": \"GET\",\n                    \"url\": \"sint sed exercitation Duis consequat\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"proident magna voluptate pariatur\"\n            }\n        }\n    ],\n    \"description\": \"ex eli\",\n    \"localIdentifiers\": [\n        {\n            \"key\": \"veniam ea\",\n            \"value\": \"consequat magna\"\n        },\n        {\n            \"key\": \"anim eu\",\n            \"value\": \"cupidatat id et laborum\"\n        }\n    ],\n    \"manufacturer\": \"cupidatat Ut\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/twins",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"twins"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"aspects\": [\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"laboris Lorem\"\n                },\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"id\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"id ullamco anim\"\n            }\n        },\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"sint minim\"\n                },\n                {\n                    \"method\": \"GET\",\n                    \"url\": \"sint sed exercitation Duis consequat\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"proident magna voluptate pariatur\"\n            }\n        }\n    ],\n    \"description\": \"ex eli\",\n    \"localIdentifiers\": [\n        {\n            \"key\": \"veniam ea\",\n            \"value\": \"consequat magna\"\n        },\n        {\n            \"key\": \"anim eu\",\n            \"value\": \"cupidatat id et laborum\"\n        }\n    ],\n    \"manufacturer\": \"cupidatat Ut\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/twins",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"twins"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create Another Twin",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": \"26db6de8-74e9-4350-94c2-91ff6c26d5c3\",\n        \"description\": \"LI-ION ZELLE Z10 PHEV1 34AH U3.0 LF2 RPT\",\n        \"manufacturer\": \"SAMSUNG\",\n        \"localIdentifiers\": [\n            {\n                \"key\": \"urn:bom:com.BMW:part-serial\",\n                \"value\": \"884460401223478102102052716201036072\"\n            },\n            {\n                \"key\": \"urn:bom:com.SAMSUNG:part-number\",\n                \"value\": \"8844604-01\"\n            }\n        ],\n        \"aspects\": [\n            {\n                \"modelReference\": {\n                    \"urn\": \"urn:bamm:com.catenaX:0.0.1#Traceability\"\n                },\n                \"httpEndpoints\": [\n                    {\n                        \"method\": \"GET\",\n                        \"url\": \"urn:connector:com.ids:CallingContext?recipient=https://w3id.org/idsa/autogen/connectorEndpoint/a73d2202-cb77-41db-a3a6-05ed251c0b8a&offer=offer-tdm&representation=bom-aspect&artifact=bom-vehicle&manufacturer=SAMSUNG&serial=884460401223478102102052716201036072\"\n                    }\n                ]\n            },\n            {\n                \"modelReference\": {\n                    \"urn\": \"urn:bamm:com.catenaX:0.0.1#Material\"\n                },\n                \"httpEndpoints\": [\n                    {\n                        \"method\": \"GET\",\n                        \"url\": \"urn:connector:com.ids:CallingContext?recipient=https://w3id.org/idsa/autogen/connectorEndpoint/a73d2202-cb77-41db-a3a6-05ed251c0b8a&offer=offer-tdm&representation=material-aspect&artifact=material-vehicle&manufacturer=SAMSUNG&number=8844604-01\"\n                    }\n                ]\n            },\n            {\n                \"modelReference\": {\n                    \"urn\": \"urn:bamm:com.catenaX:1.0.0#DigitalTwin\"\n                },\n                \"httpEndpoints\": [\n                    {\n                        \"method\": \"GET\",\n                        \"url\": \"https://catenaxintakssrv.germanywestcentral.cloudapp.azure.com/semantics/api/v1/twins/26db6de8-74e9-4350-94c2-91ff6c26d5c3\"\n                    }\n                ]\n            }\n        ]\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{semanticServicesUrl}}/twins",
									"host": [
										"{{semanticServicesUrl}}"
									],
									"path": [
										"twins"
									]
								}
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"aspects\": [\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"laboris Lorem\"\n                },\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"id\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"id ullamco anim\"\n            }\n        },\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"sint minim\"\n                },\n                {\n                    \"method\": \"GET\",\n                    \"url\": \"sint sed exercitation Duis consequat\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"proident magna voluptate pariatur\"\n            }\n        }\n    ],\n    \"description\": \"ex eli\",\n    \"localIdentifiers\": [\n        {\n            \"key\": \"veniam ea\",\n            \"value\": \"consequat magna\"\n        },\n        {\n            \"key\": \"anim eu\",\n            \"value\": \"cupidatat id et laborum\"\n        }\n    ],\n    \"manufacturer\": \"cupidatat Ut\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/twins",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"twins"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"aspects\": [\n  {\n   \"httpEndpoints\": [\n    {\n     \"id\": \"velit Excepteur deserunt\",\n     \"method\": \"GET\",\n     \"url\": \"minim veniam\"\n    },\n    {\n     \"id\": \"nulla elit officia deserunt reprehenderit\",\n     \"method\": \"GET\",\n     \"url\": \"esse minim cupidatat sunt et\"\n    }\n   ],\n   \"id\": \"ex in\",\n   \"modelReference\": {\n    \"urn\": \"eu\"\n   }\n  },\n  {\n   \"httpEndpoints\": [\n    {\n     \"id\": \"laboris sit\",\n     \"method\": \"GET\",\n     \"url\": \"mollit tempor\"\n    },\n    {\n     \"id\": \"ci\",\n     \"method\": \"GET\",\n     \"url\": \"sunt consectetur laborum et\"\n    }\n   ],\n   \"id\": \"consectetur irure aliquip fugiat labore\",\n   \"modelReference\": {\n    \"urn\": \"qui adipisicing cupidatat nostrud\"\n   }\n  }\n ],\n \"description\": \"dolore\",\n \"id\": \"incididunt\",\n \"localIdentifiers\": [\n  {\n   \"key\": \"pariatur voluptate\",\n   \"value\": \"esse ea dolore fugiat\"\n  },\n  {\n   \"key\": \"cillum adipisicing esse\",\n   \"value\": \"Duis in\"\n  }\n ],\n \"manufacturer\": \"sunt est sint officia\"\n}"
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"aspects\": [\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"laboris Lorem\"\n                },\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"id\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"id ullamco anim\"\n            }\n        },\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"sint minim\"\n                },\n                {\n                    \"method\": \"GET\",\n                    \"url\": \"sint sed exercitation Duis consequat\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"proident magna voluptate pariatur\"\n            }\n        }\n    ],\n    \"description\": \"ex eli\",\n    \"localIdentifiers\": [\n        {\n            \"key\": \"veniam ea\",\n            \"value\": \"consequat magna\"\n        },\n        {\n            \"key\": \"anim eu\",\n            \"value\": \"cupidatat id et laborum\"\n        }\n    ],\n    \"manufacturer\": \"cupidatat Ut\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/twins",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"twins"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"aspects\": [\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"laboris Lorem\"\n                },\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"id\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"id ullamco anim\"\n            }\n        },\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"sint minim\"\n                },\n                {\n                    \"method\": \"GET\",\n                    \"url\": \"sint sed exercitation Duis consequat\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"proident magna voluptate pariatur\"\n            }\n        }\n    ],\n    \"description\": \"ex eli\",\n    \"localIdentifiers\": [\n        {\n            \"key\": \"veniam ea\",\n            \"value\": \"consequat magna\"\n        },\n        {\n            \"key\": \"anim eu\",\n            \"value\": \"cupidatat id et laborum\"\n        }\n    ],\n    \"manufacturer\": \"cupidatat Ut\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/twins",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"twins"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"details\": {},\n  \"message\": \"size must be between {min} and {max}\",\n  \"path\": \"aliquip incididunt Duis amet ullamco\"\n }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"aspects\": [\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"laboris Lorem\"\n                },\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"id\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"id ullamco anim\"\n            }\n        },\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"sint minim\"\n                },\n                {\n                    \"method\": \"GET\",\n                    \"url\": \"sint sed exercitation Duis consequat\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"proident magna voluptate pariatur\"\n            }\n        }\n    ],\n    \"description\": \"ex eli\",\n    \"localIdentifiers\": [\n        {\n            \"key\": \"veniam ea\",\n            \"value\": \"consequat magna\"\n        },\n        {\n            \"key\": \"anim eu\",\n            \"value\": \"cupidatat id et laborum\"\n        }\n    ],\n    \"manufacturer\": \"cupidatat Ut\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/twins",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"twins"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"aspects\": [\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"laboris Lorem\"\n                },\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"id\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"id ullamco anim\"\n            }\n        },\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"sint minim\"\n                },\n                {\n                    \"method\": \"GET\",\n                    \"url\": \"sint sed exercitation Duis consequat\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"proident magna voluptate pariatur\"\n            }\n        }\n    ],\n    \"description\": \"ex eli\",\n    \"localIdentifiers\": [\n        {\n            \"key\": \"veniam ea\",\n            \"value\": \"consequat magna\"\n        },\n        {\n            \"key\": \"anim eu\",\n            \"value\": \"cupidatat id et laborum\"\n        }\n    ],\n    \"manufacturer\": \"cupidatat Ut\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/twins",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"twins"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"aspects\": [\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"laboris Lorem\"\n                },\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"id\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"id ullamco anim\"\n            }\n        },\n        {\n            \"httpEndpoints\": [\n                {\n                    \"method\": \"POST\",\n                    \"url\": \"sint minim\"\n                },\n                {\n                    \"method\": \"GET\",\n                    \"url\": \"sint sed exercitation Duis consequat\"\n                }\n            ],\n            \"modelReference\": {\n                \"urn\": \"proident magna voluptate pariatur\"\n            }\n        }\n    ],\n    \"description\": \"ex eli\",\n    \"localIdentifiers\": [\n        {\n            \"key\": \"veniam ea\",\n            \"value\": \"consequat magna\"\n        },\n        {\n            \"key\": \"anim eu\",\n            \"value\": \"cupidatat id et laborum\"\n        }\n    ],\n    \"manufacturer\": \"cupidatat Ut\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/twins",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"twins"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Semantic Adapter",
					"item": [
						{
							"name": "Hello",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{semanticAdapterUrl}}/adapter/hello",
									"host": [
										"{{semanticAdapterUrl}}"
									],
									"path": [
										"adapter",
										"hello"
									]
								},
								"description": "Returns greetings to make sure basic service connection works."
							},
							"response": []
						},
						{
							"name": "Test IDS Connectivity",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{semanticAdapterUrl}}/adapter/idsinfo",
									"host": [
										"{{semanticAdapterUrl}}"
									],
									"path": [
										"adapter",
										"idsinfo"
									]
								},
								"description": "Returns the self-description of the attached IDS connector.\nThis helps to find out whether IDS connection is alive."
							},
							"response": []
						},
						{
							"name": "Download File",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{semanticAdapterUrl}}/adapter/download?representation=bom-aspect&offer=offer-tdm&source=bom-vehicle&manufacturer=BMW&number=31BK&serial=ABOlhjidrBYndEZPJ9xXZzH2MbSBHI6EzfO6UF8AnnHvFKWBTTO5MrhHXUgTHmNhz9SAn3qxGSIbLGI14K3FhHGzVNMawdOeaItJ0EeNy4Mi3g",
									"host": [
										"{{semanticAdapterUrl}}"
									],
									"path": [
										"adapter",
										"download"
									],
									"query": [
										{
											"key": "file",
											"value": "Bremse_Windchill.xml",
											"description": "uses a fixed file source for debugging",
											"disabled": true
										},
										{
											"key": "transformation",
											"value": "dcx2material.xsl",
											"description": "uses a fixed transformation for debugging",
											"disabled": true
										},
										{
											"key": "transformation",
											"value": "dcx2bom.xsl",
											"description": "uses a fixed transformation for debugging",
											"disabled": true
										},
										{
											"key": "transformation",
											"value": "dcx2twin.xsl",
											"description": "uses a fixed transformation for debugging",
											"disabled": true
										},
										{
											"key": "offer",
											"value": "offer-windchill",
											"description": "use a preconfigured offer",
											"disabled": true
										},
										{
											"key": "representation",
											"value": "material-aspect",
											"description": "use a preconfigured representation",
											"disabled": true
										},
										{
											"key": "source",
											"value": "material-brake",
											"description": "use a preconfigured source/artifact",
											"disabled": true
										},
										{
											"key": "representation",
											"value": "bom-aspect",
											"description": "use a preconfigured representation"
										},
										{
											"key": "source",
											"value": "bom-brake",
											"disabled": true
										},
										{
											"key": "offer",
											"value": "offer-tdm",
											"description": "use a preconfigured offer"
										},
										{
											"key": "source",
											"value": "bom-vehicle",
											"description": "use a preconfigured source/artifact"
										},
										{
											"key": "source",
											"value": "material-vehicle",
											"description": "use a preconfigured source/artifact",
											"disabled": true
										},
										{
											"key": "manufacturer",
											"value": "BMW",
											"description": "a key part when addressing data inside the source/artifact"
										},
										{
											"key": "number",
											"value": "31BK",
											"description": "a key part when addressing data inside the source/artifact"
										},
										{
											"key": "serial",
											"value": "ABOlhjidrBYndEZPJ9xXZzH2MbSBHI6EzfO6UF8AnnHvFKWBTTO5MrhHXUgTHmNhz9SAn3qxGSIbLGI14K3FhHGzVNMawdOeaItJ0EeNy4Mi3g",
											"description": "a key part when addressing data inside the source/artifact"
										}
									]
								},
								"description": "The actual \"pull\" callback that is usually called by the IDS connector to satisfy negotiated data requests (represented by the \"offer\", \"representation\" and \"source\" parameteres).\nIt also has a \"local-only\" mode to directly investigate the data delivered from the backend systems (represented by the \"file\" and \"transformation\" parameters."
							},
							"response": []
						},
						{
							"name": "Publish Resource",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Extract Created Agreement\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var offerFull=jsonData.offerUri\r",
											"    console.info(\"Setting environment variable 'offer-full' to \" + offerFull)\r",
											"    pm.environment.set(\"offer-full\", offerFull);\r",
											"    var artifactFull=jsonData.representations[0].artifacts[0]\r",
											"    console.info(\"Setting environment variable 'local-artifact-full' to \" + artifactFull)\r",
											"    pm.environment.set(\"local-artifact-full\", artifactFull);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{semanticAdapterUrl}}/adapter/offer/:offer",
									"host": [
										"{{semanticAdapterUrl}}"
									],
									"path": [
										"adapter",
										"offer",
										":offer"
									],
									"variable": [
										{
											"key": "offer",
											"value": "offer-tdm",
											"description": "Preconfigured or newly registered offer name (offer-tdm/offer-windchill)"
										}
									]
								},
								"description": "Interactively publishes a given offer (with all configured representations and sources) to the attached IDS connector.\nEither uses the given \"offer\" parameter to take the configuration out of the system properties (and leave the body to an empty object)\nAlternatively, you can give it a complete configuration object for the offer in the body.\nthe Adapter may also be configured as to do an \"auto-publish\" of all preconfigured offers on startup"
							},
							"response": []
						},
						{
							"name": "Register Twins",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Extract Created Agreement\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var offerFull=jsonData.offerUri\r",
											"    console.info(\"Setting environment variable 'offer-full' to \" + offerFull)\r",
											"    pm.environment.set(\"offer-full\", offerFull);\r",
											"    var artifactFull=jsonData.representations[0].artifacts[0]\r",
											"    console.info(\"Setting environment variable 'local-artifact-full' to \" + artifactFull)\r",
											"    pm.environment.set(\"local-artifact-full\", artifactFull);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{semanticAdapterUrl}}/adapter/register/:twin-source",
									"host": [
										"{{semanticAdapterUrl}}"
									],
									"path": [
										"adapter",
										"register",
										":twin-source"
									],
									"variable": [
										{
											"key": "twin-source",
											"value": "twin-parts",
											"description": "preconfigured or newly registered twin source (twin-parts/twin-brake)"
										}
									]
								},
								"description": "Interactively publishes a given twin source to the attached twin registry.\nEither uses the given \"twin-source\" parameter to take the configuration out of the system properties (and leave the body to an empty object)\nAlternatively, you can give it a complete configuration object for the source in the body.\nthe Adapter may also be configured as to do an \"auto-registration\" of all preconfigured twin sources on startup"
							},
							"response": []
						}
					],
					"description": "The Semantic Adapter is a simple prototype of a middleware that connects backend systems (here: export files, database tables) to the IDS/Catena-X data backbone.\n\nNeeds Fraunhofer IDS Connector Version 6.\n\nIt currently supports only \"PULL\" offerings/data transfers via the builtin IDS connector"
				}
			]
		},
		{
			"name": "Core Services",
			"item": [
				{
					"name": "Get Business Partner",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serviceUrl}}/businesspartners/businesspartner?businessPartnerOneId=Partner_00001_BOSCH",
							"host": [
								"{{serviceUrl}}"
							],
							"path": [
								"businesspartners",
								"businesspartner"
							],
							"query": [
								{
									"key": "businessPartnerOneId",
									"value": "Partner_00001_BOSCH"
								}
							]
						},
						"description": "Gets basic info about a business partner"
					},
					"response": []
				},
				{
					"name": "Get Connector DNS for Business Partner",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serviceUrl}}/cdns/dns?businessPartnerOneID=Partner_00001_BOSCH",
							"host": [
								"{{serviceUrl}}"
							],
							"path": [
								"cdns",
								"dns"
							],
							"query": [
								{
									"key": "businessPartnerOneID",
									"value": "Partner_00001_BOSCH"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Connector DNS for connector id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serviceUrl}}/cdns/dns?connectorId=956e8672-f217-4c27-84c2-478336dafcba",
							"host": [
								"{{serviceUrl}}"
							],
							"path": [
								"cdns",
								"dns"
							],
							"query": [
								{
									"key": "connectorId",
									"value": "956e8672-f217-4c27-84c2-478336dafcba"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PWC Adapter",
			"item": [
				{
					"name": "Hello",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{pwcAdapterUrl}}/pwc/hello",
							"host": [
								"{{pwcAdapterUrl}}"
							],
							"path": [
								"pwc",
								"hello"
							]
						},
						"description": "Returns greetings to make sure basic service connection works."
					},
					"response": []
				},
				{
					"name": "Test IDS Connectivity",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{pwcAdapterUrl}}/pwc/idsinfo",
							"host": [
								"{{pwcAdapterUrl}}"
							],
							"path": [
								"pwc",
								"idsinfo"
							]
						},
						"description": "Returns the self-description of the attached IDS connector.\nThis helps to find out whether IDS connection is alive."
					},
					"response": []
				},
				{
					"name": "Get Part",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{pwcAdapterUrl}}/pwc/part/:backend/:transformation/:part",
							"host": [
								"{{pwcAdapterUrl}}"
							],
							"path": [
								"pwc",
								"part",
								":backend",
								":transformation",
								":part"
							],
							"query": [
								{
									"key": "file",
									"value": "Bremse_Windchill.xml",
									"description": "uses a fixed file source for debugging",
									"disabled": true
								},
								{
									"key": "transformation",
									"value": "dcx2material.xsl",
									"description": "uses a fixed transformation for debugging",
									"disabled": true
								},
								{
									"key": "transformation",
									"value": "dcx2bom.xsl",
									"description": "uses a fixed transformation for debugging",
									"disabled": true
								},
								{
									"key": "transformation",
									"value": "dcx2twin.xsl",
									"description": "uses a fixed transformation for debugging",
									"disabled": true
								},
								{
									"key": "offer",
									"value": "offer-windchill",
									"description": "use a preconfigured offer",
									"disabled": true
								},
								{
									"key": "representation",
									"value": "material-aspect",
									"description": "use a preconfigured representation",
									"disabled": true
								},
								{
									"key": "source",
									"value": "material-brake",
									"description": "use a preconfigured source/artifact",
									"disabled": true
								},
								{
									"key": "source",
									"value": "bom-brake",
									"disabled": true
								},
								{
									"key": "source",
									"value": "material-vehicle",
									"description": "use a preconfigured source/artifact",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "backend",
									"value": "aras"
								},
								{
									"key": "transformation",
									"value": "aras2tracebility"
								},
								{
									"key": "part",
									"value": "7C78615947BC46E388A0FD3626E1FD8D"
								}
							]
						},
						"description": "The actual \"pull\" callback that is usually called by the IDS connector to satisfy negotiated data requests (represented by the \"offer\", \"representation\" and \"source\" parameteres).\nIt also has a \"local-only\" mode to directly investigate the data delivered from the backend systems (represented by the \"file\" and \"transformation\" parameters."
					},
					"response": []
				},
				{
					"name": "Publish Resource",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Extract Created Agreement\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var offerFull=jsonData.offerUri\r",
									"    console.info(\"Setting environment variable 'offer-full' to \" + offerFull)\r",
									"    pm.environment.set(\"offer-full\", offerFull);\r",
									"    var artifactFull=jsonData.representations[0].artifacts[0]\r",
									"    console.info(\"Setting environment variable 'local-artifact-full' to \" + artifactFull)\r",
									"    pm.environment.set(\"local-artifact-full\", artifactFull);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n    \"name\":\"offer-aras\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{pwcAdapterUrl}}/pwc/register",
							"host": [
								"{{pwcAdapterUrl}}"
							],
							"path": [
								"pwc",
								"register"
							]
						},
						"description": "Interactively publishes a given offer (with all configured representations and sources) to the attached IDS connector.\nEither uses the given \"offer\" parameter to take the configuration out of the system properties (and leave the body to an empty object)\nAlternatively, you can give it a complete configuration object for the offer in the body.\nthe Adapter may also be configured as to do an \"auto-publish\" of all preconfigured offers on startup"
					},
					"response": []
				},
				{
					"name": "Publish Twins",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Extract Created Agreement\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var offerFull=jsonData.offerUri\r",
									"    console.info(\"Setting environment variable 'offer-full' to \" + offerFull)\r",
									"    pm.environment.set(\"offer-full\", offerFull);\r",
									"    var artifactFull=jsonData.representations[0].artifacts[0]\r",
									"    console.info(\"Setting environment variable 'local-artifact-full' to \" + artifactFull)\r",
									"    pm.environment.set(\"local-artifact-full\", artifactFull);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\":\"aras-twins\",\r\n  \"partId\":\"C0C1FA372CA64213AB78FD4E484DBB3F\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{pwcAdapterUrl}}/pwc/registerTwins",
							"host": [
								"{{pwcAdapterUrl}}"
							],
							"path": [
								"pwc",
								"registerTwins"
							]
						},
						"description": "Interactively publishes a given offer (with all configured representations and sources) to the attached IDS connector.\nEither uses the given \"offer\" parameter to take the configuration out of the system properties (and leave the body to an empty object)\nAlternatively, you can give it a complete configuration object for the offer in the body.\nthe Adapter may also be configured as to do an \"auto-publish\" of all preconfigured offers on startup"
					},
					"response": []
				},
				{
					"name": "Download Aspect Implementation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{pwcAdapterUrl}}/pwc/download?backend=aras-part-structure-1&id=9C86450C706F465592D35E35B1DABBE6",
							"host": [
								"{{pwcAdapterUrl}}"
							],
							"path": [
								"pwc",
								"download"
							],
							"query": [
								{
									"key": "transformation",
									"value": "dcx2bom.xsl",
									"description": "uses a fixed transformation for debugging",
									"disabled": true
								},
								{
									"key": "representation",
									"value": "bom-aspect",
									"description": "use a preconfigured representation",
									"disabled": true
								},
								{
									"key": "offer",
									"value": "offer-aras",
									"disabled": true
								},
								{
									"key": "source",
									"value": "aras-bom",
									"disabled": true
								},
								{
									"key": "id",
									"value": "C0C1FA372CA64213AB78FD4E484DBB3F",
									"disabled": true
								},
								{
									"key": "backend",
									"value": "aras-part-structure-1"
								},
								{
									"key": "id",
									"value": "9C86450C706F465592D35E35B1DABBE6"
								}
							]
						},
						"description": "The actual \"pull\" callback that is usually called by the IDS connector to satisfy negotiated data requests (represented by the \"offer\", \"representation\" and \"source\" parameteres).\nIt also has a \"local-only\" mode to directly investigate the data delivered from the backend systems (represented by the \"file\" and \"transformation\" parameters."
					},
					"response": []
				}
			]
		},
		{
			"name": "Portal",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{portalUrl}}",
					"host": [
						"{{portalUrl}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{catenax-password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{catenax-user}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		}
	]
}